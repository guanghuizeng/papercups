[{"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/index.tsx":"1","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/analytics.ts":"2","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/serviceWorker.ts":"3","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/App.tsx":"4","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/AuthProvider.tsx":"5","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/config.ts":"6","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/Login.tsx":"7","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/Register.tsx":"8","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/api.ts":"9","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/storage.ts":"10","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/EmailVerification.tsx":"11","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/RequestPasswordReset.tsx":"12","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/PasswordResetRequested.tsx":"13","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/PasswordReset.tsx":"14","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/Dashboard.tsx":"15","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/Sandbox.tsx":"16","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/demo/Demo.tsx":"17","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/demo/BotDemo.tsx":"18","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/PricingOverview.tsx":"19","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/SharedConversation.tsx":"20","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/landing/LadingPage.tsx":"21","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/logger.tsx":"22","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/utils.ts":"23","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/common.tsx":"24","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/icons.tsx":"25","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/AllConversations.tsx":"26","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationsProvider.tsx":"27","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/PriorityConversations.tsx":"28","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/MyConversations.tsx":"29","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ClosedConversations.tsx":"30","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/BillingOverview.tsx":"31","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/AccountOverview.tsx":"32","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/UserProfile.tsx":"33","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/integrations/IntegrationsOverview.tsx":"34","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/GettingStartedOverview.tsx":"35","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/customers/CustomersPage.tsx":"36","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/InstallingStorytime.tsx":"37","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/LiveSessionViewer.tsx":"38","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/SessionsOverview.tsx":"39","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/ReportingDashboard.tsx":"40","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationMessages.tsx":"41","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/socket.ts":"42","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/DatePicker.tsx":"43","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationsContainer.tsx":"44","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ChatMessage.tsx":"45","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/Spinner.tsx":"46","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/CustomerBreakdownChart.tsx":"47","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/MessagesSentVsReceivedChart.tsx":"48","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/MessagesByDayOfWeekChart.tsx":"49","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/MessagesPerUserChart.tsx":"50","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/MessagesPerDayChart.tsx":"51","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/SessionsTable.tsx":"52","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/ConversationSidebar.tsx":"53","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationDetailsSidebar.tsx":"54","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/customers/CustomersTable.tsx":"55","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/integrations/NewWebhookModal.tsx":"56","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/support.ts":"57","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/integrations/WebhooksTable.tsx":"58","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/integrations/IntegrationsTable.tsx":"59","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/WorkingHoursSelector.tsx":"60","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/types.ts":"61","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/DisabledUsersTable.tsx":"62","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/AccountUsersTable.tsx":"63","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/PaymentForm.tsx":"64","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/support.ts":"65","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/support.ts":"66","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationFooter.tsx":"67","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationClosing.tsx":"68","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ChatMessageBox.tsx":"69","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/SidebarCustomerNotes.tsx":"70","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/customers/CustomerDetailsModal.tsx":"71","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/support.ts":"72","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/SidebarTagSection.tsx":"73","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationItem.tsx":"74","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationHeader.tsx":"75","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/CardInputSection.tsx":"76","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/Dashboard.tsx":"77","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/Header.tsx":"78","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/store/init.ts":"79","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/store/index.tsx":"80","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/store/schema.ts":"81","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventType.tsx":"82","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventTypeEdit.tsx":"83","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventInviteeQuestionsSection.tsx":"84","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventAvailabilitySection.tsx":"85","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventGeneralSection.tsx":"86","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventNotifyPolicy.tsx":"87","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/constants.ts":"88","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/CancelButton.tsx":"89","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/BookingRangeContainer.tsx":"90","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventLocationSelect.tsx":"91","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/ScheduleContainer.tsx":"92","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/Editor.tsx":"93","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/BufferSelector.tsx":"94","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/DurationSelector.tsx":"95","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/hooks/EditingContext.tsx":"96","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/data.ts":"97","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/DatePicker.tsx":"98","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/CheckboxStateless.tsx":"99","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/EditorCore.tsx":"100","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/CircleCheckboxStateless.tsx":"101","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/BookCalendar.tsx":"102","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/Live.tsx":"103","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/Book.tsx":"104","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventsProvider.tsx":"105","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/CreateEventTypeModal.tsx":"106","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/NewEventType.tsx":"107","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/Header.tsx":"108","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/GeneralSectionExpand.tsx":"109","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/GeneralSectionCollapsed.tsx":"110","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/AvailabilitySectionExpand.tsx":"111","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/AvailabilitySectionCollapsed.tsx":"112","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/InviteeQuestionsSection.tsx":"113","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/NotifyPolicySection.tsx":"114","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/NavSection.tsx":"115","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/ScheduledEvents.tsx":"116","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventTypes.tsx":"117","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventTypeCard.tsx":"118","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/BookProvider.tsx":"119","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/TimeOption.tsx":"120","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/BookTypePage.tsx":"121","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/BookUserPage.tsx":"122","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/BookContactsPage.tsx":"123","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/BookInviteePage.tsx":"124","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/data.tsx":"125","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/Calendar.tsx":"126","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/SchedulingLink.tsx":"127","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/hooks/SchedulingLinkProvider.tsx":"128","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/hooks/utils.ts":"129","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/WithTip.tsx":"130","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/Calendar.tsx":"131","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/event-utils.tsx":"132","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/hooks/AppDataProvider.tsx":"133","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/api-hooks.tsx":"134","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/SchedulingLinksBoard.tsx":"135","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/SchedulingLinkCard.tsx":"136","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/SchedulingLinkNew.tsx":"137","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/SchedulingLinkSettings.tsx":"138","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/AppSettings.tsx":"139","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/Availability.tsx":"140","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/TextField.tsx":"141","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/booking/BookingPage.tsx":"142","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/booking/BookingProvider.tsx":"143"},{"size":615,"mtime":1609244306905,"results":"144","hashOfConfig":"145"},{"size":1226,"mtime":1607220770491,"results":"146","hashOfConfig":"145"},{"size":5296,"mtime":1607220770508,"results":"147","hashOfConfig":"145"},{"size":3701,"mtime":1611657130316,"results":"148","hashOfConfig":"145"},{"size":3603,"mtime":1607220770494,"results":"149","hashOfConfig":"145"},{"size":898,"mtime":1608873579256,"results":"150","hashOfConfig":"145"},{"size":7378,"mtime":1609813521023,"results":"151","hashOfConfig":"145"},{"size":11691,"mtime":1609813521127,"results":"152","hashOfConfig":"145"},{"size":25268,"mtime":1612578872357,"results":"153","hashOfConfig":"145"},{"size":1088,"mtime":1607220770508,"results":"154","hashOfConfig":"145"},{"size":1262,"mtime":1607220770494,"results":"155","hashOfConfig":"145"},{"size":2756,"mtime":1607220770495,"results":"156","hashOfConfig":"145"},{"size":913,"mtime":1607220770495,"results":"157","hashOfConfig":"145"},{"size":4766,"mtime":1607220770495,"results":"158","hashOfConfig":"145"},{"size":12353,"mtime":1608873579249,"results":"159","hashOfConfig":"160"},{"size":279,"mtime":1607220770492,"results":"161","hashOfConfig":"145"},{"size":5588,"mtime":1608873579254,"results":"162","hashOfConfig":"145"},{"size":8333,"mtime":1607220770503,"results":"163","hashOfConfig":"145"},{"size":8039,"mtime":1608873579251,"results":"164","hashOfConfig":"145"},{"size":2386,"mtime":1608873579253,"results":"165","hashOfConfig":"145"},{"size":21820,"mtime":1609250206793,"results":"166","hashOfConfig":"145"},{"size":3667,"mtime":1607220770507,"results":"167","hashOfConfig":"145"},{"size":4237,"mtime":1612269403083,"results":"168","hashOfConfig":"145"},{"size":2262,"mtime":1608873579252,"results":"169","hashOfConfig":"145"},{"size":2455,"mtime":1607220770503,"results":"170","hashOfConfig":"145"},{"size":1162,"mtime":1607220770498,"results":"171","hashOfConfig":"160"},{"size":21310,"mtime":1609380308491,"results":"172","hashOfConfig":"160"},{"size":1186,"mtime":1607220770501,"results":"173","hashOfConfig":"160"},{"size":1157,"mtime":1607220770501,"results":"174","hashOfConfig":"160"},{"size":1464,"mtime":1607220770498,"results":"175","hashOfConfig":"160"},{"size":12141,"mtime":1608873579250,"results":"176","hashOfConfig":"160"},{"size":10054,"mtime":1608873579250,"results":"177","hashOfConfig":"160"},{"size":6949,"mtime":1607220770493,"results":"178","hashOfConfig":"160"},{"size":7835,"mtime":1608873579254,"results":"179","hashOfConfig":"160"},{"size":10528,"mtime":1608873579250,"results":"180","hashOfConfig":"160"},{"size":2957,"mtime":1607220770502,"results":"181","hashOfConfig":"160"},{"size":5601,"mtime":1607220770506,"results":"182","hashOfConfig":"160"},{"size":13042,"mtime":1608873579255,"results":"183","hashOfConfig":"160"},{"size":5293,"mtime":1607220770506,"results":"184","hashOfConfig":"160"},{"size":8738,"mtime":1607220770505,"results":"185","hashOfConfig":"160"},{"size":3401,"mtime":1608873579252,"results":"186","hashOfConfig":"145"},{"size":121,"mtime":1607220770508,"results":"187","hashOfConfig":"160"},{"size":389,"mtime":1607220770492,"results":"188","hashOfConfig":"145"},{"size":13632,"mtime":1608873579253,"results":"189","hashOfConfig":"160"},{"size":4108,"mtime":1607220770498,"results":"190","hashOfConfig":"145"},{"size":278,"mtime":1607220770492,"results":"191","hashOfConfig":"145"},{"size":1935,"mtime":1607220770504,"results":"192","hashOfConfig":"160"},{"size":843,"mtime":1607220770505,"results":"193","hashOfConfig":"160"},{"size":788,"mtime":1607220770504,"results":"194","hashOfConfig":"160"},{"size":1993,"mtime":1607220770505,"results":"195","hashOfConfig":"160"},{"size":919,"mtime":1607220770505,"results":"196","hashOfConfig":"160"},{"size":3292,"mtime":1607220770507,"results":"197","hashOfConfig":"160"},{"size":3058,"mtime":1607220770505,"results":"198","hashOfConfig":"160"},{"size":9451,"mtime":1608873579252,"results":"199","hashOfConfig":"160"},{"size":3497,"mtime":1607220770502,"results":"200","hashOfConfig":"160"},{"size":4171,"mtime":1607220770504,"results":"201","hashOfConfig":"160"},{"size":4537,"mtime":1608873579251,"results":"202","hashOfConfig":"160"},{"size":2224,"mtime":1607220770504,"results":"203","hashOfConfig":"160"},{"size":3542,"mtime":1608873579255,"results":"204","hashOfConfig":"160"},{"size":7571,"mtime":1607220770493,"results":"205","hashOfConfig":"160"},{"size":1713,"mtime":1608873579256,"results":"206","hashOfConfig":"160"},{"size":1828,"mtime":1607220770493,"results":"207","hashOfConfig":"160"},{"size":2617,"mtime":1607220770492,"results":"208","hashOfConfig":"160"},{"size":2946,"mtime":1607220770496,"results":"209","hashOfConfig":"160"},{"size":325,"mtime":1607220770501,"results":"210","hashOfConfig":"145"},{"size":1301,"mtime":1607220770505,"results":"211","hashOfConfig":"160"},{"size":1768,"mtime":1607220770499,"results":"212","hashOfConfig":"160"},{"size":1169,"mtime":1607220770498,"results":"213","hashOfConfig":"160"},{"size":958,"mtime":1607220770498,"results":"214","hashOfConfig":"145"},{"size":3351,"mtime":1608873579254,"results":"215","hashOfConfig":"160"},{"size":8202,"mtime":1607220770502,"results":"216","hashOfConfig":"160"},{"size":25723,"mtime":1607220770494,"results":"217","hashOfConfig":"160"},{"size":10534,"mtime":1607220770501,"results":"218","hashOfConfig":"160"},{"size":2970,"mtime":1607220770500,"results":"219","hashOfConfig":"160"},{"size":8028,"mtime":1607220770499,"results":"220","hashOfConfig":"160"},{"size":654,"mtime":1607220770496,"results":"221","hashOfConfig":"160"},{"size":5193,"mtime":1611656011295,"results":"222","hashOfConfig":"145"},{"size":2441,"mtime":1609325833373,"results":"223","hashOfConfig":"224"},{"size":4998,"mtime":1609291256437,"results":"225","hashOfConfig":"160"},{"size":3109,"mtime":1609291256416,"results":"226","hashOfConfig":"145"},{"size":616,"mtime":1609291256451,"results":"227","hashOfConfig":"160"},{"size":10589,"mtime":1610801301117,"results":"228","hashOfConfig":"224"},{"size":2550,"mtime":1609406368551,"results":"229","hashOfConfig":"160"},{"size":3159,"mtime":1609291254293,"results":"230","hashOfConfig":"160"},{"size":13536,"mtime":1609291293216,"results":"231","hashOfConfig":"160"},{"size":7407,"mtime":1609383208995,"results":"232","hashOfConfig":"160"},{"size":3546,"mtime":1609291254316,"results":"233","hashOfConfig":"160"},{"size":1055,"mtime":1611641475088,"results":"234","hashOfConfig":"145"},{"size":1806,"mtime":1609291254116,"results":"235","hashOfConfig":"145"},{"size":6287,"mtime":1609470140864,"results":"236","hashOfConfig":"145"},{"size":771,"mtime":1612180702546,"results":"237","hashOfConfig":"145"},{"size":18710,"mtime":1609291254385,"results":"238","hashOfConfig":"145"},{"size":211,"mtime":1609291253987,"results":"239","hashOfConfig":"145"},{"size":2711,"mtime":1609574636627,"results":"240","hashOfConfig":"145"},{"size":4215,"mtime":1609477888363,"results":"241","hashOfConfig":"145"},{"size":92,"mtime":1609291256294,"results":"242","hashOfConfig":"145"},{"size":4018,"mtime":1609995663108,"results":"243","hashOfConfig":"145"},{"size":1274,"mtime":1609291254169,"results":"244","hashOfConfig":"145"},{"size":269,"mtime":1609291253951,"results":"245","hashOfConfig":"145"},{"size":335,"mtime":1609464606651,"results":"246","hashOfConfig":"145"},{"size":267,"mtime":1609291253960,"results":"247","hashOfConfig":"145"},{"size":365,"mtime":1609291253908,"results":"248","hashOfConfig":"224"},{"size":249,"mtime":1609304887015,"results":"249","hashOfConfig":"145"},{"size":1567,"mtime":1610327497495,"results":"250","hashOfConfig":"145"},{"size":4892,"mtime":1611320012346,"results":"251","hashOfConfig":"145"},{"size":1259,"mtime":1609384383839,"results":"252","hashOfConfig":"160"},{"size":3727,"mtime":1611320881441,"results":"253","hashOfConfig":"145"},{"size":757,"mtime":1609406368401,"results":"254","hashOfConfig":"224"},{"size":7892,"mtime":1610767780232,"results":"255","hashOfConfig":"145"},{"size":786,"mtime":1609415985172,"results":"256","hashOfConfig":"145"},{"size":10219,"mtime":1609576450867,"results":"257","hashOfConfig":"145"},{"size":1545,"mtime":1609415985063,"results":"258","hashOfConfig":"145"},{"size":2983,"mtime":1609580993298,"results":"259","hashOfConfig":"224"},{"size":3293,"mtime":1609580993310,"results":"260","hashOfConfig":"224"},{"size":1740,"mtime":1609592216629,"results":"261","hashOfConfig":"224"},{"size":8281,"mtime":1610772255518,"results":"262","hashOfConfig":"145"},{"size":4291,"mtime":1611307573570,"results":"263","hashOfConfig":"145"},{"size":3939,"mtime":1610799559545,"results":"264","hashOfConfig":"145"},{"size":5120,"mtime":1611320063757,"results":"265","hashOfConfig":"145"},{"size":1220,"mtime":1610462393535,"results":"266","hashOfConfig":"145"},{"size":9477,"mtime":1610367622515,"results":"267","hashOfConfig":"145"},{"size":1435,"mtime":1610243076578,"results":"268","hashOfConfig":"145"},{"size":6456,"mtime":1610367622427,"results":"269","hashOfConfig":"145"},{"size":252,"mtime":1610101952444,"results":"270","hashOfConfig":"145"},{"size":37650,"mtime":1610278014169,"results":"271","hashOfConfig":"224"},{"size":251,"mtime":1610720041899,"results":"272","hashOfConfig":"224"},{"size":14531,"mtime":1612582661885,"results":"273","hashOfConfig":"145"},{"size":6838,"mtime":1612166818521,"results":"274","hashOfConfig":"145"},{"size":293,"mtime":1611664159522,"results":"275","hashOfConfig":"145"},{"size":427,"mtime":1610873918720,"results":"276","hashOfConfig":"145"},{"size":14222,"mtime":1612432013047,"results":"277","hashOfConfig":"145"},{"size":1720,"mtime":1612157529828,"results":"278","hashOfConfig":"145"},{"size":5117,"mtime":1612582376831,"results":"279","hashOfConfig":"145"},{"size":2913,"mtime":1612434318894,"results":"280","hashOfConfig":"145"},{"size":4396,"mtime":1611373558410,"results":"281","hashOfConfig":"145"},{"size":1071,"mtime":1612573105224,"results":"282","hashOfConfig":"145"},{"size":633,"mtime":1611323525128,"results":"283","hashOfConfig":"145"},{"size":10782,"mtime":1612574312404,"results":"284","hashOfConfig":"145"},{"size":9575,"mtime":1612582307364,"results":"285","hashOfConfig":"145"},{"size":10130,"mtime":1612579037811,"results":"286","hashOfConfig":"145"},{"size":417,"mtime":1611638117386,"results":"287","hashOfConfig":"145"},{"size":13201,"mtime":1612489990492,"results":"288","hashOfConfig":"145"},{"size":4580,"mtime":1612494953184,"results":"289","hashOfConfig":"145"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},"1t4kdwk",{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"292"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"292"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"292"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"292"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},"1omwm79",{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"292"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"292"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"179wsum",{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"460"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"465","messages":"466","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"469"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"469"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"460"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"484","usedDeprecatedRules":"460"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"460"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"460"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"460"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"460"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"460"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"460"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"460"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"460"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"460"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"514"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"519","usedDeprecatedRules":"292"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"524","messages":"525","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"528"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"460"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"460"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536","usedDeprecatedRules":"460"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"460"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"541"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"541"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"546"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"549","usedDeprecatedRules":"292"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"552","messages":"553","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554","usedDeprecatedRules":"555"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"558","usedDeprecatedRules":"292"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"292"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"292"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"569","usedDeprecatedRules":"292"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"574"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"578"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"581","messages":"582","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"292"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"588"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591","usedDeprecatedRules":"292"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"594","usedDeprecatedRules":"292"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"292"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"292"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"292"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"292"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"612","messages":"613","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"292"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"588"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"619","usedDeprecatedRules":"292"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"622","usedDeprecatedRules":"292"},"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/index.tsx",[],["623","624"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/analytics.ts",["625"],"import * as Sentry from '@sentry/react';\nimport LogRocket from 'logrocket';\nimport posthog from 'posthog-js';\nimport {isDev} from './config';\n\nconst {\n  REACT_APP_SENTRY_DSN,\n  REACT_APP_LOGROCKET_ID,\n  REACT_APP_POSTHOG_TOKEN = 'cQo4wipp5ipWWXhTN8kTacBItgqo457yDRtzCMOr-Tw',\n  REACT_APP_POSTHOG_API_HOST = 'https://app.posthog.com',\n} = process.env;\n\nexport const isSentryEnabled = REACT_APP_SENTRY_DSN && !isDev;\nexport const isLogRocketEnabled = REACT_APP_LOGROCKET_ID && !isDev;\nexport const isPostHogEnabled = REACT_APP_POSTHOG_TOKEN && !isDev;\n\nexport const init = () => {\n  if (isSentryEnabled) {\n    Sentry.init({dsn: REACT_APP_SENTRY_DSN});\n  }\n\n  if (isLogRocketEnabled && REACT_APP_LOGROCKET_ID) {\n    LogRocket.init(REACT_APP_LOGROCKET_ID);\n  }\n\n  if (isPostHogEnabled) {\n    posthog.init(REACT_APP_POSTHOG_TOKEN, {\n      api_host: REACT_APP_POSTHOG_API_HOST,\n    });\n  }\n};\n\nexport const identify = (id: any, email: string) => {\n  if (isSentryEnabled) {\n    Sentry.setUser({id, email});\n  }\n\n  if (isLogRocketEnabled) {\n    LogRocket.identify(id, {email});\n  }\n\n  if (isPostHogEnabled) {\n    posthog.identify(id);\n    posthog.people && posthog.people.set({email});\n  }\n};\n\nexport default {\n  init,\n  identify,\n};\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/serviceWorker.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/App.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/AuthProvider.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/config.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/Login.tsx",["626","627","628","629"],"import React, {useEffect, useState} from 'react';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport {Box, Flex} from 'theme-ui';\nimport qs from 'query-string';\nimport {\n  TextField,\n  Label,\n  ITextFieldStyles,\n  PrimaryButton,\n  MessageBar,\n  MessageBarType,\n  DefaultButton,\n} from '@fluentui/react';\nimport {Button, Input, Text, Title} from '../common';\nimport {useAuth} from './AuthProvider';\nimport logger from '../../logger';\n\ntype Props = RouteComponentProps & {\n  onSubmit: (params: any) => Promise<void>;\n};\ntype State = {\n  loading: boolean;\n  email: string;\n  password: string;\n  error: any;\n  redirect: string;\n};\n\nclass Login extends React.Component<Props, State> {\n  state: State = {\n    loading: false,\n    email: '',\n    password: '',\n    error: null,\n    redirect: '/',\n  };\n\n  componentDidMount() {\n    const {redirect = '/'} = qs.parse(this.props.location.search);\n\n    this.setState({redirect: String(redirect)});\n  }\n\n  handleChangeEmail = (e: any) => {\n    this.setState({email: e.target.value});\n  };\n\n  handleChangePassword = (e: any) => {\n    this.setState({password: e.target.value});\n  };\n\n  handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    this.setState({loading: true, error: null});\n    const {email, password, redirect} = this.state;\n\n    // TODO: handle login through API\n    this.props\n      .onSubmit({email, password})\n      .then(() => this.props.history.push(redirect))\n      .catch((err) => {\n        logger.error('Error!', err);\n        const error =\n          err.response?.body?.error?.message || 'Invalid credentials';\n\n        this.setState({error, loading: false});\n      });\n  };\n\n  render() {\n    const {location} = this.props;\n    const {loading, email, password, error} = this.state;\n\n    return (\n      <Flex\n        px={[2, 5]}\n        py={5}\n        sx={{\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Box sx={{width: '100%', maxWidth: 320}}>\n          <Title level={1}>Welcome back</Title>\n\n          <form onSubmit={this.handleSubmit}>\n            <Box mb={2}>\n              <label htmlFor=\"email\">Email</label>\n              <Input\n                id=\"email\"\n                size=\"large\"\n                type=\"email\"\n                autoComplete=\"username\"\n                value={email}\n                onChange={this.handleChangeEmail}\n              />\n            </Box>\n\n            <Box mb={2}>\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                id=\"password\"\n                size=\"large\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={this.handleChangePassword}\n              />\n            </Box>\n\n            <Box mt={3}>\n              <Button\n                block\n                size=\"large\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                loading={loading}\n              >\n                Log in\n              </Button>\n            </Box>\n\n            {error && (\n              <Box mt={2}>\n                <Text type=\"danger\">{error}</Text>\n              </Box>\n            )}\n\n            <Box mt={error ? 3 : 4}>\n              Don't have an account?{' '}\n              <Link to={`/register${location.search}`}>Sign up!</Link>\n            </Box>\n            <Box my={3}>\n              <Link to=\"/reset-password\">Forgot your password?</Link>\n            </Box>\n          </form>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nconst Login2 = (props: any) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [redirect, setRedirect] = useState('/');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState<boolean | null>(null);\n\n  useEffect(() => {}, []);\n\n  const handleChangeEmail = (e: any) => {\n    setEmail(e.target.value);\n    setError(null);\n    setLoading(null);\n  };\n\n  const handleChangePassword = (e: any) => {\n    setPassword(e.target.value);\n    setError(null);\n    setLoading(null);\n  };\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    setError(null);\n    setLoading(null);\n\n    // TODO: handle login through API\n    props\n      .onSubmit({email, password})\n      .then(() => props.history.push(redirect))\n      .catch((err: any) => {\n        logger.error('Error!', err);\n        const error =\n          err.response?.body?.error?.message || 'Invalid credentials';\n        setError(error);\n        setLoading(false);\n      });\n  };\n\n  const textFieldStyles: Partial<ITextFieldStyles> = {\n    field: {height: 50, fontSize: '1rem', color: 'black', padding: '12px 16px'},\n    fieldGroup: {height: 52, border: '1px black solid'},\n    revealButton: {height: 50},\n  };\n\n  return (\n    <div className=\"h-screen gentle-flex\">\n      <div\n        className=\"border-true-gray-200 border-2 border-solid flex flex-col rounded\"\n        style={{\n          width: '464px',\n          // height: '554px',\n        }}\n      >\n        <div\n          className=\"w-full\"\n          style={{\n            padding: '64px',\n          }}\n        >\n          <div\n            className=\"font-medium\"\n            style={{fontSize: '36px', marginBottom: '24px'}}\n          >\n            Sign in\n          </div>\n          <form onSubmit={handleSubmit}>\n            <div style={{paddingBottom: '24px'}}>\n              <Label>Email</Label>\n              <TextField\n                type=\"email\"\n                styles={textFieldStyles}\n                onChange={handleChangeEmail}\n                value={email}\n                id={'email'}\n              />\n            </div>\n            <div style={{paddingBottom: '24px'}}>\n              <Label>Password</Label>\n              <TextField\n                id=\"password\"\n                type=\"password\"\n                styles={textFieldStyles}\n                onChange={handleChangePassword}\n                value={password}\n                canRevealPassword\n              />\n            </div>\n            <PrimaryButton\n              className=\"login-button\"\n              text=\"Submit\"\n              type=\"submit\"\n            />\n\n            {error && (\n              <MessageBar\n                messageBarType={MessageBarType.error}\n                isMultiline={false}\n                // onDismiss={p.resetChoice}\n                dismissButtonAriaLabel=\"Close\"\n                className=\"mt-5\"\n              >\n                {error}\n              </MessageBar>\n            )}\n          </form>\n\n          {/*<DefaultButton text=\"使用微信登录\"/>*/}\n          {/*<DefaultButton text=\"使用飞书登录\"/>*/}\n        </div>\n        <div\n          className=\"\"\n          style={{\n            paddingRight: '64px',\n            paddingLeft: '64px',\n            paddingBottom: '64px',\n          }}\n        >\n          <Link to=\"/register\">\n            <span\n              className=\"border-b-2 border-solid\"\n              style={{\n                color: '#2251ff',\n                borderColor: '#2251ff',\n              }}\n            >\n              注册账号\n            </span>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst LoginPage = (props: RouteComponentProps) => {\n  const auth = useAuth();\n\n  return <Login2 {...props} onSubmit={auth.login} />;\n};\n\nexport default LoginPage;\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/Register.tsx",["630","631","632"],"import React, {useEffect, useState} from 'react';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport {Box, Flex} from 'theme-ui';\nimport qs from 'query-string';\nimport {Button, Input, Text, Title} from '../common';\nimport {useAuth} from './AuthProvider';\nimport logger from '../../logger';\nimport {\n  ITextFieldStyles,\n  Label,\n  MessageBar,\n  MessageBarType,\n  PrimaryButton,\n  TextField,\n} from '@fluentui/react';\n\ntype Props = RouteComponentProps<{invite?: string}> & {\n  onSubmit: (params: any) => Promise<void>;\n};\ntype State = {\n  loading: boolean;\n  submitted: boolean;\n  companyName: string;\n  email: string;\n  password: string;\n  passwordConfirmation: string;\n  inviteToken?: string;\n  redirect: string;\n  error: any;\n};\n\nclass Register extends React.Component<Props, State> {\n  state: State = {\n    loading: false,\n    submitted: false,\n    companyName: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    inviteToken: '',\n    redirect: '/account/getting-started',\n    error: null,\n  };\n\n  componentDidMount() {\n    const {redirect = '/account/getting-started'} = qs.parse(\n      this.props.location.search\n    );\n    const {invite: inviteToken} = this.props.match.params;\n\n    this.setState({inviteToken, redirect: String(redirect)});\n  }\n\n  handleChangeCompanyName = (e: any) => {\n    this.setState({companyName: e.target.value});\n  };\n\n  handleChangeEmail = (e: any) => {\n    this.setState({email: e.target.value});\n  };\n\n  handleChangePassword = (e: any) => {\n    this.setState({password: e.target.value});\n  };\n\n  handleChangePasswordConfirmation = (e: any) => {\n    this.setState({passwordConfirmation: e.target.value});\n  };\n\n  getValidationError = () => {\n    const {\n      companyName,\n      email,\n      password,\n      passwordConfirmation,\n      inviteToken,\n    } = this.state;\n\n    if (!companyName && !inviteToken) {\n      return 'Company name is required';\n    } else if (!email) {\n      return 'Email is required';\n    } else if (!password) {\n      return 'Password is required';\n    } else if (password.length < 8) {\n      return 'Password must be at least 8 characters';\n    } else if (password !== passwordConfirmation) {\n      return 'Password confirmation does not match';\n    } else {\n      return null;\n    }\n  };\n\n  handleInputBlur = () => {\n    if (!this.state.submitted) {\n      return;\n    }\n\n    this.setState({error: this.getValidationError()});\n  };\n\n  handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    const error = this.getValidationError();\n\n    if (error) {\n      this.setState({error, submitted: true});\n\n      return;\n    }\n\n    this.setState({loading: true, submitted: true, error: null});\n    const {\n      companyName,\n      inviteToken,\n      email,\n      password,\n      passwordConfirmation,\n      redirect,\n    } = this.state;\n\n    this.props\n      .onSubmit({\n        companyName,\n        inviteToken,\n        email,\n        password,\n        passwordConfirmation,\n      })\n      .then(() => this.props.history.push(redirect))\n      .catch((err) => {\n        logger.error('Error!', err);\n        // TODO: provide more granular error messages?\n        const error =\n          err.response?.body?.error?.message || 'Invalid credentials';\n\n        this.setState({error, loading: false});\n      });\n  };\n\n  render() {\n    const {location} = this.props;\n    const {\n      loading,\n      inviteToken,\n      companyName,\n      email,\n      password,\n      passwordConfirmation,\n      error,\n    } = this.state;\n\n    return (\n      <Flex\n        px={[2, 5]}\n        py={5}\n        sx={{\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Box sx={{width: '100%', maxWidth: 320}}>\n          <Title level={1}>Get started</Title>\n          <form onSubmit={this.handleSubmit}>\n            {!inviteToken && (\n              <Box mb={2}>\n                <label htmlFor=\"companyName\">Company Name</label>\n                <Input\n                  id=\"companyName\"\n                  size=\"large\"\n                  type=\"text\"\n                  autoComplete=\"company-name\"\n                  value={companyName}\n                  onChange={this.handleChangeCompanyName}\n                  onBlur={this.handleInputBlur}\n                />\n              </Box>\n            )}\n\n            <Box mb={2}>\n              <label htmlFor=\"email\">Email</label>\n              <Input\n                id=\"email\"\n                size=\"large\"\n                type=\"email\"\n                autoComplete=\"username\"\n                value={email}\n                onChange={this.handleChangeEmail}\n                onBlur={this.handleInputBlur}\n              />\n            </Box>\n\n            <Box mb={2}>\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                id=\"password\"\n                size=\"large\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={this.handleChangePassword}\n                onBlur={this.handleInputBlur}\n              />\n            </Box>\n\n            <Box mb={2}>\n              <label htmlFor=\"confirm_password\">Confirm password</label>\n              <Input\n                id=\"confirm_password\"\n                size=\"large\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                value={passwordConfirmation}\n                onChange={this.handleChangePasswordConfirmation}\n                onBlur={this.handleInputBlur}\n              />\n            </Box>\n\n            <Box mt={3}>\n              <Button\n                block\n                size=\"large\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                loading={loading}\n              >\n                Register\n              </Button>\n            </Box>\n\n            {error && (\n              <Box mt={2}>\n                <Text type=\"danger\">{error}</Text>\n              </Box>\n            )}\n\n            <Box mt={error ? 3 : 4}>\n              Already have an account?{' '}\n              <Link to={`/login${location.search}`}>Log in!</Link>\n            </Box>\n          </form>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nconst Register2 = (props: any) => {\n  const [email, setEmail] = useState<string | undefined>(undefined);\n  const [password, setPassword] = useState<string | undefined>(undefined);\n  const [passwordConfirmation, setPasswordConfirmation] = useState();\n  const [submitted, setSubmitted] = useState<boolean>(false);\n  const [redirect, setRedirect] = useState('/');\n  const [error, setError] = useState<any>(null);\n  const [loading, setLoading] = useState<boolean | null>(null);\n\n  useEffect(() => {}, []);\n\n  const handleChangeEmail = (e: any) => {\n    setEmail(e.target.value);\n    setError(null);\n    setLoading(null);\n  };\n\n  const handleChangePassword = (e: any) => {\n    setPassword(e.target.value);\n    setError(null);\n    setLoading(null);\n  };\n\n  const handleChangePasswordConfirmation = (e: any) => {\n    setPasswordConfirmation(e.target.value);\n  };\n\n  const getValidationError = () => {\n    if (!email) {\n      return 'Email is required';\n    } else if (!password) {\n      return 'Password is required';\n    } else if (password.length < 8) {\n      return 'Password must be at least 8 characters';\n    } else if (password !== passwordConfirmation) {\n      return 'Password confirmation does not match';\n    } else {\n      return null;\n    }\n  };\n  const handleInputBlur = () => {\n    if (!submitted) {\n      return;\n    }\n\n    setError(getValidationError());\n  };\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    const error = getValidationError();\n\n    if (error) {\n      setError(error);\n      setSubmitted(false);\n      return;\n    }\n\n    setLoading(true);\n    setSubmitted(true);\n    setError(null);\n\n    props\n      .onSubmit({\n        companyName: 'x',\n        // inviteToken: '',\n        email,\n        password,\n        passwordConfirmation,\n      })\n      .then(() => props.history.push(redirect))\n      .catch((err: any) => {\n        logger.error('Error!', err);\n        // TODO: provide more granular error messages?\n        const error =\n          err.response?.body?.error?.message || 'Invalid credentials';\n\n        setError(error);\n        setLoading(false);\n      });\n  };\n  const textFieldStyles: Partial<ITextFieldStyles> = {\n    field: {height: 50, fontSize: '1rem', color: 'black', padding: '12px 16px'},\n    fieldGroup: {height: 52, border: '1px black solid'},\n    revealButton: {height: 50},\n  };\n\n  return (\n    <div className=\"h-screen gentle-flex\">\n      <div\n        className=\"border-true-gray-200 border-2 border-solid flex flex-col rounded\"\n        style={{\n          width: '464px',\n          // height: '554px',\n        }}\n      >\n        <div\n          className=\"w-full\"\n          style={{\n            padding: '64px',\n          }}\n        >\n          <div\n            className=\"font-medium\"\n            style={{fontSize: '36px', marginBottom: '24px'}}\n          >\n            Sign up\n          </div>\n          <form onSubmit={handleSubmit}>\n            <div style={{paddingBottom: '24px'}}>\n              <Label>Email</Label>\n              <TextField\n                type=\"email\"\n                styles={textFieldStyles}\n                onChange={handleChangeEmail}\n                value={email}\n                id={'email'}\n                onBlur={handleInputBlur}\n              />\n            </div>\n            <div style={{paddingBottom: '24px'}}>\n              <Label>Password</Label>\n              <TextField\n                id=\"password\"\n                type=\"password\"\n                styles={textFieldStyles}\n                onChange={handleChangePassword}\n                value={password}\n                canRevealPassword\n                onBlur={handleInputBlur}\n              />\n            </div>\n            <div style={{paddingBottom: '24px'}}>\n              <Label>Confirm Password</Label>\n              <TextField\n                id=\"confirm_password\"\n                type=\"password\"\n                styles={textFieldStyles}\n                onChange={handleChangePasswordConfirmation}\n                value={passwordConfirmation}\n                canRevealPassword\n                onBlur={handleInputBlur}\n              />\n            </div>\n\n            <PrimaryButton\n              className=\"login-button\"\n              text=\"Submit\"\n              type=\"submit\"\n            />\n\n            {error && (\n              <MessageBar\n                messageBarType={MessageBarType.error}\n                isMultiline={false}\n                // onDismiss={p.resetChoice}\n                dismissButtonAriaLabel=\"Close\"\n                className=\"mt-5\"\n              >\n                {error}\n              </MessageBar>\n            )}\n          </form>\n\n          {/*<DefaultButton text=\"使用微信登录\"/>*/}\n          {/*<DefaultButton text=\"使用飞书登录\"/>*/}\n        </div>\n        <div\n          className=\"\"\n          style={{\n            paddingRight: '64px',\n            paddingLeft: '64px',\n            paddingBottom: '64px',\n          }}\n        >\n          <Link to=\"/login\">\n            <span\n              className=\"border-b-2 border-solid\"\n              style={{\n                color: '#2251ff',\n                borderColor: '#2251ff',\n              }}\n            >\n              登录已有账号\n            </span>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst RegisterPage = (props: RouteComponentProps) => {\n  const auth = useAuth();\n\n  return <Register2 {...props} onSubmit={auth.register} />;\n};\n\nexport default RegisterPage;\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/api.ts",["633"],"import request from 'superagent';\nimport qs from 'query-string';\nimport {getAuthTokens} from './storage';\nimport {Conversation, User} from './types';\nimport * as queryString from 'query-string';\nimport {nanoid} from 'nanoid';\n\n// TODO: handle this on the server instead\nfunction now() {\n  const date = new Date();\n\n  return new Date(\n    date.getUTCFullYear(),\n    date.getUTCMonth(),\n    date.getUTCDate(),\n    date.getUTCHours(),\n    date.getUTCMinutes(),\n    date.getUTCSeconds()\n  );\n}\n\nexport type LoginParams = {\n  email: string;\n  password: string;\n};\n\nexport type RegisterParams = LoginParams & {\n  companyName?: string;\n  inviteToken?: string;\n  passwordConfirmation: string;\n};\n\nexport type ResetPasswordParams = {\n  password: string;\n  passwordConfirmation: string;\n};\n\nexport type WidgetSettingsParams = {\n  id?: string;\n  title: string;\n  subtitle: string;\n  color: string;\n  greeting?: string;\n  new_message_placeholder?: string;\n};\n\nexport type EventSubscriptionParams = {\n  webhook_url: string;\n};\n\nexport const getAccessToken = (): string | null => {\n  const tokens = getAuthTokens();\n\n  return (tokens && tokens.token) || null;\n};\n\nexport const getRefreshToken = (): string | null => {\n  const tokens = getAuthTokens();\n\n  return (tokens && tokens.renew_token) || null;\n};\n\nexport const me = async (token = getAccessToken()): Promise<User> => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/me`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const login = async ({email, password}: LoginParams) => {\n  return request\n    .post(`/api/session`)\n    .send({user: {email, password}})\n    .then((res) => res.body.data);\n};\n\nexport const logout = async () => {\n  return request.delete(`/api/session`).then((res) => res.body);\n};\n\nexport const register = async ({\n  companyName,\n  inviteToken,\n  email,\n  password,\n  passwordConfirmation,\n}: RegisterParams) => {\n  return request\n    .post(`/api/registration`)\n    .send({\n      user: {\n        company_name: companyName,\n        invite_token: inviteToken,\n        email,\n        password,\n        password_confirmation: passwordConfirmation,\n      },\n    })\n    .then((res) => res.body.data);\n};\n\nexport const renew = async (token = getRefreshToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/session/renew`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const verifyUserEmail = async (verificationToken: string) => {\n  return request\n    .post(`/api/verify_email`)\n    .send({token: verificationToken})\n    .then((res) => res.body.data);\n};\n\nexport const sendPasswordResetEmail = async (email: string) => {\n  return request\n    .post(`/api/reset_password`)\n    .send({email})\n    .then((res) => res.body.data);\n};\n\nexport const attemptPasswordReset = async (\n  passwordResetToken: string,\n  {password, passwordConfirmation}: ResetPasswordParams\n) => {\n  return request\n    .put(`/api/reset_password`)\n    .send({\n      password,\n      password_confirmation: passwordConfirmation,\n      token: passwordResetToken,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const createNewCustomer = async (accountId: string) => {\n  return request\n    .post(`/api/customers`)\n    .send({\n      customer: {\n        account_id: accountId,\n        first_seen: now(),\n        last_seen: now(),\n      },\n    }) // TODO: send over some metadata?\n    .then((res) => res.body.data);\n};\n\nexport const fetchCustomers = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/customers`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchCustomer = async (id: string, token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/customers/${id}`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const updateCustomer = async (\n  id: string,\n  updates: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/customers/${id}`)\n    .set('Authorization', token)\n    .send({\n      customer: updates,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const createNewConversation = async (\n  customerId: string,\n  params?: object,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/conversations`)\n    .set('Authorization', token)\n    .send({\n      conversation: {\n        customer_id: customerId,\n        ...params,\n      },\n    })\n    .then((res) => res.body.data);\n};\n\nexport const fetchAccountInfo = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/accounts/me`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const updateAccountInfo = async (\n  updates: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/accounts/me`)\n    .set('Authorization', token)\n    .send({\n      account: updates,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const fetchUserProfile = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/profile`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const updateUserProfile = async (\n  updates: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/profile`)\n    .set('Authorization', token)\n    .send({\n      user_profile: updates,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const fetchUserSettings = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get('/api/user_settings')\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const updateUserSettings = async (\n  updates: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put('/api/user_settings')\n    .set('Authorization', token)\n    .send({\n      user_settings: updates,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const fetchAllConversations = async (\n  token = getAccessToken()\n): Promise<Array<Conversation>> => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/conversations`)\n    .query({status: 'open'})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchMyConversations = async (\n  userId: number,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/conversations`)\n    .query({assignee_id: userId, status: 'open'})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchPriorityConversations = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/conversations`)\n    .query({priority: 'priority', status: 'open'})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchClosedConversations = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/conversations`)\n    .query({status: 'closed'})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchConversation = async (\n  id: string,\n  token = getAccessToken()\n): Promise<Conversation> => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/conversations/${id}`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const generateShareConversationToken = async (\n  conversationId: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/conversations/${conversationId}/share`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchSharedConversation = async (\n  id: string,\n  token: string\n): Promise<Conversation> => {\n  if (!token) {\n    throw new Error('Access denied!');\n  }\n\n  return request\n    .get(`/api/conversations/shared`)\n    .query({token, conversation_id: id})\n    .then((res) => res.body.data);\n};\n\nexport const updateConversation = async (\n  conversationId: string,\n  updates: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/conversations/${conversationId}`)\n    .set('Authorization', token)\n    .send(updates)\n    .then((res) => res.body.data);\n};\n\nexport const deleteConversation = async (\n  conversationId: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .delete(`/api/conversations/${conversationId}`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const createNewMessage = async (\n  conversationId: string,\n  message: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/messages`)\n    .set('Authorization', token)\n    .send({\n      message: {\n        conversation_id: conversationId,\n        sent_at: new Date().toISOString(),\n        ...message,\n      },\n    })\n    .then((res) => res.body.data);\n};\n\nexport const countMessages = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/messages/count`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchCustomerConversations = async (\n  customerId: string,\n  accountId: string\n) => {\n  return request\n    .get(`/api/conversations/customer`)\n    .query({customer_id: customerId, account_id: accountId})\n    .then((res) => res.body.data);\n};\n\nexport const generateUserInvitation = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/user_invitations`)\n    .send({user_invitation: {}})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchSlackAuthorization = async (\n  type = 'reply',\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/slack/authorization`)\n    .query({type})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchGmailAuthorization = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/gmail/authorization`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport type EmailParams = {\n  recipient: string;\n  subject: string;\n  message: string;\n};\n\nexport const sendGmailNotification = async (\n  {recipient, subject, message}: EmailParams,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/gmail/send`)\n    .send({recipient, subject, message})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchEventSubscriptions = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/event_subscriptions`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const verifyWebhookUrl = async (\n  url: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/event_subscriptions/verify`)\n    .set('Authorization', token)\n    .send({url})\n    .then((res) => res.body.data);\n};\n\nexport const createEventSubscription = async (\n  params: EventSubscriptionParams,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/event_subscriptions`)\n    .set('Authorization', token)\n    .send({\n      event_subscription: params,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const updateEventSubscription = async (\n  id: string,\n  updates: EventSubscriptionParams,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/event_subscriptions/${id}`)\n    .set('Authorization', token)\n    .send({\n      event_subscription: updates,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const deleteEventSubscription = async (\n  id: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .delete(`/api/event_subscriptions/${id}`)\n    .set('Authorization', token);\n};\n\nexport const authorizeSlackIntegration = async (\n  code: string,\n  type: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/slack/oauth`)\n    .query({code, type})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const authorizeGmailIntegration = async (\n  code: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/gmail/oauth`)\n    .query({code})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const updateWidgetSettings = async (\n  widgetSettingsParams: WidgetSettingsParams,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/widget_settings`)\n    .send({widget_settings: widgetSettingsParams})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchDefaultPaymentMethod = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/payment_methods`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchBillingInfo = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/billing`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const createSubscriptionPlan = async (\n  plan: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/billing`)\n    .send({plan})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const updateSubscriptionPlan = async (\n  plan: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/billing`)\n    .send({plan})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const createPaymentMethod = async (\n  paymentMethod: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/payment_methods`)\n    .send({payment_method: paymentMethod})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const disableAccountUser = async (\n  userId: number | string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/users/${userId}/disable`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const enableAccountUser = async (\n  userId: number | string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/users/${userId}/enable`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchCustomerNotes = async (\n  customerId: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/notes`)\n    .query({customer_id: customerId})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const createCustomerNote = async (\n  customerId: string,\n  body: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/notes`)\n    .set('Authorization', token)\n    .send({\n      note: {\n        body,\n        customer_id: customerId,\n      },\n    })\n    .then((res) => res.body.data);\n};\n\nexport const deleteCustomerNote = async (\n  noteId: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request.delete(`/api/notes/${noteId}`).set('Authorization', token);\n};\n\nexport const fetchAllTags = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/tags`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const createTag = async (name: string, token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/tags`)\n    .send({tag: {name}})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const addConversationTag = async (\n  conversationId: string,\n  tagId: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/conversations/${conversationId}/tags`)\n    .send({tag_id: tagId})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const removeConversationTag = async (\n  conversationId: string,\n  tagId: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .delete(`/api/conversations/${conversationId}/tags/${tagId}`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const addCustomerTag = async (\n  customerId: string,\n  tagId: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/customers/${customerId}/tags`)\n    .send({tag_id: tagId})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const removeCustomerTag = async (\n  customerId: string,\n  tagId: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .delete(`/api/customers/${customerId}/tags/${tagId}`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\ntype BrowserSessionFilters = {\n  sessionIds?: Array<string>;\n  customerId?: string;\n  isActive?: boolean;\n  limit?: number;\n};\n\nexport const fetchBrowserSessions = async (\n  {customerId, isActive, limit = 100, sessionIds = []}: BrowserSessionFilters,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/browser_sessions`)\n    .query(\n      qs.stringify(\n        {\n          ids: sessionIds,\n          customer_id: customerId,\n          active: isActive,\n          limit,\n        },\n        {arrayFormat: 'bracket'}\n      )\n    )\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const countBrowserSessions = async (\n  {customerId, isActive}: BrowserSessionFilters,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/browser_sessions/count`)\n    .query(\n      qs.stringify(\n        {\n          customer_id: customerId,\n          active: isActive,\n        },\n        {arrayFormat: 'bracket'}\n      )\n    )\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchBrowserSession = async (\n  id: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/browser_sessions/${id}`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\ntype ReportingFilters = {\n  from_date?: string | null;\n  to_date?: string | null;\n};\n\nexport const fetchReportingData = async (\n  filters = {} as ReportingFilters,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/reporting`)\n    .query(filters)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const createSchedulingLink = async (\n  scheduling_link: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/scheduling_links`)\n    .send({scheduling_link})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const updateSchedulingLink = async (\n  eventTypeId: string,\n  updates: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/scheduling_links/${eventTypeId}`)\n    .set('Authorization', token)\n    .send({\n      scheduling_link: updates,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const createDemo = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/demos`)\n    .send({\n      demo: {\n        name: 'type1',\n        count: 1,\n      },\n    })\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchSchedulingLinks = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/scheduling_links/`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchSchedulingLinksBrief = async (user: string) => {\n  return request\n    .get(`/api/scheduling_links_brief/`)\n    .then((res) => res.body.data);\n};\n\nexport const createSchedule = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/schedules/`)\n    .set('Authorization', token)\n    .send({\n      schedule: {\n        name: '未命名',\n        timezone: 'Asia / Shanghai',\n        rules: [\n          {\n            id: nanoid(),\n            byday: ['mo', 'tu', 'we', 'th', 'fr'],\n            endTime: 1020,\n            startTime: 540,\n          },\n        ],\n      },\n    })\n    .then((res) => res.body.data);\n};\n\nexport const fetchSchedules = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/schedules/`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchScheduleById = async (user: string, schedule_id: string) => {\n  return request\n    .get(`/api/schedules`)\n    .query({schedule_id})\n    .then((res) => res.body.data);\n};\n\nexport const updateSchedule = async (\n  id: string,\n  updates: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/schedules/${id}`)\n    .set('Authorization', token)\n    .send({\n      schedule: updates,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const fetchUserProfileBySlug = async (slug: string) => {\n  return request\n    .get(`/api/profile`)\n    .query({slug})\n    .then((res) => res.body.data);\n};\n\nexport const fetchSchedulingLinkByUrl = async (user: string, url: string) => {\n  return request\n    .get(`/api/event_type`)\n    .query({url})\n    .then((res) => res.body.data);\n};\n\nexport const createEvent = async (\n  event_type_id: string,\n  start_time: string,\n  guest_name: string\n) => {\n  return request\n    .post(`/api/events`)\n    .send({\n      event: {\n        guest_name: 'guest_1',\n        event_type_id,\n        start_time,\n      },\n    })\n    .then((res) => res.body.data);\n};\n\nexport const createScheduledEvent = async (\n  scheduling_link_id: string,\n  start_time: string,\n  guest_name: string\n) => {\n  return request\n    .post(`/api/scheduled_events`)\n    .send({\n      event: {\n        scheduling_link_id,\n        start_time,\n        guest_name,\n      },\n    })\n    .then((res) => res.body.data);\n};\n\nexport const fetchDatetimeSpotsByRange = async (\n  event_type_id: string,\n  start_time: string,\n  end_time: string\n) => {\n  return request\n    .get(`/api/booking/scheduling_links/${event_type_id}/calendar/range`)\n    .query({\n      start_time,\n      end_time,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const fetchScheduledEvents = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/scheduled_events/`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchIntervals = async (\n  userSlug: string,\n  linkSlug: string,\n  from: string,\n  to: string\n) => {\n  const url = queryString.stringifyUrl({\n    url: `/api/links/${userSlug}/${linkSlug}/intervals`,\n    query: {\n      from,\n      to,\n    },\n  });\n  return request\n    .get(`/api/links/${userSlug}/${linkSlug}/intervals`)\n    .query({\n      from,\n      to,\n    })\n    .then((res) => res.body.data);\n};\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/storage.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/EmailVerification.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/RequestPasswordReset.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/PasswordResetRequested.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/PasswordReset.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/Dashboard.tsx",[],["634","635"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/Sandbox.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/demo/Demo.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/demo/BotDemo.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/PricingOverview.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/SharedConversation.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/landing/LadingPage.tsx",["636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656"],"import React, {useEffect, useState} from 'react';\nimport {\n  useLocation,\n  Switch,\n  Redirect,\n  Route,\n  Link,\n  RouteComponentProps,\n} from 'react-router-dom';\n\nexport default function LadingPage() {\n  return (\n    <div className=\"flex flex-col\">\n      <header className=\"text-gray-600 body-font\">\n        <div className=\"container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center\">\n          <a className=\"flex title-font font-medium items-center text-gray-900 mb-4 md:mb-0\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              className=\"w-10 h-10 text-white p-2 bg-blue-500 rounded-full\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5\" />\n            </svg>\n            <span className=\"ml-3 text-xl\">有期</span>\n          </a>\n          <nav className=\"md:ml-auto flex flex-wrap items-center text-base justify-center\">\n            <a className=\"mr-5 hover:text-gray-900 cursor-pointer\">产品</a>\n            <a className=\"mr-5 hover:text-gray-900 cursor-pointer\">价格</a>\n            <a className=\"mr-5 hover:text-gray-900 cursor-pointer\">集成</a>\n            <a className=\"mr-5 hover:text-gray-900 cursor-pointer\">解决方案</a>\n            <a className=\"mr-5 hover:text-gray-900 cursor-pointer\">团队版</a>\n          </nav>\n          <Link to=\"/login\">\n            <span className=\"mr-5 inline-flex items-center  border-0 py-1 px-3 focus:outline-none hover:bg-gray-200 rounded text-base mt-4 md:mt-0 cursor-pointer\">\n              登录\n            </span>\n          </Link>\n          <Link to=\"/register\">\n            <span className=\"inline-flex items-center bg-blue-500 border-0 py-1 px-3 focus:outline-none hover:bg-blue-600 rounded text-white mt-4 md:mt-0 cursor-pointer\">\n              注册\n            </span>\n          </Link>\n        </div>\n      </header>\n      <section className=\"text-gray-600 body-font\">\n        <div className=\"container mx-auto flex px-5 py-24 md:flex-row flex-col items-center\">\n          <div className=\"lg:flex-grow md:w-1/2 lg:pr-24 md:pr-16 flex flex-col md:items-start md:text-left mb-16 md:mb-0 items-center text-center\">\n            <h1 className=\"title-font sm:text-4xl text-3xl mb-4 font-medium text-gray-900\">\n              简单高效安排会面\n            </h1>\n            <p className=\"mb-8 leading-relaxed\">让您的时间井井有条</p>\n            <div className=\"flex justify-center\">\n              <Link to=\"/register\">\n                <span className=\"inline-flex text-white bg-blue-500 border-0 py-2 px-6 focus:outline-none hover:bg-blue-600 rounded text-lg\">\n                  开始免费使用\n                </span>\n              </Link>\n              {/* <button\n                        class=\"ml-4 inline-flex text-gray-700 bg-gray-100 border-0 py-2 px-6 focus:outline-none hover:bg-gray-200 rounded text-lg\">Button</button>\n                    */}\n            </div>\n          </div>\n          <div className=\"lg:max-w-lg lg:w-full md:w-1/2 w-5/6\">\n            <img\n              className=\"object-cover object-center rounded\"\n              alt=\"hero\"\n              src=\"https://dummyimage.com/720x600\"\n            />\n          </div>\n        </div>\n      </section>\n      <section className=\"text-gray-600 body-font\">\n        <div className=\"container px-5 py-24 mx-auto flex flex-wrap\">\n          <div className=\"flex flex-wrap w-full\">\n            <div className=\"lg:w-2/5 md:w-1/2 md:pr-10 md:py-6\">\n              <div className=\"flex relative pb-12\">\n                <div className=\"h-full w-10 absolute inset-0 flex items-center justify-center\">\n                  <div className=\"h-full w-1 bg-gray-200 pointer-events-none\" />\n                </div>\n                <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-blue-500 inline-flex items-center justify-center text-white relative z-10\">\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-5 h-5\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\" />\n                  </svg>\n                </div>\n                <div className=\"flex-grow pl-4\">\n                  <h2 className=\"font-medium title-font text-sm text-gray-900 mb-1 tracking-wider\">\n                    STEP 1\n                  </h2>\n                  <p className=\"leading-relaxed\">\n                    VHS cornhole pop-up, try-hard 8-bit iceland helvetica.\n                    Kinfolk bespoke try-hard cliche palo santo offal.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex relative pb-12\">\n                <div className=\"h-full w-10 absolute inset-0 flex items-center justify-center\">\n                  <div className=\"h-full w-1 bg-gray-200 pointer-events-none\" />\n                </div>\n                <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-blue-500 inline-flex items-center justify-center text-white relative z-10\">\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-5 h-5\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M22 12h-4l-3 9L9 3l-3 9H2\" />\n                  </svg>\n                </div>\n                <div className=\"flex-grow pl-4\">\n                  <h2 className=\"font-medium title-font text-sm text-gray-900 mb-1 tracking-wider\">\n                    STEP 2\n                  </h2>\n                  <p className=\"leading-relaxed\">\n                    Vice migas literally kitsch +1 pok pok. Truffaut hot chicken\n                    slow-carb health goth, vape typewriter.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex relative pb-12\">\n                <div className=\"h-full w-10 absolute inset-0 flex items-center justify-center\">\n                  <div className=\"h-full w-1 bg-gray-200 pointer-events-none\" />\n                </div>\n                <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-blue-500 inline-flex items-center justify-center text-white relative z-10\">\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-5 h-5\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <circle cx={12} cy={5} r={3} />\n                    <path d=\"M12 22V8M5 12H2a10 10 0 0020 0h-3\" />\n                  </svg>\n                </div>\n                <div className=\"flex-grow pl-4\">\n                  <h2 className=\"font-medium title-font text-sm text-gray-900 mb-1 tracking-wider\">\n                    STEP 3\n                  </h2>\n                  <p className=\"leading-relaxed\">\n                    Coloring book nar whal glossier master cleanse umami. Salvia\n                    +1 master cleanse blog taiyaki.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex relative pb-12\">\n                <div className=\"h-full w-10 absolute inset-0 flex items-center justify-center\">\n                  <div className=\"h-full w-1 bg-gray-200 pointer-events-none\" />\n                </div>\n                <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-blue-500 inline-flex items-center justify-center text-white relative z-10\">\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-5 h-5\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M20 21v-2a4 4 0 00-4-4H8a4 4 0 00-4 4v2\" />\n                    <circle cx={12} cy={7} r={4} />\n                  </svg>\n                </div>\n                <div className=\"flex-grow pl-4\">\n                  <h2 className=\"font-medium title-font text-sm text-gray-900 mb-1 tracking-wider\">\n                    STEP 4\n                  </h2>\n                  <p className=\"leading-relaxed\">\n                    VHS cornhole pop-up, try-hard 8-bit iceland helvetica.\n                    Kinfolk bespoke try-hard cliche palo santo offal.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex relative\">\n                <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-blue-500 inline-flex items-center justify-center text-white relative z-10\">\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-5 h-5\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M22 11.08V12a10 10 0 11-5.93-9.14\" />\n                    <path d=\"M22 4L12 14.01l-3-3\" />\n                  </svg>\n                </div>\n                <div className=\"flex-grow pl-4\">\n                  <h2 className=\"font-medium title-font text-sm text-gray-900 mb-1 tracking-wider\">\n                    FINISH\n                  </h2>\n                  <p className=\"leading-relaxed\">\n                    Pitchfork ugh tattooed scenester echo park gastropub\n                    whatever cold-pressed retro.\n                  </p>\n                </div>\n              </div>\n            </div>\n            <img\n              className=\"lg:w-3/5 md:w-1/2 object-cover object-center rounded-lg md:mt-0 mt-12\"\n              src=\"https://dummyimage.com/1200x500\"\n              alt=\"step\"\n            />\n          </div>\n        </div>\n      </section>\n      <section className=\"text-gray-600 body-font\">\n        <div className=\"container px-5 py-24 mx-auto\">\n          <h1 className=\"sm:text-3xl text-2xl font-medium title-font text-center text-gray-900 mb-20\">\n            Raw Denim Heirloom Man Braid <br className=\"hidden sm:block\" />\n            Selfies Wayfarers\n          </h1>\n          <div className=\"flex flex-wrap sm:-m-4 -mx-4 -mb-10 -mt-4 md:space-y-0 space-y-6\">\n            <div className=\"p-4 md:w-1/3 flex\">\n              <div className=\"w-12 h-12 inline-flex items-center justify-center rounded-full bg-blue-100 text-blue-500 mb-4 flex-shrink-0\">\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  className=\"w-6 h-6\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M22 12h-4l-3 9L9 3l-3 9H2\" />\n                </svg>\n              </div>\n              <div className=\"flex-grow pl-6\">\n                <h2 className=\"text-gray-900 text-lg title-font font-medium mb-2\">\n                  Shooting Stars\n                </h2>\n                <p className=\"leading-relaxed text-base\">\n                  Blue bottle crucifix vinyl post-ironic four dollar toast vegan\n                  taxidermy. Gastropub indxgo juice poutine, ramps microdosing\n                  banh mi pug VHS try-hard ugh iceland kickstarter tumblr\n                  live-edge tilde.\n                </p>\n                <a className=\"mt-3 text-blue-500 inline-flex items-center\">\n                  Learn More\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-4 h-4 ml-2\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M5 12h14M12 5l7 7-7 7\" />\n                  </svg>\n                </a>\n              </div>\n            </div>\n            <div className=\"p-4 md:w-1/3 flex\">\n              <div className=\"w-12 h-12 inline-flex items-center justify-center rounded-full bg-blue-100 text-blue-500 mb-4 flex-shrink-0\">\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  className=\"w-6 h-6\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle cx={6} cy={6} r={3} />\n                  <circle cx={6} cy={18} r={3} />\n                  <path d=\"M20 4L8.12 15.88M14.47 14.48L20 20M8.12 8.12L12 12\" />\n                </svg>\n              </div>\n              <div className=\"flex-grow pl-6\">\n                <h2 className=\"text-gray-900 text-lg title-font font-medium mb-2\">\n                  The Catalyzer\n                </h2>\n                <p className=\"leading-relaxed text-base\">\n                  Blue bottle crucifix vinyl post-ironic four dollar toast vegan\n                  taxidermy. Gastropub indxgo juice poutine, ramps microdosing\n                  banh mi pug VHS try-hard ugh iceland kickstarter tumblr\n                  live-edge tilde.\n                </p>\n                <a className=\"mt-3 text-blue-500 inline-flex items-center\">\n                  Learn More\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-4 h-4 ml-2\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M5 12h14M12 5l7 7-7 7\" />\n                  </svg>\n                </a>\n              </div>\n            </div>\n            <div className=\"p-4 md:w-1/3 flex\">\n              <div className=\"w-12 h-12 inline-flex items-center justify-center rounded-full bg-blue-100 text-blue-500 mb-4 flex-shrink-0\">\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  className=\"w-6 h-6\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M20 21v-2a4 4 0 00-4-4H8a4 4 0 00-4 4v2\" />\n                  <circle cx={12} cy={7} r={4} />\n                </svg>\n              </div>\n              <div className=\"flex-grow pl-6\">\n                <h2 className=\"text-gray-900 text-lg title-font font-medium mb-2\">\n                  Neptune\n                </h2>\n                <p className=\"leading-relaxed text-base\">\n                  Blue bottle crucifix vinyl post-ironic four dollar toast vegan\n                  taxidermy. Gastropub indxgo juice poutine, ramps microdosing\n                  banh mi pug VHS try-hard ugh iceland kickstarter tumblr\n                  live-edge tilde.\n                </p>\n                <a className=\"mt-3 text-blue-500 inline-flex items-center\">\n                  Learn More\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-4 h-4 ml-2\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M5 12h14M12 5l7 7-7 7\" />\n                  </svg>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"text-gray-600 body-font\">\n        <div className=\"container px-5 py-24 mx-auto\">\n          <div className=\"flex flex-col text-center w-full mb-12\">\n            <h1 className=\"sm:text-3xl text-2xl font-medium title-font mb-4 text-gray-900\">\n              Master Cleanse Reliac Heirloom\n            </h1>\n            <p className=\"lg:w-2/3 mx-auto leading-relaxed text-base\">\n              Whatever cardigan tote bag tumblr hexagon brooklyn asymmetrical\n              gentrify, subway tile poke farm-to-table. Franzen you probably\n              haven't heard of them man bun deep.\n            </p>\n          </div>\n          <div className=\"flex lg:w-2/3 w-full sm:flex-row flex-col mx-auto px-8 sm:space-x-4 sm:space-y-0 space-y-4 sm:px-0 items-end\">\n            <div className=\"relative flex-grow w-full\">\n              <label\n                htmlFor=\"full-name\"\n                className=\"leading-7 text-sm text-gray-600\"\n              >\n                Full Name\n              </label>\n              <input\n                type=\"text\"\n                id=\"full-name\"\n                name=\"full-name\"\n                className=\"w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-blue-500 focus:bg-transparent focus:ring-2 focus:ring-blue-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\n              />\n            </div>\n            <div className=\"relative flex-grow w-full\">\n              <label\n                htmlFor=\"email\"\n                className=\"leading-7 text-sm text-gray-600\"\n              >\n                Email\n              </label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                className=\"w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-blue-500 focus:bg-transparent focus:ring-2 focus:ring-blue-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\n              />\n            </div>\n            <button className=\"text-white bg-blue-500 border-0 py-2 px-8 focus:outline-none hover:bg-blue-600 rounded text-lg\">\n              Button\n            </button>\n          </div>\n        </div>\n      </section>\n      <footer className=\"text-gray-600 body-font\">\n        <div className=\"container px-5 py-8 mx-auto flex items-center sm:flex-row flex-col\">\n          <a className=\"flex title-font font-medium items-center md:justify-start justify-center text-gray-900\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              className=\"w-10 h-10 text-white p-2 bg-blue-500 rounded-full\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5\" />\n            </svg>\n            <span className=\"ml-3 text-xl\">tailblocks</span>\n          </a>\n          <p className=\"text-sm text-gray-500 sm:ml-4 sm:pl-4 sm:border-l-2 sm:border-gray-200 sm:py-2 sm:mt-0 mt-4\">\n            © 2020 tailblocks —\n            <a\n              href=\"https://twitter.com/knyttneve\"\n              className=\"text-gray-600 ml-1\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              @knyttneve\n            </a>\n          </p>\n          <span className=\"inline-flex sm:ml-auto sm:mt-0 mt-4 justify-center sm:justify-start\">\n            <a className=\"text-gray-500\">\n              <svg\n                fill=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                className=\"w-5 h-5\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z\" />\n              </svg>\n            </a>\n            <a className=\"ml-3 text-gray-500\">\n              <svg\n                fill=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                className=\"w-5 h-5\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z\" />\n              </svg>\n            </a>\n            <a className=\"ml-3 text-gray-500\">\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                className=\"w-5 h-5\"\n                viewBox=\"0 0 24 24\"\n              >\n                <rect width={20} height={20} x={2} y={2} rx={5} ry={5} />\n                <path d=\"M16 11.37A4 4 0 1112.63 8 4 4 0 0116 11.37zm1.5-4.87h.01\" />\n              </svg>\n            </a>\n            <a className=\"ml-3 text-gray-500\">\n              <svg\n                fill=\"currentColor\"\n                stroke=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={0}\n                className=\"w-5 h-5\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  stroke=\"none\"\n                  d=\"M16 8a6 6 0 016 6v7h-4v-7a2 2 0 00-2-2 2 2 0 00-2 2v7h-4v-7a6 6 0 016-6zM2 9h4v12H2z\"\n                />\n                <circle cx={4} cy={4} r={2} stroke=\"none\" />\n              </svg>\n            </a>\n          </span>\n        </div>\n      </footer>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/logger.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/utils.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/common.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/icons.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/AllConversations.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationsProvider.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/PriorityConversations.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/MyConversations.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ClosedConversations.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/BillingOverview.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/AccountOverview.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/UserProfile.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/integrations/IntegrationsOverview.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/GettingStartedOverview.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/customers/CustomersPage.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/InstallingStorytime.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/LiveSessionViewer.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/SessionsOverview.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/ReportingDashboard.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationMessages.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/socket.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/DatePicker.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationsContainer.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ChatMessage.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/Spinner.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/CustomerBreakdownChart.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/MessagesSentVsReceivedChart.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/MessagesByDayOfWeekChart.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/MessagesPerUserChart.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/MessagesPerDayChart.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/SessionsTable.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/ConversationSidebar.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationDetailsSidebar.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/customers/CustomersTable.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/integrations/NewWebhookModal.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/support.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/integrations/WebhooksTable.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/integrations/IntegrationsTable.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/WorkingHoursSelector.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/types.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/DisabledUsersTable.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/AccountUsersTable.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/PaymentForm.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/support.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/support.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationFooter.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationClosing.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ChatMessageBox.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/SidebarCustomerNotes.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/customers/CustomerDetailsModal.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/support.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/SidebarTagSection.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationItem.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationHeader.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/CardInputSection.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/Dashboard.tsx",["657","658","659","660","661","662","663","664","665","666","667","668"],"import React, {useEffect} from 'react';\nimport Header from './Header';\nimport {\n  useLocation,\n  Switch,\n  Redirect,\n  Route,\n  Link,\n  RouteComponentProps,\n  BrowserRouter as Router,\n} from 'react-router-dom';\nimport _ from 'lodash';\nimport EventType from './EventType';\nimport {useAuth} from '../components/auth/AuthProvider';\nimport {EventTypes} from './EventTypes';\nimport {ConversationsProvider} from '../components/conversations/ConversationsProvider';\nimport {EventsProvider, useEvents} from './EventsProvider';\nimport NewEventType from './events/NewEventType';\nimport NavSection from './NavSection';\nimport ScheduledEvents from './events/ScheduledEvents';\nimport SchedulingLink from './SchedulingLink';\nimport AppDataProvider from '../hooks/AppDataProvider';\nimport {SchedulingLinksBoard} from './SchedulingLinksBoard';\nimport SchedulingLinkNew from './SchedulingLinkNew';\nimport * as API from '../api';\nimport {AppSettings} from './AppSettings';\nimport {Availability} from './Availability';\nimport BookingPage from './booking/BookingPage';\n\nfunction Dashboard(props: RouteComponentProps) {\n  const auth = useAuth();\n  const {pathname} = useLocation();\n\n  return (\n    <div\n      className=\"flex flex-col md:flex-row h-full w-screen\"\n      style={{\n        minHeight: '100vh',\n      }}\n    >\n      <div\n        className=\"w-full md:w-64 border-r-2 border-solid border-gray-100 pt-5\"\n        style={{backgroundColor: '#f2f2f2'}}\n      >\n        <div className=\"flex flex-col\">\n          <div className=\"pt-4 pb-4 pl-4\">\n            <div>杨超越</div>\n            <div className=\"text-sm text-blue-500\">letsmeet.com/ycy</div>\n          </div>\n          <div>\n            {[\n              {\n                icon: () => <i className=\"fas fa-link mr-2\" />,\n                url: '/links',\n                name: '链接',\n              },\n              {\n                icon: () => <i className=\"fas fa-calendar-check mr-2\" />,\n                url: '/events',\n                name: '日程',\n              },\n              {\n                icon: () => <i className=\"fas fa-code mr-2\" />,\n                url: '/apps',\n                name: '应用',\n              },\n              {\n                icon: () => <i className=\"fas fa-cog mr-2\" />,\n                url: '/settings',\n                name: '设置',\n              },\n              {\n                icon: () => <i className=\"fas fa-cog mr-2\" />,\n                url: '/ycy/chat',\n                name: 'Booking Page Preview',\n              },\n              // {url: '/availability', name: '时间管理'},\n              // {url: '/workflows', name: '工作流'},\n            ].map(({icon, url, name}) => {\n              return (\n                <Link to={url} key={url}>\n                  <div\n                    className={`${\n                      pathname === url ||\n                      pathname.startsWith(url) ||\n                      (pathname === '/' && url === '/links')\n                        ? 'bg-gray-200 text-black'\n                        : 'opacity-75'\n                    } pl-4 py-2`}\n                  >\n                    {icon && icon()}\n                    {name}\n                  </div>\n                </Link>\n              );\n            })}\n          </div>\n        </div>\n\n        <div\n          className=\"cursor-pointer hover:bg-gray-200 mt-20\"\n          onClick={() => {\n            API.createSchedule().then((r) => {\n              console.log('createSchedule', r);\n            });\n          }}\n        >\n          Create schedule\n        </div>\n\n        <div\n          className=\"cursor-pointer hover:bg-gray-200 mt-20\"\n          onClick={() => {\n            auth.logout();\n          }}\n        >\n          Logout\n        </div>\n      </div>\n\n      <div className=\"flex flex-row\" style={{width: 'calc(100% - 200px)'}}>\n        <Switch>\n          <Route exact path=\"/\" component={SchedulingLinksBoard} />\n          <Route exact path=\"/links\" component={SchedulingLinksBoard} />\n          <Route exact path=\"/links_new\" component={SchedulingLinkNew} />\n          <Route\n            path=\"/links/:id\"\n            component={() => (\n              <div className=\"w-0 lg:w-1/5 invisible lg:visible\">\n                <SchedulingLinksBoard />\n              </div>\n            )}\n          />\n          <Route path=\"/events\" component={ScheduledEvents} />\n          <Route path=\"/settings\" component={AppSettings} />\n          <Route path=\"/availabilities/:id/edit\" component={Availability} />\n          <Route path=\"/apps\" component={() => <div>apps</div>} />\n          <Route\n            path=\"/:userSlug/:schedulingLinkSlug\"\n            component={BookingPage}\n          />\n        </Switch>\n        <Switch>\n          <Route\n            path=\"/links/:id\"\n            component={() => (\n              <div className=\"w-full lg:w-4/5 border-l border-gray-200 border-solid\">\n                <SchedulingLink />\n              </div>\n            )}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nconst DashboardWrapper = (props: RouteComponentProps) => {\n  return (\n    <AppDataProvider>\n      <Dashboard {...props} />\n    </AppDataProvider>\n  );\n};\n\nexport default DashboardWrapper;\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/Header.tsx",["669","670","671","672","673"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/store/init.ts",[],["674","675"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/store/index.tsx",["676","677"],"import {useEffect, useState} from 'react';\n// @ts-ignore\nimport * as datascript from 'datascript';\nimport _ from 'lodash';\nimport {useDebouncedCallback} from 'use-debounce';\n\nexport type StoreIdentifier = string;\n\nexport interface Store {\n  conn: any;\n  db: any;\n}\n\nclass StoreContext {\n  current: StoreIdentifier = '';\n  store: Map<StoreIdentifier, Store> = new Map<StoreIdentifier, Store>();\n\n  set(key: StoreIdentifier, conn: any, db: any) {\n    this.store.set(key, {conn, db});\n  }\n\n  get(key: StoreIdentifier) {\n    return this.store.get(key);\n  }\n\n  setCurrent(id: StoreIdentifier) {\n    this.current = id;\n  }\n}\n\nexport const storeContext = new StoreContext();\n\nexport function useStore(): any {\n  const [store, _setStore] = useState(storeContext.get(storeContext.current));\n  const setStore = (key: StoreIdentifier, conn: any, db: any) => {\n    storeContext.set(key, conn, db);\n    storeContext.setCurrent(key);\n    _setStore(storeContext.get(key));\n  };\n  return [store, setStore];\n}\n\nexport function useCurrentStore() {\n  const [current, setCurrent] = useState(storeContext.current);\n  useEffect(() => {\n    storeContext.current = current;\n  }, [current]);\n  return {current, setCurrent};\n}\n\nexport function useConn() {\n  const {current} = useCurrentStore();\n  const store = storeContext.get(current);\n  if (!store) {\n    return null;\n  }\n  return store.conn;\n}\n\nexport function useQuery(\n  query: any,\n  args: any,\n  callback?: any,\n  sortBy?: Function[]\n) {\n  const [results, setResults] = useState<any>([]);\n  const conn = useConn();\n\n  useEffect(() => {\n    if (conn) {\n      const subscriptionId = datascript.posh_q(\n        (value: any) => {\n          if (value && callback) {\n            if (sortBy) {\n              setResults(\n                _.sortBy(\n                  value.map((v: any) => callback(v)),\n                  sortBy\n                )\n              );\n            } else {\n              setResults(value.map((v: any) => callback(v)));\n            }\n          } else if (sortBy) {\n            setResults(_.sortBy(value, sortBy));\n          } else {\n            setResults(value);\n          }\n        },\n        query,\n        conn,\n        args\n      );\n      return () => {\n        return datascript.posh_unsubscribe(subscriptionId);\n      };\n    }\n    return () => {};\n  }, [conn, query, JSON.stringify(args)]);\n  return results;\n}\n\nexport function useQueryOne(\n  query: any,\n  args: any,\n  callback?: any,\n  defaultValue?: any\n) {\n  const results = useQuery(query, args, callback);\n  if (results.length === 1) {\n    return results[0];\n  }\n  if (results.length > 1) {\n    console.log('Results more than one');\n    return results[0];\n  }\n  if (callback) {\n    if (defaultValue) return defaultValue;\n    return {};\n  }\n  return results;\n}\n\nexport function useTransact() {\n  const conn = useConn();\n  return (txData: any) => {\n    datascript.posh_transact(conn, txData, txData);\n  };\n}\nexport function useDebouncedTransact(wait = 100) {\n  const conn = useConn();\n  return useDebouncedCallback((txData: any) => {\n    datascript.posh_transact(conn, txData, txData);\n  }, wait);\n}\n",["678","679"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/store/schema.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventType.tsx",["680","681","682","683","684","685","686","687","688","689","690"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventTypeEdit.tsx",["691","692"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventInviteeQuestionsSection.tsx",[],["693","694"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventAvailabilitySection.tsx",["695","696","697","698"],"import React, {useEffect, useState} from 'react';\nimport _ from 'lodash';\nimport BookingRangeContainer from './BookingRangeContainer';\nimport DurationSelector from '../common/DurationSelector';\nimport BufferSelector from '../common/BufferSelector';\nimport {useQuery, useQueryOne, useTransact} from '../../store';\nimport CancelButton from './CancelButton';\nimport {\n  PERIOD_TYPE_AVAILABLE_MOVING,\n  PERIOD_TYPE_FIXED,\n  PERIOD_TYPE_MOVING,\n  PERIOD_TYPE_UNLIMITED,\n  WEEKDAYS,\n} from '../constants';\nimport ScheduleContainer from './ScheduleContainer';\nimport {EditingContext} from '../../hooks/EditingContext';\n\n// function BookingRangeContainer({ eventTypeValue }: any) {\n//   return (\n//     <div data-container=\"booking_range_fieldset\">\n//       <div className=\"mb-8 pb56 border-b border-gray-400\">\n//         <div className=\"my-3\">\n//           <div className=\"text-16 font-bold\">Date range</div>\n//           <div className=\"text-light text-sm\">Invitees can schedule...</div>\n//         </div>\n//         <BookingRangeContainer />\n//       </div>\n//     </div>\n//   );\n// }\n\nfunction DateRangeDescription({periodType, maxBookingTime}: any) {\n  switch (periodType) {\n    case PERIOD_TYPE_MOVING:\n    case PERIOD_TYPE_AVAILABLE_MOVING:\n      if (maxBookingTime) {\n        return <span>{maxBookingTime / 60 / 24} rolling days</span>;\n      } else {\n        return <span></span>;\n      }\n    case PERIOD_TYPE_FIXED:\n    case PERIOD_TYPE_UNLIMITED:\n      return <span>in construction</span>;\n  }\n  return <span />;\n}\n\nfunction DurationContainer() {\n  return (\n    <div className=\"pt32 pb56 border-b border-gray-400\">\n      <DurationSelector />\n    </div>\n  );\n}\n\nfunction BuffersContainer() {\n  return (\n    <div className=\"pt32 pb56\">\n      <BufferSelector />\n    </div>\n  );\n}\n\nfunction EventAvailabilityEdit({user, eventType, open, close}: any) {\n  const transact = useTransact();\n  const [userInfo, setUserInfo] = useState(user);\n  const [eventTypeValue, setEventTypeValue] = useState(eventType);\n  const [changed, setChanged] = useState(false);\n  const [forceCancel, setForceCancel] = useState(false);\n\n  const markChanged = () => {\n    if (!changed) {\n      setChanged(true);\n    }\n  };\n\n  const {\n    active_availability_rule: activeAvailabilityRule,\n    own_availability_rule: ownAvailabilityRule,\n  } = userInfo;\n\n  const schedules = useQuery(\n    '[:find ?s ?n ?r :in $ ?u :where [?e \":user/uid\" ?u] [?e \":user/schedules\" ?s] [?se \":schedule/uid\" ?s] [(get-else $ ?se \":schedule/name\" \"\") ?n] [?se \":schedule/rules\" ?r]]',\n    'u1',\n    ([id, name, rules]: any) => ({id, name, rules})\n  );\n\n  const [currentSchedule, setCurrentSchedule] = useState();\n\n  useEffect(() => {\n    setCurrentSchedule(\n      schedules.find((sch: any) => sch.id === activeAvailabilityRule)\n    );\n  }, [schedules]);\n\n  const rules = currentSchedule\n    ? WEEKDAYS.map((day) => {\n        // @ts-ignore\n        const rule = currentSchedule.rules.find(\n          (rule: any) => rule.wday === day\n        );\n        if (rule) {\n          if (rule.available === undefined) {\n            return {...rule, available: true};\n          } else {\n            return rule;\n          }\n        }\n        return {\n          type: 'wday',\n          wday: day,\n          intervals: [],\n          available: false,\n        };\n      })\n    : [];\n\n  const save = (eventTypeValue: any) => {\n    if (changed) {\n      const txs = [];\n\n      const tx: any = {};\n      Object.keys(eventTypeValue).forEach((key) => {\n        tx[`:eventType/${key}`] = eventTypeValue[key];\n      });\n      txs.push(tx);\n\n      txs.push({\n        // @ts-ignore\n        ':schedule/uid': currentSchedule.id,\n        // @ts-ignore\n        ':schedule/rules': currentSchedule.rules,\n      });\n\n      transact(txs);\n    }\n  };\n\n  const setPeriodType = (type: string) => {\n    markChanged();\n    setEventTypeValue({\n      ...eventTypeValue,\n      period_type: type,\n    });\n  };\n  const setMaxBookingTime = (value: number) => {\n    markChanged();\n\n    setEventTypeValue({\n      ...eventTypeValue,\n      max_booking_time: value * 60 * 24,\n    });\n  };\n  const setStartEndDate = (start: string, end: string) => {\n    markChanged();\n\n    setEventTypeValue({\n      ...eventTypeValue,\n      start_date: start,\n      end_date: end,\n    });\n  };\n\n  const setActiveAvailabilityRule = () => {};\n  const setScheduleRuleEnabled = (\n    type: string,\n    date: string,\n    enabled: boolean\n  ) => {\n    const copy = _.cloneDeep(currentSchedule);\n    // @ts-ignore\n    const rule = copy.rules.find((rule: any) => rule.wday === date);\n    rule.available = enabled;\n\n    setCurrentSchedule(copy);\n    markChanged();\n  };\n\n  const setIntervalTime = (\n    date: string,\n    index: number,\n    type: string,\n    value: string\n  ) => {\n    console.log('set from', date, index, value, currentSchedule);\n    if (currentSchedule) {\n      const copy = _.cloneDeep(currentSchedule);\n      // @ts-ignore\n      const rule = copy.rules.find(\n        (rule: any) => rule.wday === date || rule.date === date\n      );\n      if (rule) {\n        if (rule.intervals) {\n          const interval = rule.intervals[index];\n          if (interval) {\n            interval[type] = value;\n            setCurrentSchedule(copy);\n            markChanged();\n            return;\n          }\n        }\n      }\n    }\n    console.log('Err set rule from ');\n  };\n\n  const setRuleFrom = (date: string, index: number, value: string) => {\n    setIntervalTime(date, index, 'from', value);\n  };\n\n  const setRuleTo = (date: string, index: number, value: string) => {\n    setIntervalTime(date, index, 'to', value);\n  };\n  const addInterval = (date: string) => {\n    if (currentSchedule) {\n      const copy = _.cloneDeep(currentSchedule);\n      // @ts-ignore\n      const rule = copy.rules.find(\n        (rule: any) => rule.wday === date || rule.date === date\n      );\n      console.log('add', rule);\n      if (rule) {\n        if (rule.intervals) {\n          rule.intervals.push({\n            from: '09:00',\n            to: '17:00',\n          });\n          rule.available = true;\n          setCurrentSchedule(copy);\n          markChanged();\n          return;\n        }\n      }\n    }\n  };\n\n  const removeInterval = (date: string, index: number) => {\n    if (currentSchedule) {\n      const copy = _.cloneDeep(currentSchedule);\n      // @ts-ignore\n      const rule = copy.rules.find(\n        (rule: any) => rule.wday === date || rule.date === date\n      );\n      if (rule) {\n        if (rule.intervals) {\n          rule.intervals.splice(index, 1);\n\n          if (rule.intervals.length === 0) {\n            rule.available = false;\n          }\n          setCurrentSchedule(copy);\n          markChanged();\n          return;\n        }\n      }\n    }\n  };\n  const duplicateRule = () => {};\n\n  console.log('sec', currentSchedule);\n\n  return (\n    <EditingContext.Provider\n      value={{\n        value: eventTypeValue,\n        activeAvailabilityRule,\n        setActiveAvailabilityRule,\n        ownAvailabilityRule,\n        currentSchedule,\n        rules,\n        setScheduleRuleEnabled,\n        setRuleFrom,\n        setRuleTo,\n        addInterval,\n        removeInterval,\n        setPeriodType,\n        setMaxBookingTime,\n        setStartEndDate,\n        markChanged,\n      }}\n    >\n      <>\n        <div\n          className=\"flex flex-row justify-between cursor-pointer\"\n          onClick={(e) => {\n            if (!changed) {\n              close();\n              e.stopPropagation();\n            }\n          }}\n        >\n          <div className=\"flex flex-row p-2 \">\n            <div className=\"px-3\">\n              <i className=\"far fa-calendar-check\" />\n            </div>\n            <div>\n              <div className=\"text-lg\">When can people book this event?</div>\n              <div className=\"text-gray-700\">\n                {eventTypeValue.duration} min,{' '}\n                <DateRangeDescription\n                  periodType={eventTypeValue.period_type}\n                  maxBookingTime={eventTypeValue.max_booking_time}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row\">\n            <CancelButton changed={changed} close={close} />\n            <div\n              className=\"gentle-flex mx-2 cursor-pointer\"\n              onClick={() => {\n                console.log('Value', eventTypeValue, changed);\n                save(eventTypeValue);\n                close();\n              }}\n            >\n              Save & Close\n            </div>\n          </div>\n        </div>\n        <div className=\"border-t border-b border-gray-200\">\n          <div className=\"px-2 py-1 lg:px-10 lg:py-8\">\n            <div className=\"flex flex-col\">\n              <BookingRangeContainer />\n              <ScheduleContainer\n                user={userInfo}\n                setUser={setUserInfo}\n                eventTypeValue={eventTypeValue}\n                setEventTypeValue={setEventTypeValue}\n              />\n              <DurationContainer />\n              <BuffersContainer />\n            </div>\n          </div>\n          <div className=\"flex flex-row justify-end  border-t border-gray-400 py-4\">\n            <div className=\"mx-2 cursor-pointer\" onClick={close}>\n              Cancel\n            </div>\n            <div className=\"mx-2 cursor-pointer\" onClick={open}>\n              Save & Close\n            </div>\n          </div>\n        </div>\n      </>\n    </EditingContext.Provider>\n  );\n}\n\nfunction EventAvailabilityEditWrapper(props: any) {\n  const {preloadValue, eventTypeId} = props;\n  const user = useQueryOne(\n    '[:find ?aar ?oar ?n ?r :in $ ?u :where [?e \":user/uid\" ?u] [?e \":user/active_availability_rule\" ?aar] [?e \":user/own_availability_rule\" ?oar] [?ae \":schedule/uid\" ?aar] [(get-else $ ?ae \":schedule/name\" \"\") ?n] [?ae \":schedule/rules\" ?r]]',\n    'u1',\n    ([active_availability_rule, own_availability_rule, name, rules]: any) => ({\n      active_availability_rule,\n      own_availability_rule,\n      name,\n      rules,\n    })\n  );\n\n  const eventType = useQueryOne(\n    '[:find ?i ?n ?d ?loc ?url ?c ?dr ?p ?mbt ?sdt ?edt  ?last_edited :in $ ?i :where [?e \":eventType/uid\" ?i] [?e \":eventType/name\" ?n] [?e \":eventType/description\" ?d] [?e \":eventType/location\" ?loc] [?e \":eventType/url\" ?url] [?e \":eventType/color\" ?c] [?e \":eventType/duration\" ?dr] [?e \":eventType/period_type\" ?p] [?e \":eventType/max_booking_time\" ?mbt] [?e \":eventType/start_date\" ?sdt] [?e \":eventType/end_date\" ?edt]  [?e \":eventType/last_edited\" ?last_edited] ]',\n    eventTypeId,\n    ([\n      uid,\n      name,\n      description,\n      location,\n      url,\n      color,\n      duration,\n      period_type,\n      max_booking_time,\n      start_date,\n      end_date,\n      editAt,\n    ]: any) => ({\n      uid,\n      name,\n      description,\n      location,\n      url,\n      color,\n      duration,\n      period_type,\n      max_booking_time,\n      start_date,\n      end_date,\n      editAt,\n    })\n  );\n\n  if (_.isEmpty(eventType)) {\n    return <XX eventType={preloadValue} />;\n  }\n\n  return <EventAvailabilityEdit {...props} user={user} eventType={eventType} />;\n}\n\nfunction XX({editing, setEditing, eventType}: any) {\n  return (\n    <div\n      className=\"flex flex-row justify-between cursor-pointer\"\n      onClick={() => {\n        setEditing(!editing);\n      }}\n    >\n      <div className=\"flex flex-row p-2 \">\n        <div className=\"px-3\">\n          <i className=\"far fa-calendar-check\" />\n        </div>\n        <div>\n          <div className=\"text-lg\">When can people book this event?</div>\n          <div className=\"text-gray-700\">\n            {eventType.duration} min,{' '}\n            <DateRangeDescription\n              periodType={eventType.period_type}\n              maxBookingTime={eventType.max_booking_time}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function EventAvailabilitySection(props: any) {\n  const {eventTypeId: id} = props;\n\n  const eventType = useQueryOne(\n    '[:find ?i ?n ?d ?loc ?url ?c ?dr ?p ?mbt ?sdt ?edt  ?last_edited :in $ ?i :where [?e \":eventType/uid\" ?i] [?e \":eventType/name\" ?n] [?e \":eventType/description\" ?d] [?e \":eventType/location\" ?loc] [?e \":eventType/url\" ?url] [?e \":eventType/color\" ?c] [?e \":eventType/duration\" ?dr] [?e \":eventType/period_type\" ?p] [?e \":eventType/max_booking_time\" ?mbt] [?e \":eventType/start_date\" ?sdt] [?e \":eventType/end_date\" ?edt]  [?e \":eventType/last_edited\" ?last_edited] ]',\n    id,\n    ([\n      uid,\n      name,\n      description,\n      location,\n      url,\n      color,\n      duration,\n      period_type,\n      max_booking_time,\n      start_date,\n      end_date,\n      editAt,\n    ]: any) => ({\n      uid,\n      name,\n      description,\n      location,\n      url,\n      color,\n      duration,\n      period_type,\n      max_booking_time,\n      start_date,\n      end_date,\n      editAt,\n    })\n  );\n\n  const [editing, setEditing] = useState(false);\n  const close = () => {\n    setEditing(false);\n  };\n  const open = () => {\n    setEditing(true);\n  };\n\n  console.log('ava', eventType);\n\n  return (\n    <div data-section=\"availability\">\n      <div\n        className={`mt-2 border-b lg:border  hover:border-blue-500 border-black lg:rounded `}\n      >\n        {editing ? (\n          <EventAvailabilityEditWrapper\n            preloadValue={eventType}\n            eventTypeId={id}\n            open={open}\n            close={close}\n          />\n        ) : (\n          <XX eventType={eventType} editing={editing} setEditing={setEditing} />\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventGeneralSection.tsx",["699","700","701","702","703"],"import React, {useCallback, useEffect, useState} from 'react';\nimport * as Dialog from '@radix-ui/react-dialog';\n\nimport SingleSelect from './EventLocationSelect';\nimport Editor from '../common/Editor';\nimport {useDebouncedTransact, useQueryOne, useTransact} from '../../store';\nimport CancelButton from './CancelButton';\nimport {EditingContext} from '../../hooks/EditingContext';\n\nfunction EventGeneralEdit({eventType, open, close}: any) {\n  const transact = useTransact();\n  const [eventTypeValue, setEventTypeValue] = useState(eventType);\n  const [changed, setChanged] = useState(false);\n\n  const markChanged = () => {\n    if (!changed) {\n      setChanged(true);\n    }\n  };\n\n  const save = (eventTypeValue: any) => {\n    const tx: any = {};\n    Object.keys(eventTypeValue).forEach((key) => {\n      tx[`:eventType/${key}`] = eventTypeValue[key];\n    });\n    console.log('Tx', tx);\n    transact([tx]);\n  };\n\n  return (\n    <>\n      <div\n        className={`flex flex-row justify-between ${\n          changed ? '' : 'cursor-pointer'\n        }`}\n        onClick={(e) => {\n          if (!changed) {\n            close();\n            e.stopPropagation();\n          }\n        }}\n      >\n        <div className=\"flex flex-row p-2\">\n          <div className=\"px-3\">\n            <i className=\"fas fa-circle text-red-500\" />\n          </div>\n          <div>\n            <div className=\"text-lg\">What event is this?</div>\n            <div className=\"text-gray-700\">{eventTypeValue.name}</div>\n          </div>\n        </div>\n        <div className=\"flex flex-row\">\n          <CancelButton changed={changed} close={close} />\n          <div\n            className=\"gentle-flex mx-2 cursor-pointer\"\n            onClick={() => {\n              console.log('Value', eventTypeValue, changed);\n              save(eventTypeValue);\n              close();\n            }}\n          >\n            Save & Close\n          </div>\n        </div>\n      </div>\n      <div className=\"border-t border-b border-gray-300\">\n        <div className=\"px-2 py-1 lg:px-10 lg:py-8\">\n          <div className=\"flex flex-col\">\n            <div className=\"mb-4\">\n              <div className=\"my-3\">Event name *</div>\n              <div className=\"border border-gray-400 cursor-text w-64\">\n                <input\n                  type=\"text\"\n                  className=\"w-full h-full p-3 focus:outline-none focus:shadow-outline focus:border-blue-700\"\n                  value={eventTypeValue.name}\n                  onChange={(e) => {\n                    setEventTypeValue({\n                      ...eventTypeValue,\n                      name: e.target.value,\n                    });\n                    markChanged();\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"mb-4\">\n              <div className=\"my-3\">Location</div>\n              <SingleSelect\n                defaultValue={eventTypeValue.location}\n                onChange={(option: any) => {\n                  setEventTypeValue({\n                    ...eventTypeValue,\n                    location: option.value,\n                  });\n                  markChanged();\n                }}\n              />\n            </div>\n\n            <div className=\"mb-4\">\n              <div className=\"my-3\">Description/Instructions</div>\n              <Editor\n                defaultValue={eventTypeValue.description}\n                onChange={(value: any) => {\n                  setEventTypeValue({\n                    ...eventTypeValue,\n                    description: value,\n                  });\n                  markChanged();\n                }}\n              />\n            </div>\n\n            <div className=\"mb-4\">\n              <div className=\"my-3\">Event link *</div>\n              <div className=\"flex flex-row\">\n                <div className=\"mr-3\">mytime.com/ycy/</div>\n                <div className=\"border border-gray-400 cursor-text \">\n                  <input\n                    type=\"text\"\n                    className=\"w-full lg:w-48 p-1 lg:p-3 focus:outline-none focus:shadow-outline focus:border-blue-700\"\n                    value={eventTypeValue.url}\n                    onChange={(e) => {\n                      setEventTypeValue({\n                        ...eventTypeValue,\n                        url: e.target.value,\n                      });\n                      markChanged();\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"mb-4\">\n              <div className=\"my-3\">Event color</div>\n              <div className=\"flex flex-row\">\n                {['red', 'green', 'blue'].map((color) => {\n                  return (\n                    <div\n                      className=\"mr-2 cursor-pointer\"\n                      key={color}\n                      onClick={() => {\n                        setEventTypeValue({\n                          ...eventTypeValue,\n                          color,\n                        });\n                        markChanged();\n                      }}\n                    >\n                      <i\n                        className={`fas ${\n                          color === eventTypeValue.color\n                            ? 'fa-check-circle'\n                            : 'fa-circle'\n                        }  fa-2x text-${color}-500`}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"flex flex-row justify-end border-t border-gray-300 py-4\">\n          <div className=\"mx-2 cursor-pointer\">Cancel</div>\n          <div className=\"mx-2 cursor-pointer\">Save & Close</div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default function EventGeneralSection(props: any) {\n  const {eventTypeId: id} = props;\n\n  const eventType = useQueryOne(\n    '[:find ?i ?n ?d ?loc ?url ?c ?last_edited :in $ ?i :where [?e \":eventType/uid\" ?i] [?e \":eventType/name\" ?n] [?e \":eventType/description\" ?d] [?e \":eventType/location\" ?loc] [?e \":eventType/url\" ?url] [?e \":eventType/color\" ?c] [?e \":eventType/last_edited\" ?last_edited] ]',\n    id,\n    ([uid, name, description, location, url, color, editAt]: any) => ({\n      uid,\n      name,\n      description,\n      location,\n      url,\n      color,\n      editAt,\n    })\n  );\n\n  const [editing, setEditing] = useState(false);\n  const close = () => {\n    setEditing(false);\n  };\n  const open = () => {\n    setEditing(true);\n  };\n\n  return (\n    <div data-section=\"general\">\n      <div\n        className={`mt-2 border-b lg:border  hover:border-blue-500 border-black lg:rounded `}\n      >\n        {editing ? (\n          <EventGeneralEdit eventType={eventType} open={open} close={close} />\n        ) : (\n          <div\n            className=\"flex flex-row justify-between cursor-pointer\"\n            onClick={() => {\n              setEditing(!editing);\n            }}\n          >\n            <div className=\"flex flex-row p-2 \">\n              <div className=\"px-3\">\n                <i className=\"fas fa-circle text-red-500\" />\n              </div>\n              <div>\n                <div className=\"text-lg\">What event is this?</div>\n                <div className=\"text-gray-700\">{eventType.name}</div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventNotifyPolicy.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/constants.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/CancelButton.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/BookingRangeContainer.tsx",["704"],"import React, {useContext, useState} from 'react';\nimport Select from 'react-select';\nimport {\n  PERIOD_TYPE_AVAILABLE_MOVING,\n  PERIOD_TYPE_FIXED,\n  PERIOD_TYPE_MOVING,\n  PERIOD_TYPE_UNLIMITED,\n} from '../constants';\nimport DatePicker from './DatePicker';\nimport {EditingContext} from '../../hooks/EditingContext';\n\nexport default function BookingRangeContainer(props: any) {\n  const context = useContext(EditingContext);\n  const {value, setPeriodType, setMaxBookingTime, setStartEndDate} = context;\n  const {period_type, max_booking_time, start_date, end_date} = value;\n\n  const setMoving = () => {\n    if (\n      period_type !== PERIOD_TYPE_MOVING &&\n      period_type !== PERIOD_TYPE_AVAILABLE_MOVING\n    ) {\n      setPeriodType(PERIOD_TYPE_MOVING);\n    }\n  };\n\n  return (\n    <div data-container=\"booking_range_fieldset\">\n      <div className=\"mb-8 pb56 border-b border-gray-400\">\n        <div className=\"my-3\">\n          <div className=\"text-16 font-bold\">Date range</div>\n          <div className=\"text-light text-sm\">Invitees can schedule...</div>\n        </div>\n        <div className=\"flex flex-col\">\n          <div className=\"flex flex-row\">\n            <div\n              className=\"gentle-flex pr-4 cursor-pointer\"\n              onClick={setMoving}\n            >\n              {period_type === PERIOD_TYPE_MOVING ||\n              period_type === PERIOD_TYPE_AVAILABLE_MOVING ? (\n                <i className=\"far fa-check-square\" />\n              ) : (\n                <i className=\"far fa-square\" />\n              )}\n            </div>\n            <div\n              className=\"flex flex-row flex-wrap cursor-pointer\"\n              onClick={setMoving}\n            >\n              <div className=\"flex flex-row\">\n                <div className=\"gentle-flex\" style={{height: '46px'}}>\n                  <input\n                    type=\"number\"\n                    className=\"border border-gray-400 cursor-text h-full w-16 px-2 focus:outline-none focus:shadow-outline focus:border-blue-300\"\n                    defaultValue={max_booking_time / 24 / 60}\n                    onChange={(e) => {\n                      setMaxBookingTime(parseInt(e.target.value));\n                    }}\n                  />\n                </div>\n                <div className=\"center-v pr-4\">\n                  <div className=\"w-40 lg:w-48 cursor-pointer focus:outline-none \">\n                    <Select\n                      className=\"\"\n                      classNamePrefix=\"select\"\n                      onChange={(option: any) => {\n                        setPeriodType(option.value);\n                      }}\n                      components={{\n                        DropdownIndicator: () => {\n                          return null;\n                        },\n                        IndicatorSeparator: () => {\n                          return null;\n                        },\n                      }}\n                      styles={{\n                        container: (a) => {\n                          a.height = '46px';\n                          return a;\n                        },\n                        control: (a) => {\n                          a.height = '100%';\n                          a.borderRadius = 0;\n                          return a;\n                        },\n                      }}\n                      defaultValue={\n                        period_type === PERIOD_TYPE_MOVING\n                          ? {\n                              value: PERIOD_TYPE_MOVING,\n                              label: 'Calendar days',\n                              color: '#00B8D9',\n                            }\n                          : {\n                              value: PERIOD_TYPE_AVAILABLE_MOVING,\n                              label: 'Business days',\n                              color: '#00B8D9',\n                            }\n                      }\n                      name=\"color\"\n                      options={[\n                        {\n                          value: PERIOD_TYPE_MOVING,\n                          label: 'Calendar days',\n                          color: '#00B8D9',\n                        },\n                        {\n                          value: PERIOD_TYPE_AVAILABLE_MOVING,\n                          label: 'Business days',\n                          color: '#00B8D9',\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"gentle-flex\">\n                <div>into the future</div>\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-6 flex flex-row\">\n            <div\n              className=\"gentle-flex pr-4 cursor-pointer\"\n              onClick={() => setPeriodType(PERIOD_TYPE_FIXED)}\n            >\n              {period_type === PERIOD_TYPE_FIXED ? (\n                <i className=\"far fa-check-square\" />\n              ) : (\n                <i className=\"far fa-square\" />\n              )}\n            </div>\n            <div\n              className=\"flex flex-row flex-wrap cursor-pointer\"\n              onClick={() => setPeriodType(PERIOD_TYPE_FIXED)}\n            >\n              <div className=\"gentle-flex pr-4\">With a date range</div>\n              {period_type === PERIOD_TYPE_FIXED && (\n                <DatePicker\n                  setStartEndDate={setStartEndDate}\n                  defaultStartDate={start_date}\n                  defaultEndDate={end_date}\n                />\n              )}\n            </div>\n          </div>\n          {/* unlimited*/}\n          <div className=\"mt-6 flex flex-row\">\n            <div\n              className=\"gentle-flex pr-4 cursor-pointer\"\n              onClick={() => setPeriodType(PERIOD_TYPE_UNLIMITED)}\n            >\n              {period_type === PERIOD_TYPE_UNLIMITED ? (\n                <i className=\"far fa-check-square\" />\n              ) : (\n                <i className=\"far fa-square\" />\n              )}\n            </div>\n            <div\n              className=\"gentle-flex cursor-pointer\"\n              onClick={() => setPeriodType(PERIOD_TYPE_UNLIMITED)}\n            >\n              <div>Indefinitely into the future</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventLocationSelect.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/ScheduleContainer.tsx",["705","706","707","708","709","710","711","712","713","714"],"import React, {\n  useCallback,\n  useRef,\n  useState,\n  Fragment,\n  useContext,\n} from 'react';\nimport CheckboxStateless from '../common/CheckboxStateless';\nimport Select from 'react-select';\nimport * as Popover from '@radix-ui/react-popover';\n\nimport {useQuery} from '../../store';\nimport dayjs from 'dayjs';\nimport {listOfTime, listOfTime24, WEEKDAYS} from '../constants';\nimport {EditingContext} from '../../hooks/EditingContext';\nimport {random} from 'nanoid';\nimport moment, {now} from 'moment';\nimport {number} from 'prop-types';\nimport _ from 'lodash';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport {DayPickerSingleDateController} from 'react-dates';\n\nconst sliceOfTime = listOfTime24.slice(0, 24 * 4);\nconst timeOptions = sliceOfTime.map((slice) => ({\n  value: slice,\n  label: slice,\n}));\n\nfunction RuleCopyToMenu({date}: any) {\n  return (\n    <Popover.Root>\n      <Popover.Trigger className=\"outline-none focus:outline-none\">\n        <i className=\"far fa-copy text-light hover:text-black cursor-pointer\" />\n      </Popover.Trigger>\n      <Popover.Content\n        className=\"outline-none border border-black border-solid p-3\"\n        style={{\n          borderRadius: 3,\n          fontSize: 14,\n          backgroundColor: 'white',\n          color: 'black',\n        }}\n      >\n        <div className=\"flex flex-col\">\n          <div>COPY ITEMS TO...</div>\n          <div className=\"grid grid-cols-2 gap-y-2 py-2\">\n            {WEEKDAYS.map((day) => {\n              return (\n                <Fragment key={day}>\n                  <div className=\"cursor-pointer\">{_.capitalize(day)}</div>\n                  <div className=\"cursor-pointer flex flex-row justify-end\">\n                    <div className=\"gentle-flex\">\n                      <CheckboxStateless value={date === day} />\n                    </div>\n                  </div>\n                </Fragment>\n              );\n            })}\n          </div>\n          <div className=\"mt-2 py-2 rounded cursor-pointer gentle-flex bg-blue-400 text-white\">\n            Apply\n          </div>\n        </div>\n      </Popover.Content>\n    </Popover.Root>\n  );\n}\n\nfunction SelectInput({defaultValue, onChange}: any) {\n  const selectRef = useRef<any>(null);\n  // Feature of focusing selected option when menu is getting opened\n  const onMenuOpen = useCallback(() => {\n    // Calling an initial prop if it has been passed\n    // Getting a selected option\n    const option = selectRef.current?.select?.state?.selectValue?.[0];\n    if (option) {\n      setTimeout(() => {\n        // Setting a focused value as a selected one\n        // References:\n        // - https://github.com/JedWatson/react-select/blob/master/packages/react-select/src/Select.js#L503\n        // - https://github.com/JedWatson/react-select/blob/master/packages/react-select/src/Select.js#L802\n        if (selectRef.current?.select) {\n          const selectedIndex = selectRef.current.select.state.menuOptions.focusable.findIndex(\n            (opt: any) => opt.value === option.value\n          );\n          if (selectedIndex >= 0) {\n            // Focusing selected option only if it exists\n            selectRef.current.select.scrollToFocusedOptionOnUpdate = true;\n            selectRef.current.select.inputIsHiddenAfterUpdate = false;\n            selectRef.current.select.setState({\n              focusedValue: null,\n              focusedOption:\n                selectRef.current.select.state.menuOptions.focusable[\n                  selectedIndex + 3\n                ],\n            });\n          }\n        }\n      });\n    }\n  }, [selectRef.current]);\n\n  return (\n    <Select\n      ref={selectRef}\n      className=\"\"\n      classNamePrefix=\"select\"\n      components={{\n        DropdownIndicator: () => {\n          return null;\n        },\n        IndicatorSeparator: () => {\n          return null;\n        },\n      }}\n      name=\"color\"\n      defaultValue={defaultValue}\n      options={timeOptions}\n      onMenuOpen={onMenuOpen}\n      onChange={onChange}\n    />\n  );\n}\n\nfunction IntervalsContainer({date, durations: intervals, available}: any) {\n  const {\n    setScheduleRuleEnabled,\n    setRuleFrom,\n    setRuleTo,\n    addInterval,\n    removeInterval,\n  } = useContext(EditingContext);\n  const enabled = available !== false;\n  const [checkPass, setCheckPass] = useState(true);\n\n  return (\n    <div className=\"p-4 border-gray-200 border-t\">\n      <div className=\"grid md:grid-cols-3x w-full\">\n        <div className=\"flex flex-row justify-between\">\n          <div className=\"w-16 md:pt-3 flex flex-row cursor-pointer\">\n            <div\n              className=\"pr-3\"\n              onClick={() => setScheduleRuleEnabled('wday', date, !enabled)}\n            >\n              <CheckboxStateless value={enabled} />\n            </div>\n            <div\n              className=\"font-medium\"\n              onClick={() => setScheduleRuleEnabled('wday', date, !enabled)}\n            >\n              {(date as string).substr(0, 3).toUpperCase()}\n            </div>\n          </div>\n          <div className=\"visible md:invisible flex flex-row\">\n            <div\n              className=\"mx-2\"\n              onClick={() => {\n                console.log('add new interval');\n                addInterval(date);\n              }}\n            >\n              <i className=\"fas fa-plus text-light hover:text-black cursor-pointer\" />\n            </div>\n            <div\n              onClick={() => {\n                console.log('copy to another');\n              }}\n            >\n              <i className=\"far fa-copy text-light hover:text-black cursor-pointer\" />\n            </div>\n          </div>\n        </div>\n        {enabled ? (\n          <div className=\"flex-1 flex flex-col h-full\">\n            {intervals.map((interval: any, index: number) => {\n              return (\n                <div key={index} className=\"flex flex-col\">\n                  <div className=\"flex flex-row my-1\">\n                    <div className=\"mx-2 md:mx-3\">\n                      <div className=\"flex flex-row\">\n                        <div className=\"w-20\">\n                          <SelectInput\n                            defaultValue={{\n                              value: interval.from,\n                              label: interval.from,\n                            }}\n                            onChange={({value}: any, {action}: any) => {\n                              if (action === 'select-option') {\n                                console.log('OnChange', value, action);\n                                setRuleFrom(date, index, value);\n                              }\n                            }}\n                          />\n                        </div>\n                        <div>\n                          <div className=\"px-1 center-v\">\n                            <i className=\"fas fa-minus text-light\" />\n                          </div>\n                        </div>\n                        <div className=\"w-20\">\n                          <SelectInput\n                            defaultValue={{\n                              value: interval.to,\n                              label: interval.to,\n                            }}\n                            onChange={({value}: any, {action}: any) => {\n                              if (action === 'select-option') {\n                                console.log('OnChange', value, action);\n                                setRuleTo(date, index, value);\n                              }\n                            }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"center-v\">\n                        <div\n                          className=\"\"\n                          onClick={() => {\n                            console.log('delete', date, index, interval);\n                            removeInterval(date, index);\n                          }}\n                        >\n                          <i className=\"far fa-trash-alt text-light hover:text-black cursor-pointer\" />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {!checkPass && <div className=\"mx-2 md:mx-3\">Info</div>}\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <div className=\"flex-1 text-light md:mx-2 md:pt-3\">Unavailable</div>\n        )}\n        <div className=\"invisible md:visible flex flex-row justify-end\">\n          <div\n            className=\"mx-2 md:pt-3\"\n            onClick={() => {\n              console.log('add new interval');\n              addInterval(date);\n            }}\n          >\n            <i className=\"fas fa-plus text-light hover:text-black cursor-pointer\" />\n          </div>\n          <div\n            className=\"md:pt-3\"\n            onClick={() => {\n              console.log('copy to another');\n            }}\n          >\n            <RuleCopyToMenu date={date} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function ScheduleContainer(props: any) {\n  const {\n    activeAvailabilityRule,\n    ownAvailabilityRule,\n    currentSchedule,\n    rules,\n  } = useContext(EditingContext);\n\n  return (\n    <div className=\"pt32 pb56 border-b border-gray-400\">\n      <div>\n        <div className=\"grid lg:grid-cols-6-4 gap-2\">\n          <div className=\"text-16 font-bold\">\n            How do you want to offer your availability for this event type?\n          </div>\n          <div className=\"text-light\">\n            Select one of your schedules or define custom hours specific to this\n            type of event.\n          </div>\n          <div className=\"flex flex-col\">\n            <div className=\"flex flex-row flex-wrap\">\n              <div\n                className={`mt-4 mr-4 p-2 border-2 ${\n                  activeAvailabilityRule !== ownAvailabilityRule\n                    ? 'border-green-400 cursor-default'\n                    : 'border-gray-400 cursor-pointer'\n                } border-solid rounded gentle-flex`}\n                onClick={() => {}}\n              >\n                Use an existing schedule\n              </div>\n              <div\n                className={`mt-4 p-2 border-2 ${\n                  activeAvailabilityRule === ownAvailabilityRule\n                    ? 'border-green-400 cursor-default'\n                    : 'border-gray-400 cursor-pointer'\n                } border-solid rounded gentle-flex`}\n              >\n                Set custom hours\n              </div>\n            </div>\n            {activeAvailabilityRule !== ownAvailabilityRule && (\n              <div>Use an existing schedule</div>\n            )}\n          </div>\n        </div>\n        <div>\n          <div className=\"flex flex-row justify-end lg:visible invisible\">\n            <Dialog.Root>\n              <Dialog.Trigger className=\"outline-none focus:outline-none\">\n                <div className=\"gentle-flex mx-4 text-green-500 cursor-pointer\">\n                  Save as new schedule\n                </div>\n              </Dialog.Trigger>\n              <Dialog.Overlay\n                style={{\n                  backgroundColor: 'rgba(0, 0, 0, .15)',\n                  position: 'fixed',\n                  top: 0,\n                  right: 0,\n                  bottom: 0,\n                  left: 0,\n                }}\n              />\n              <Dialog.Content\n                className=\"outline-none focus:outline-none p-6\"\n                style={{\n                  position: 'fixed',\n                  top: '50%',\n                  left: '50%',\n                  transform: 'translate(-50%, -50%)',\n                  width: 400,\n                  // maxWidth: \"fit-content\",\n                  // maxHeight: \"85vh\",\n                  marginTop: '-5vh',\n                  backgroundColor: 'white',\n                  borderRadius: 6,\n                }}\n              >\n                <div className=\"font-bold text-xl\">\n                  Want to save this as a new schedule?\n                </div>\n                <div className=\"pt-10\">\n                  Save these hours to reuse with other event types. Manage all\n                  your schedules under availability.\n                </div>\n                <div className=\"w-full my-5\">\n                  <div>New schedule name</div>\n                  <div className=\"w-full mt-2\" style={{height: '46px'}}>\n                    <input\n                      type=\"text\"\n                      className=\"border border-gray-400 cursor-text h-full w-full px-2 focus:outline-none focus:shadow-outline focus:border-blue-300\"\n                      placeholder=\"Working Hours, Exclusive Hours, etc...\"\n                    />\n                  </div>\n                </div>\n                <div className=\"flex flex-row justify-between\">\n                  <Dialog.Close className=\"py-2 rounded focus:outline-none w-1/2 mr-6 text-center border border-black border-solid\">\n                    Cancel\n                  </Dialog.Close>\n                  <div className=\"py-2 rounded w-1/2 text-center bg-blue-400 text-white cursor-pointer\">\n                    Apply\n                  </div>\n                </div>\n              </Dialog.Content>\n            </Dialog.Root>\n\n            {/*<div className=\"flex flex-row border border-gray-300 rounded\">*/}\n            {/*  <div className=\"p-1 border-r border-gray-200 text-white rounded-l bg-gray-600\">*/}\n            {/*    List*/}\n            {/*  </div>*/}\n            {/*  <div className=\"p-1\">Calendar</div>*/}\n            {/*</div>*/}\n          </div>\n          <div className=\"flex flex-row justify-between flex-wrap w-full\">\n            <div className=\"lg:w-3/5 mt-4 w-full\">\n              <div className=\"flex flex-col border rounded-lg mr-2 border-gray-200\">\n                <div className=\"p-4\">\n                  Set the weekly hours you're typically available for events.\n                </div>\n                {rules.map((rule: any) => {\n                  if (rule.type === 'wday') {\n                    return (\n                      <IntervalsContainer\n                        key={rule.wday}\n                        date={rule.wday}\n                        available={rule.available}\n                        durations={rule.intervals}\n                      />\n                    );\n                  }\n                  return <span />;\n                })}\n              </div>\n            </div>\n            <div className=\"flex flex-col mt-4 lg:w-2/5 w-full\">\n              <div className=\"border-gray-200 rounded-lg  border\">\n                <div className=\"flex flex-row justify-between p-4 border-b border-gray-200\">\n                  <div>Add hours for specific dates.</div>\n                  <Dialog.Root>\n                    <Dialog.Trigger className=\"outline-none focus:outline-none\">\n                      <div className=\"px-2 rounded-md text-blue-300 border border-blue-300\">\n                        +\n                      </div>\n                    </Dialog.Trigger>\n                    <Dialog.Overlay\n                      style={{\n                        backgroundColor: 'rgba(0, 0, 0, .15)',\n                        position: 'fixed',\n                        top: 0,\n                        right: 0,\n                        bottom: 0,\n                        left: 0,\n                      }}\n                    />\n                    <Dialog.Content\n                      className=\"outline-none focus:outline-none\"\n                      style={{\n                        position: 'fixed',\n                        top: '50%',\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)',\n                        minWidth: 200,\n                        maxWidth: 'fit-content',\n                        maxHeight: '85vh',\n                        marginTop: '-5vh',\n                        backgroundColor: 'white',\n                        borderRadius: 6,\n                      }}\n                    >\n                      <div className=\"font-bold text-16 p-6\">\n                        Select the date(s) you want to assign specific hours\n                      </div>\n                      <div className=\"py-4 gentle-flex\"></div>\n                      <div className=\"px-6 py-6 border-t border-b border-solid border-gray-400 bg-gray-200 flex flex-col\">\n                        <div>What hours are you available?</div>\n                        <div>intervals</div>\n                        <div>intervals</div>\n                      </div>\n                      <div className=\"flex flex-row justify-between p-6\">\n                        <Dialog.Close className=\"py-2 rounded focus:outline-none w-1/2 mr-6 text-center border border-black border-solid\">\n                          Cancel\n                        </Dialog.Close>\n                        <div className=\"py-2 rounded w-1/2 text-center bg-blue-400 text-white cursor-pointer\">\n                          Apply\n                        </div>\n                      </div>\n                    </Dialog.Content>\n                  </Dialog.Root>\n                </div>\n                <div>\n                  <div className=\"grid grid-cols-3x gap-2 p-4 bg-gray-300\">\n                    <div className=\"w-32\">DATES</div>\n                    <div>AVAILABILITY</div>\n                  </div>\n                  <div className=\"grid grid-cols-3x gap-2 px-4\">\n                    {currentSchedule &&\n                      currentSchedule.rules\n                        .filter((rule: any) => rule.type === 'date')\n                        .map(({date, intervals}: any) => {\n                          return (\n                            <Fragment key={date}>\n                              <div className=\"w-32\">{date}</div>\n                              <div className=\"flex flex-col\">\n                                {intervals.map(\n                                  ({from, to}: any, index: number) => (\n                                    <div key={index} className=\"flex-1\">\n                                      {from} - {to}\n                                    </div>\n                                  )\n                                )}\n                              </div>\n                              <div className=\"px-1\">\n                                <i className=\"far fa-trash-alt text-light hover:text-black cursor-pointer\" />\n                              </div>\n                            </Fragment>\n                          );\n                        })}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/Editor.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/BufferSelector.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/DurationSelector.tsx",["715","716","717","718"],"import React, {useContext, useState} from 'react';\nimport DotCheckStateless from './CircleCheckboxStateless';\nimport Select from 'react-select';\nimport {EditingContext} from '../../hooks/EditingContext';\n\nconst keys = [15, 30, 45, 60];\n\nconst customKey = 'custom';\n\nexport default function DurationSelector() {\n  const {\n    value,\n    setPeriodType,\n    setMaxBookingTime,\n    setStartEndDate,\n    setDuration,\n  } = useContext(EditingContext);\n  const {duration} = value;\n\n  const [durationValue, setDurationValue] = useState(duration);\n  const [custom, setCustom] = useState(\n    keys.findIndex((k) => k === durationValue) < 0\n  );\n\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n      <div className=\"text-lg font-bold\">Duration</div>\n      <div className=\"row-span-2 text-gray-500\">\n        Define how long your event will be. It can be as long as 12 hours.\n      </div>\n      <div>\n        <div className=\"text-sm font-bold\">Choose a duration</div>\n        <div className=\"pt-2\">\n          <div className=\"flex flex-row flex-wrap\">\n            {keys.map((key) => {\n              return (\n                <div\n                  key={key}\n                  className=\"flex flex-row mr-3 cursor-pointer\"\n                  onClick={() => {\n                    setCustom(false);\n                    setDurationValue(key);\n                    setDuration(key);\n                  }}\n                >\n                  <div className=\"center-v mr-1\">\n                    <DotCheckStateless\n                      value={!custom && durationValue === key}\n                    />\n                  </div>\n                  <div>{key} min</div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"pt-2\">\n            <div className=\"text-sm font-bold\">\n              ... or choose a custom duration\n            </div>\n            <div className=\"flex flex-row pt-2\">\n              <div\n                className=\"flex flex-row mr-3 cursor-pointer\"\n                onClick={() => {\n                  setCustom(true);\n                }}\n              >\n                <div className=\"center-v mr-2\">\n                  <DotCheckStateless value={custom} />\n                </div>\n                <div className=\"center-v mr-2\">\n                  <input\n                    type=\"number\"\n                    className=\"border border-gray-400 cursor-text p-3  w-16 focus:outline-none focus:shadow-outline focus:border-blue-300\"\n                    defaultValue={custom ? durationValue : undefined}\n                    onChange={(e) => {\n                      console.log('on change', e.target.value);\n                      if (e.target.value) {\n                        setDurationValue(parseInt(e.target.value));\n                        setDuration(parseInt(e.target.value));\n                      } else {\n                        setDuration(null);\n                        setDurationValue(null);\n                      }\n                    }}\n                  />\n                </div>\n                <div className=\"center-v\">\n                  <div className=\"w-40 lg:w-48 cursor-pointer focus:outline-none focus:shadow-outline focus:border-blue-300\">\n                    <Select\n                      className=\"\"\n                      classNamePrefix=\"select\"\n                      components={{\n                        DropdownIndicator: () => {\n                          return null;\n                        },\n                        IndicatorSeparator: () => {\n                          return null;\n                        },\n                      }}\n                      defaultValue={{\n                        value: 'min',\n                        label: 'min',\n                        color: '#00B8D9',\n                      }}\n                      name=\"color\"\n                      options={[\n                        {value: 'min', label: 'min', color: '#00B8D9'},\n                        {value: 'hrs', label: 'hrs', color: '#00B8D9'},\n                      ]}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/hooks/EditingContext.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/data.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/DatePicker.tsx",["719"],"import React, {useEffect, useState} from 'react';\nimport 'react-dates/initialize';\nimport {DateRangePicker} from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport moment from 'moment';\n\nfunction DatePicker({setStartEndDate, defaultStartDate, defaultEndDate}: any) {\n  console.log('Date picker', defaultStartDate, defaultEndDate);\n\n  const [startDate, setStartDate] = useState(\n    defaultStartDate ? moment(defaultStartDate, 'YYYY-MM-DD') : null\n  );\n  const [endDate, setEndDate] = useState(\n    defaultEndDate ? moment(defaultEndDate, 'YYYY-MM-DD') : null\n  );\n  const [focusedInput, setFocusedInput] = useState<any>(null);\n  const handleDatesChange = ({startDate, endDate}: any) => {\n    console.log(startDate, endDate);\n    setStartDate(startDate);\n    setEndDate(endDate);\n\n    setStartEndDate(\n      startDate ? startDate.format('YYYY-MM-DD') : '',\n      endDate ? endDate.format('YYYY-MM-DD') : ''\n    );\n  };\n\n  return (\n    <DateRangePicker\n      startDate={startDate}\n      startDateId=\"tata-start-date\"\n      endDate={endDate}\n      endDateId=\"tata-end-date\"\n      onDatesChange={handleDatesChange}\n      focusedInput={focusedInput}\n      onFocusChange={(focusedInput) => setFocusedInput(focusedInput)}\n    />\n  );\n}\n\nexport default DatePicker;\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/CheckboxStateless.tsx",["720"],"import React, {useState} from 'react';\n\nexport default function CheckboxStateless({value}: any) {\n  return (\n    <>\n      {value ? (\n        <i className=\"fas fa-check-square text-blue-500\" />\n      ) : (\n        <i className=\"far fa-square\" />\n      )}\n    </>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/EditorCore.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/CircleCheckboxStateless.tsx",["721"],"import React, {useState} from 'react';\n\nexport default function DotCheckStateless({value}: any) {\n  return (\n    <>\n      {value ? (\n        <i className=\"fas fa-dot-circle text-blue-500\" />\n      ) : (\n        <i className=\"far fa-circle\" />\n      )}\n    </>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/BookCalendar.tsx",[],["722","723"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/Live.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/Book.tsx",["724","725","726"],"import React, {useEffect, useState} from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport BookProvider, {useBook} from './BookProvider';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport BookUserPage from './BookUserPage';\nimport BookTypePageWrapper from './BookTypePage';\nimport BookContactsPage from './BookContactsPage';\nimport BookInviteePage from './BookInviteePage';\n\nmoment.locale('zh-cn');\n\nconst Book = () => {\n  return (\n    <div className=\"w-screen h-screen bg-gray-100\">\n      <div\n        className=\"w-full flex flex-row justify-center\"\n        style={{\n          paddingTop: '66px',\n          paddingBottom: '30px',\n        }}\n      >\n        <div\n          className=\"bg-white border-primary border-2 border-solid rounded shadow\"\n          style={{\n            // width: '1024px',\n            minHeight: '700px',\n          }}\n        >\n          <Switch>\n            <Route exact path=\"/@:user\" component={BookUserPage} />\n            <Route exact path=\"/@:user/:type\" component={BookTypePageWrapper} />\n            <Route\n              exact\n              path=\"/@:user/:type/invitees/:invitee\"\n              component={BookInviteePage}\n            />\n            <Route\n              exact\n              path=\"/@:user/:type/:datetime\"\n              component={BookContactsPage}\n            />\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const BookWrapper = (props: any) => {\n  return (\n    <BookProvider>\n      <Book {...props} />\n    </BookProvider>\n  );\n};\n\nexport default BookWrapper;\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventsProvider.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/CreateEventTypeModal.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/NewEventType.tsx",["727","728","729","730","731","732","733","734","735"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/Header.tsx",[],["736","737"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/GeneralSectionExpand.tsx",["738","739","740","741","742","743","744","745"],"import React, {useState} from 'react';\nimport {useTransact} from '../../../store';\nimport CancelButton from '../CancelButton';\nimport SingleSelect from '../EventLocationSelect';\nimport Editor from '../../common/Editor';\nimport {\n  ITextFieldStyles,\n  Label,\n  MessageBar,\n  MessageBarType,\n  PrimaryButton,\n  TextField,\n} from '@fluentui/react';\n\nexport function GeneralSectionExpand({\n  eventType,\n  onClose,\n  onSave,\n  saveButtonLabel,\n}: any) {\n  const [eventTypeValue, setEventTypeValue] = useState(eventType);\n  const [changed, setChanged] = useState(false);\n\n  const markChanged = () => {\n    if (!changed) {\n      setChanged(true);\n    }\n  };\n\n  const save = (eventTypeValue: any) => {\n    if (changed) {\n      onSave(eventTypeValue);\n    }\n  };\n\n  return (\n    <div data-section=\"general\">\n      <div className={`mt-2`}>\n        {/*<div*/}\n        {/*  className={`flex flex-row justify-between ${*/}\n        {/*    changed ? '' : 'cursor-pointer'*/}\n        {/*  }`}*/}\n        {/*  onClick={(e) => {*/}\n        {/*    if (!changed) {*/}\n        {/*      onClose();*/}\n        {/*      e.stopPropagation();*/}\n        {/*    }*/}\n        {/*  }}*/}\n        {/*>*/}\n        {/*  <div className=\"flex flex-row p-2\">*/}\n        {/*    <div className=\"px-3\">*/}\n        {/*      <i className=\"fas fa-circle text-red-500\" />*/}\n        {/*    </div>*/}\n        {/*    <div>*/}\n        {/*      <div className=\"text-lg\">What event is this?</div>*/}\n        {/*      <div className=\"text-gray-700\">{eventTypeValue.name}</div>*/}\n        {/*    </div>*/}\n        {/*  </div>*/}\n        {/*  <div className=\"flex flex-row\">*/}\n        {/*    <div className=\"gentle-flex mr-2\">*/}\n        {/*      <CancelButton changed={changed} close={onClose} />*/}\n        {/*    </div>*/}\n        {/*    <div className=\"gentle-flex mx-2 \">*/}\n        {/*      <div*/}\n        {/*        className=\"cursor-pointer border-gray-500 hover:border-black border px-2 bg-blue-400 text-white\"*/}\n        {/*        onClick={(e) => {*/}\n        {/*          save(eventTypeValue);*/}\n        {/*          onClose();*/}\n        {/*          e.stopPropagation();*/}\n        {/*        }}*/}\n        {/*      >*/}\n        {/*        {saveButtonLabel}*/}\n        {/*      </div>*/}\n        {/*    </div>*/}\n        {/*  </div>*/}\n        {/*</div>*/}\n\n        <div className=\"border-t border-b border-gray-300\">\n          <div className=\"px-2 py-1 lg:py-8\">\n            <div className=\"flex flex-col\">\n              <div className=\"mb-4\">\n                {/*<Label className=\"label text-base\" required>*/}\n                {/*  名称*/}\n                {/*</Label>*/}\n                <div className=\"hover:outline  border-gray-400 cursor-text w-64\">\n                  <input\n                    type=\"text\"\n                    className=\"w-full h-full p-3 focus:outline-none focus:shadow-outline focus:border-blue-700\"\n                    value={eventTypeValue.name}\n                    onChange={(e) => {\n                      setEventTypeValue({\n                        ...eventTypeValue,\n                        name: e.target.value,\n                      });\n                      markChanged();\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className=\"mb-4 flex flex-row\">\n                <Label className=\"label text-base\">方式</Label>\n                <div className=\"w-full\">\n                  <SingleSelect\n                    defaultValue={eventTypeValue.location}\n                    onChange={(option: any) => {\n                      setEventTypeValue({\n                        ...eventTypeValue,\n                        location: option.value,\n                      });\n                      markChanged();\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className=\"mb-4 flex flex-row\">\n                <Label className=\"label text-base\">方式</Label>\n                <div className=\"w-full\">\n                  <SingleSelect\n                    defaultValue={eventTypeValue.location}\n                    onChange={(option: any) => {\n                      setEventTypeValue({\n                        ...eventTypeValue,\n                        location: option.value,\n                      });\n                      markChanged();\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className=\"mb-4\">\n                <Label className=\"label text-base\">描述/建议</Label>\n                <Editor\n                  defaultValue={eventTypeValue.description}\n                  onChange={(value: any) => {\n                    setEventTypeValue({\n                      ...eventTypeValue,\n                      description: value,\n                    });\n                    markChanged();\n                  }}\n                />\n              </div>\n\n              {/*<div className=\"mb-4\">*/}\n              {/*  <Label className=\"label text-base\" required>*/}\n              {/*    链接*/}\n              {/*  </Label>*/}\n              {/*  <div className=\"flex flex-row\">*/}\n              {/*    <div className=\"mr-3\">mytime.com/ycy/</div>*/}\n              {/*    <div className=\"border border-gray-400 cursor-text \">*/}\n              {/*      <input*/}\n              {/*        type=\"text\"*/}\n              {/*        className=\"w-full lg:w-48 p-1 lg:p-3 focus:outline-none focus:shadow-outline focus:border-blue-700\"*/}\n              {/*        value={eventTypeValue.url}*/}\n              {/*        onChange={(e) => {*/}\n              {/*          setEventTypeValue({*/}\n              {/*            ...eventTypeValue,*/}\n              {/*            url: e.target.value,*/}\n              {/*          });*/}\n              {/*          markChanged();*/}\n              {/*        }}*/}\n              {/*      />*/}\n              {/*    </div>*/}\n              {/*  </div>*/}\n              {/*</div>*/}\n\n              <div className=\"mb-4\">\n                <Label className=\"label text-base\">标签</Label>\n                <div className=\"flex flex-row\">\n                  {['red', 'green', 'blue'].map((color) => {\n                    return (\n                      <div\n                        className=\"mr-2 cursor-pointer\"\n                        key={color}\n                        onClick={() => {\n                          setEventTypeValue({\n                            ...eventTypeValue,\n                            color,\n                          });\n                          markChanged();\n                        }}\n                      >\n                        <i\n                          className={`fas ${\n                            color === eventTypeValue.color\n                              ? 'fa-check-circle'\n                              : 'fa-circle'\n                          }  fa-2x text-${color}-500`}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/*<div className=\"flex flex-row justify-end border-t border-gray-300 py-4\">*/}\n          {/*  <div className=\"gentle-flex mr-2\">*/}\n          {/*    <CancelButton changed={changed} close={onClose} />*/}\n          {/*  </div>*/}\n          {/*  <div className=\"gentle-flex mx-2 \">*/}\n          {/*    <div*/}\n          {/*      className=\"cursor-pointer border-gray-500 hover:border-black border px-2 bg-blue-400 text-white\"*/}\n          {/*      onClick={(e) => {*/}\n          {/*        save(eventTypeValue);*/}\n          {/*        onClose();*/}\n          {/*        e.stopPropagation();*/}\n          {/*      }}*/}\n          {/*    >*/}\n          {/*      {saveButtonLabel}*/}\n          {/*    </div>*/}\n          {/*  </div>*/}\n          {/*</div>*/}\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/GeneralSectionCollapsed.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/AvailabilitySectionExpand.tsx",["746","747","748","749","750","751"],"import React, {useEffect, useState} from 'react';\nimport {\n  PERIOD_TYPE_AVAILABLE_MOVING,\n  PERIOD_TYPE_FIXED,\n  PERIOD_TYPE_MOVING,\n  PERIOD_TYPE_UNLIMITED,\n  WEEKDAYS,\n} from '../../constants';\nimport {useQuery, useTransact} from '../../../store';\nimport _ from 'lodash';\nimport {EditingContext} from '../../../hooks/EditingContext';\nimport CancelButton from '../CancelButton';\nimport BookingRangeContainer from '../BookingRangeContainer';\nimport ScheduleContainer from '../ScheduleContainer';\nimport DurationSelector from '../../common/DurationSelector';\nimport BufferSelector from '../../common/BufferSelector';\nimport {useEvents} from '../../EventsProvider';\n\nfunction DurationContainer() {\n  return (\n    <div className=\"pt32 pb56 border-b border-gray-400\">\n      <DurationSelector />\n    </div>\n  );\n}\n\nfunction BuffersContainer() {\n  return (\n    <div className=\"pt32 pb56\">\n      <BufferSelector />\n    </div>\n  );\n}\n\nfunction DateRangeDescription({periodType, maxBookingTime}: any) {\n  switch (periodType) {\n    case PERIOD_TYPE_MOVING:\n    case PERIOD_TYPE_AVAILABLE_MOVING:\n      if (maxBookingTime) {\n        return <span>{maxBookingTime / 60 / 24} rolling days</span>;\n      } else {\n        return <span></span>;\n      }\n    case PERIOD_TYPE_FIXED:\n    case PERIOD_TYPE_UNLIMITED:\n      return <span>in construction</span>;\n  }\n  return <span />;\n}\n\nexport default function AvailabilitySectionExpand({\n  user,\n  eventType,\n  onClose,\n  onSave,\n  saveButtonLabel,\n}: any) {\n  const transact = useTransact();\n  const [userInfo, setUserInfo] = useState(user);\n  const [eventTypeValue, setEventTypeValue] = useState(eventType);\n  const [changed, setChanged] = useState(false);\n  const [forceCancel, setForceCancel] = useState(false);\n\n  const {settings} = useEvents();\n  const {schedule_id, default_schedule_id} = settings;\n  console.log('sch', schedule_id, default_schedule_id);\n\n  const {schedules: sch2, schedulesById} = useEvents();\n  const schedules = sch2.map((id: string) => schedulesById[id]);\n  const [currentSchedule, setCurrentSchedule] = useState({\n    ...schedules[0],\n    rules: JSON.parse(schedules[0].rules),\n  });\n\n  const rules = currentSchedule\n    ? WEEKDAYS.map((day) => {\n        // @ts-ignore\n        const rule = currentSchedule.rules.find(\n          (rule: any) => rule.wday === day\n        );\n        if (rule) {\n          if (rule.available === undefined) {\n            return {...rule, available: true};\n          } else {\n            return rule;\n          }\n        }\n        return {\n          type: 'wday',\n          wday: day,\n          intervals: [],\n          available: false,\n        };\n      })\n    : [];\n\n  const save = (eventTypeValue: any) => {\n    if (changed) {\n      console.log('Save time', eventTypeValue);\n      onSave(eventTypeValue);\n      // const txs = [];\n      //\n      // const tx: any = {};\n      // Object.keys(eventTypeValue).forEach((key) => {\n      //   tx[`:eventType/${key}`] = eventTypeValue[key];\n      // });\n      // txs.push(tx);\n      //\n      // txs.push({\n      //   // @ts-ignore\n      //   ':schedule/uid': currentSchedule.id,\n      //   // @ts-ignore\n      //   ':schedule/rules': currentSchedule.rules,\n      // });\n      //\n      // transact(txs);\n    }\n  };\n\n  const setPeriodType = (type: string) => {\n    markChanged();\n    setEventTypeValue({\n      ...eventTypeValue,\n      period_type: type,\n    });\n  };\n  const setMaxBookingTime = (value: number) => {\n    markChanged();\n\n    setEventTypeValue({\n      ...eventTypeValue,\n      max_booking_time: value * 60 * 24,\n    });\n  };\n  const setStartEndDate = (start: string, end: string) => {\n    markChanged();\n\n    setEventTypeValue({\n      ...eventTypeValue,\n      start_date: start,\n      end_date: end,\n    });\n  };\n\n  const setDuration = (duration: number) => {\n    markChanged();\n    setEventTypeValue({\n      ...eventTypeValue,\n      duration,\n    });\n  };\n\n  const setActiveAvailabilityRule = () => {};\n  const setScheduleRuleEnabled = (\n    type: string,\n    date: string,\n    enabled: boolean\n  ) => {\n    const copy = _.cloneDeep(currentSchedule);\n    // @ts-ignore\n    const rule = copy.rules.find((rule: any) => rule.wday === date);\n    rule.available = enabled;\n\n    setCurrentSchedule(copy);\n    markChanged();\n  };\n\n  const setIntervalTime = (\n    date: string,\n    index: number,\n    type: string,\n    value: string\n  ) => {\n    console.log('set from', date, index, value, currentSchedule);\n    if (currentSchedule) {\n      const copy = _.cloneDeep(currentSchedule);\n      // @ts-ignore\n      const rule = copy.rules.find(\n        (rule: any) => rule.wday === date || rule.date === date\n      );\n      if (rule) {\n        if (rule.intervals) {\n          const interval = rule.intervals[index];\n          if (interval) {\n            interval[type] = value;\n            setCurrentSchedule(copy);\n            markChanged();\n            return;\n          }\n        }\n      }\n    }\n    console.log('Err set rule from ');\n  };\n\n  const setRuleFrom = (date: string, index: number, value: string) => {\n    setIntervalTime(date, index, 'from', value);\n  };\n\n  const setRuleTo = (date: string, index: number, value: string) => {\n    setIntervalTime(date, index, 'to', value);\n  };\n  const addInterval = (date: string) => {\n    if (currentSchedule) {\n      const copy = _.cloneDeep(currentSchedule);\n      // @ts-ignore\n      const rule = copy.rules.find(\n        (rule: any) => rule.wday === date || rule.date === date\n      );\n      console.log('add', rule);\n      if (rule) {\n        if (rule.intervals) {\n          rule.intervals.push({\n            from: '09:00',\n            to: '17:00',\n          });\n          rule.available = true;\n          setCurrentSchedule(copy);\n          markChanged();\n          return;\n        }\n      }\n    }\n  };\n\n  const removeInterval = (date: string, index: number) => {\n    if (currentSchedule) {\n      const copy = _.cloneDeep(currentSchedule);\n      // @ts-ignore\n      const rule = copy.rules.find(\n        (rule: any) => rule.wday === date || rule.date === date\n      );\n      if (rule) {\n        if (rule.intervals) {\n          rule.intervals.splice(index, 1);\n\n          if (rule.intervals.length === 0) {\n            rule.available = false;\n          }\n          setCurrentSchedule(copy);\n          markChanged();\n          return;\n        }\n      }\n    }\n  };\n  const duplicateRule = () => {};\n\n  const setBeforeBufferTime = (before_buffer_time: number) => {\n    markChanged();\n    setEventTypeValue({\n      ...eventTypeValue,\n      before_buffer_time,\n    });\n  };\n\n  const setAfterBufferTime = (after_buffer_time: number) => {\n    markChanged();\n    setEventTypeValue({\n      ...eventTypeValue,\n      after_buffer_time,\n    });\n  };\n\n  const markChanged = () => {\n    if (!changed) {\n      setChanged(true);\n    }\n  };\n\n  return (\n    <EditingContext.Provider\n      value={{\n        value: eventTypeValue,\n        activeAvailabilityRule: schedule_id,\n        setActiveAvailabilityRule,\n        ownAvailabilityRule: default_schedule_id,\n        currentSchedule,\n        rules,\n        setScheduleRuleEnabled,\n        setRuleFrom,\n        setRuleTo,\n        addInterval,\n        removeInterval,\n        setPeriodType,\n        setMaxBookingTime,\n        setStartEndDate,\n        setDuration,\n        setBeforeBufferTime,\n        setAfterBufferTime,\n        markChanged,\n      }}\n    >\n      <div\n        data-section=\"availability\"\n        className=\"mt-2 border-b lg:border  hover:border-blue-500 border-black lg:rounded\"\n      >\n        <div\n          className=\"flex flex-row justify-between cursor-pointer\"\n          onClick={(e) => {\n            if (!changed) {\n              onClose();\n              e.stopPropagation();\n            }\n          }}\n        >\n          <div className=\"flex flex-row p-2 \">\n            <div className=\"px-3\">\n              <i className=\"far fa-calendar-check\" />\n            </div>\n            <div>\n              <div className=\"text-lg\">When can people book this event?</div>\n              <div className=\"text-gray-700\">\n                {eventTypeValue.duration} min,{' '}\n                <DateRangeDescription\n                  periodType={eventTypeValue.period_type}\n                  maxBookingTime={eventTypeValue.max_booking_time}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row\">\n            <div className=\"gentle-flex mr-2\">\n              <CancelButton changed={changed} close={onClose} />\n            </div>\n            <div className=\"gentle-flex mx-2 \">\n              <div\n                className=\"cursor-pointer border-gray-500 hover:border-black border px-2 bg-blue-400 text-white\"\n                onClick={() => {\n                  console.log('Value', eventTypeValue, changed);\n                  save(eventTypeValue);\n                  onClose();\n                }}\n              >\n                {saveButtonLabel}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"border-t border-b border-gray-200\">\n          <div className=\"px-2 py-1 lg:px-10 lg:py-8\">\n            <div className=\"flex flex-col\">\n              <BookingRangeContainer />\n              <ScheduleContainer\n                user={userInfo}\n                setUser={setUserInfo}\n                eventTypeValue={eventTypeValue}\n                setEventTypeValue={setEventTypeValue}\n              />\n              <DurationContainer />\n              <BuffersContainer />\n            </div>\n          </div>\n          <div className=\"flex flex-row justify-end  border-t border-gray-400 py-4\">\n            <div className=\"gentle-flex mr-2\">\n              <CancelButton changed={changed} close={onClose} />\n            </div>\n            <div className=\"gentle-flex mx-2 \">\n              <div\n                className=\"cursor-pointer border-gray-500 hover:border-black border px-2 bg-blue-400 text-white\"\n                onClick={() => {\n                  save(eventTypeValue);\n                  onClose();\n                }}\n              >\n                {saveButtonLabel}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </EditingContext.Provider>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/AvailabilitySectionCollapsed.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/InviteeQuestionsSection.tsx",[],["752","753"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/NotifyPolicySection.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/NavSection.tsx",[],["754","755"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/ScheduledEvents.tsx",["756","757","758","759","760","761","762"],"import React, {useEffect, useState} from 'react';\nimport {Switch, Route, Link, useLocation, Redirect} from 'react-router-dom';\nimport {DefaultButton} from '@fluentui/react';\nimport {useEvents} from '../EventsProvider';\nimport {days} from '../book/data';\nimport dayjs from 'dayjs';\nimport moment from 'moment';\nimport {SearchBoxSmallExample} from '../EventTypes';\nvar weekOfYear = require('dayjs/plugin/weekOfYear');\ndayjs.extend(weekOfYear);\n\nfunction EventCard() {\n  const [hovered, setHovered] = useState(false);\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <div\n      className=\"border-primary border-solid border flex flex-row justify-between w-full h-24\"\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n    >\n      <div\n        className=\"my-2 p-4 flex flex-row justify-between\"\n        style={{width: 'calc(100% - 10px)'}}\n      >\n        <div className=\"w-1/2\">09:30 - 09:45</div>\n        <div className=\"w-1/2\">\n          <div>张三</div>\n          <div className=\"text-gray-500\">30 分钟约见</div>\n        </div>\n      </div>\n      <div className=\"h-full w-8\">\n        {hovered && (\n          <div className=\"cursor-pointer opacity-25 hover:opacity-100 h-full bg-red-300 gentle-flex\">\n            <i className=\"fas fa-expand-alt fa-sm\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction NextEventCard() {\n  const [hovered, setHovered] = useState(false);\n  return (\n    <div\n      className=\"border-red-300 border-solid border flex flex-row justify-between w-full h-24\"\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n    >\n      <div\n        className=\"my-2 p-4 flex flex-row justify-between\"\n        style={{width: 'calc(100% - 10px)'}}\n      >\n        <div className=\"w-1/2\">09:30 - 09:45</div>\n        <div className=\"w-1/2\">\n          <div>张三</div>\n          <div className=\"text-gray-500\">30 分钟约见</div>\n        </div>\n      </div>\n      <div className=\"h-full w-8\">\n        {hovered && (\n          <div className=\"cursor-pointer opacity-25 hover:opacity-100 h-full bg-red-300 gentle-flex\">\n            <i className=\"fas fa-expand-alt fa-sm\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction UpcomingScheduledEvents() {\n  return (\n    <div className=\"h-full grid grid-cols-4 gap-px bg-gray-100\">\n      <div className=\"h-full bg-white pt-10 px-3\" style={{}}>\n        <div className=\"flex flex-row justify-between\">\n          <div className=\"gentle-flex text-5xl font-medium\">今天</div>\n          <div className=\"gentle-flex text-base\">\n            {moment().format('dddd, M[月]DD[日] HH:mm ')}\n          </div>\n        </div>\n        <div className=\"flex flex-col  pt-5\">\n          <div className=\"pb-8\">\n            <div className=\"flex flex-row justify-between \">\n              <span />\n              <div className=\"mr-4 opacity-50\">3</div>\n            </div>\n            <NextEventCard />\n            <EventCard />\n            <EventCard />\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-white pt-5 px-3\" style={{}}>\n        <div className=\"\">\n          <div className=\"text-2xl pb-2 font-medium\">本周</div>\n          <div className=\"flex flex-row justify-between\">\n            <div className=\"text-base\">\n              {dayjs().format('M 月')} {dayjs().startOf('week').format('D')} -{' '}\n              {dayjs().endOf('week').format('D')} 日, 第 {moment().week()} / 52\n              周\n            </div>\n            <div className=\"flex flex-row\">\n              {['一', '二', '三', '四', '五', '六', '日'].map((d) => {\n                return (\n                  <div key={d} className=\"mr-2 opacity-75\">\n                    {d === '四' || d === '五' ? (\n                      <div className=\"cursor-pointer\">\n                        <span className=\"\">{d}</span>\n                        <div\n                          className=\"w-full gentle-flex rounded-full bg-red-400\"\n                          style={{height: '2px'}}\n                        />\n                      </div>\n                    ) : (\n                      <span className=\"opacity-50\">{d}</span>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n        <div className=\"flex flex-col pt-5\">\n          <div className=\"pb-8\">\n            <div className=\"flex flex-row justify-between\">\n              <div>星期四，1 月 14</div>\n              <div className=\"mr-4  opacity-50\">2</div>\n            </div>\n            <EventCard />\n            <EventCard />\n          </div>\n          <div className=\"pb-8\">\n            <div className=\"flex flex-row justify-between \">\n              <div>星期五，1 月 15</div>\n              <div className=\"mr-4 opacity-50\">1</div>\n            </div>\n            <EventCard />\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-white pt-5 p-3\" style={{}}>\n        <div>\n          <div className=\"text-2xl pb-2 font-medium\">1 月</div>\n          <div className=\"flex flex-row justify-between\">\n            <span />\n            <div className=\"opacity-75 cursor-pointer\">日期</div>\n          </div>\n        </div>\n        <div className=\"flex flex-col pt-5\">\n          <div className=\"pb-8\">\n            <div className=\"flex flex-row justify-between \">\n              <div>1 月 17，星期日</div>\n              <div className=\"mr-4 opacity-50\">2</div>\n            </div>\n            <EventCard />\n            <EventCard />\n          </div>\n          <div className=\"pb-8\">\n            <div className=\"flex flex-row justify-between \">\n              <div>1 月 18，星期五</div>\n              <div className=\"mr-4 opacity-50\">1</div>\n            </div>\n            <EventCard />\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-white pt-5 p-2\" style={{}}>\n        <div className=\"text-2xl pb-2 font-medium\">2021 年</div>\n        <div className=\"flex flex-col pt-5\">\n          <div className=\"my-2\">\n            <div>2 月</div>\n            <div>\n              <div>2 月 1，星期日</div>\n              <EventCard />\n              <EventCard />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function ScheduledEvents() {\n  const {pathname} = useLocation();\n  const {scheduledEvents, fetchScheduledEvents} = useEvents();\n\n  useEffect(() => {\n    fetchScheduledEvents().then((r) => {});\n  }, []);\n\n  return (\n    <div className=\"h-full w-full flex flex-col\">\n      <div className=\"Header\">\n        <div className=\"flex flex-row\">\n          {[\n            {url: '/events/upcoming', name: '待完成'},\n            {url: '/events/past', name: '已完成'},\n            {url: '/events/canceled', name: '已取消'},\n            {url: '/events/all', name: '全部'},\n          ].map(({url, name}) => {\n            return (\n              <div className=\"px-2 cursor-pointer\" key={url}>\n                {pathname === url ? (\n                  <div className=\"gentle-flex py-1 w-24\">\n                    <span>{name}</span>\n                  </div>\n                ) : (\n                  <Link to={url}>\n                    <span className=\"gentle-flex w-24 py-1 opacity-25 hover:opacity-100\">\n                      {name}\n                    </span>\n                  </Link>\n                )}\n              </div>\n            );\n          })}\n        </div>\n        <div className=\"flex flex-row\">\n          <div className=\"gentle-flex py-1 w-24 cursor-pointer\">Horizons</div>\n          <div className=\"gentle-flex py-1 w-24 opacity-25 hover:opacity-100 cursor-pointer\">\n            日历\n          </div>\n        </div>\n      </div>\n      <div className=\"h-full\">\n        <Switch>\n          <Route path=\"/events/upcoming\" component={UpcomingScheduledEvents} />\n          <Route path=\"/events/past\" component={() => <div>past</div>} />\n          <Route\n            path=\"/events/canceled\"\n            component={() => <div>canceled</div>}\n          />\n          <Route path=\"/events/all\" component={() => <div>all</div>} />\n          <Route path=\"/events\">\n            <Redirect to=\"/events/upcoming\" />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventTypes.tsx",["763","764","765","766","767","768","769","770","771","772","773","774"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventTypeCard.tsx",["775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797"],"import React, {useEffect} from 'react';\n\nimport {\n  Card,\n  ICardTokens,\n  ICardSectionStyles,\n  ICardSectionTokens,\n} from '@fluentui/react-cards';\nimport {\n  ActionButton,\n  FontWeights,\n  IButtonStyles,\n  Icon,\n  IIconStyles,\n  Image,\n  Persona,\n  Stack,\n  IStackTokens,\n  Text,\n  ITextStyles,\n  DefaultButton,\n} from '@fluentui/react';\nimport {useEvents} from './EventsProvider';\nimport {Link} from 'react-router-dom';\n\nexport default function EventTypeCard({eventTypeId}: any) {\n  const {eventTypesById} = useEvents();\n  const eventType = eventTypesById[eventTypeId];\n  const {id, name, description, duration, url, kind, enabled} = eventType;\n\n  const footerCardSectionTokens: ICardSectionTokens = {\n    padding: '12px 0px 0px',\n  };\n  return (\n    <div>\n      <Link to={`/links/${id}`}>\n        <div className=\"group cursor-pointer rounded-lg p-4 border border-gray-200 hover:bg-light-blue-500 hover:border-transparent hover:shadow-lg\">\n          <dl className=\"grid sm:block lg:grid xl:block grid-cols-2 grid-rows-2 items-center\">\n            <div className=\"pb-5\">\n              <dt className=\"sr-only\">Title</dt>\n              <dd className=\"leading-6 font-medium text-black group-hover:text-white\">\n                {eventType?.name}\n                {/*New Benefits Plan*/}\n              </dd>\n            </div>\n            {/*<div>*/}\n            {/*  <dt className=\"sr-only\">Category</dt>*/}\n            {/*  <dd className=\"text-sm font-medium group-hover:text-light-blue-200 sm:mb-4 lg:mb-0 xl:mb-4\">*/}\n            {/*    Human Resources*/}\n            {/*  </dd>*/}\n            {/*</div>*/}\n            <div className=\"col-start-2 row-start-1 row-end-3\">\n              <dt className=\"sr-only\">Users</dt>\n              <dd className=\"flex justify-end sm:justify-start lg:justify-end xl:justify-start -space-x-2\">\n                <img\n                  src=\"https://images.unsplash.com/photo-1517841905240-472988babdf9?auto=format&amp;fit=facearea&amp;facepad=2&amp;w=48&amp;h=48&amp;q=80\"\n                  alt=\"\"\n                  width=\"48\"\n                  height=\"48\"\n                  className=\"w-7 h-7 rounded-full bg-gray-100 border-2 border-white\"\n                  loading=\"lazy\"\n                />\n                <img\n                  src=\"https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?auto=format&amp;fit=facearea&amp;facepad=2&amp;w=48&amp;h=48&amp;q=80\"\n                  alt=\"\"\n                  width=\"48\"\n                  height=\"48\"\n                  className=\"w-7 h-7 rounded-full bg-gray-100 border-2 border-white\"\n                  loading=\"lazy\"\n                />\n                <img\n                  src=\"https://images.unsplash.com/photo-1500648767791-00dcc994a43e?auto=format&amp;fit=facearea&amp;facepad=2&amp;w=48&amp;h=48&amp;q=80\"\n                  alt=\"\"\n                  width=\"48\"\n                  height=\"48\"\n                  className=\"w-7 h-7 rounded-full bg-gray-100 border-2 border-white\"\n                  loading=\"lazy\"\n                />\n                <img\n                  src=\"https://images.unsplash.com/photo-1534528741775-53994a69daeb?auto=format&amp;fit=facearea&amp;facepad=2&amp;w=48&amp;h=48&amp;q=80\"\n                  alt=\"\"\n                  width=\"48\"\n                  height=\"48\"\n                  className=\"w-7 h-7 rounded-full bg-gray-100 border-2 border-white\"\n                  loading=\"lazy\"\n                />\n                <img\n                  src=\"https://images.unsplash.com/photo-1502685104226-ee32379fefbe?auto=format&amp;fit=facearea&amp;facepad=2&amp;w=48&amp;h=48&amp;q=80\"\n                  alt=\"\"\n                  width=\"48\"\n                  height=\"48\"\n                  className=\"w-7 h-7 rounded-full bg-gray-100 border-2 border-white\"\n                  loading=\"lazy\"\n                />\n              </dd>\n            </div>\n          </dl>\n          <div>...</div>\n        </div>\n      </Link>\n    </div>\n  );\n}\n",["798","799"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/BookProvider.tsx",["800","801","802","803"],"import React, {useContext, useEffect, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {\n  fetchUserProfileBySlug,\n  fetchSchedulingLinkByUrl as _fetchEventTypeByUrl,\n  fetchScheduleById,\n  createEvent as _createEvent,\n  fetchSchedulingLinksBrief,\n  fetchDatetimeSpotsByRange as fetchDatetimeSpotsByRange,\n} from '../../api';\nimport moment from 'moment';\nimport {days} from './data';\nimport dayjs from 'dayjs';\n\nexport const BookContext = React.createContext<{\n  selectedMonth: moment.Moment | null;\n  selectedDate: moment.Moment | null;\n  selectedTime: string | null;\n  updateSelectedMonth: (month: moment.Moment) => void;\n  updateSelectedDate: (date: moment.Moment) => void;\n  updateSelectedTime: (time: string) => void;\n\n  eventTypes: {[key: string]: any};\n  fetchEventTypes: (user: string) => Promise<any>;\n  fetchEventTypeByUrl: (user: string, url: string) => Promise<any>;\n\n  userProfileBySlug: {[key: string]: any};\n  fetchUserProfile: (slug: string) => Promise<any>;\n\n  schedules: {[key: string]: any};\n  fetchSchedule: (user: string, schedule_id: string) => Promise<any>;\n\n  datetimeSpotsByMonth: {[key: string]: any};\n  fetchDatetimeSpotsByMonth: (\n    event_type_id: string,\n    month: string\n  ) => Promise<any>;\n\n  createEvent: (event_type_id: string, start_time: string) => Promise<any>;\n}>({\n  selectedMonth: null,\n  selectedDate: null,\n  selectedTime: null,\n  updateSelectedMonth: (month: moment.Moment) => {},\n  updateSelectedDate: (date: moment.Moment) => {},\n  updateSelectedTime: (time: string) => {},\n\n  eventTypes: {},\n  fetchEventTypes: (user: string) => Promise.resolve([]),\n  fetchEventTypeByUrl: (user: string, url: string) => Promise.resolve({}),\n\n  userProfileBySlug: {},\n  fetchUserProfile: (slug: string) => Promise.resolve([]),\n\n  schedules: {},\n  fetchSchedule: (user: string, schedule_id: string) => Promise.resolve({}),\n\n  datetimeSpotsByMonth: {},\n  fetchDatetimeSpotsByMonth: (event_type_id: string, month: string) =>\n    Promise.resolve({}),\n\n  createEvent: (event_type_id: string, start_time: string) =>\n    Promise.resolve({}),\n});\n\nexport const useBook = () => useContext(BookContext);\n\ntype Props = React.PropsWithChildren<{}>;\n\nconst BookProvider = (props: Props) => {\n  const [selectedMonth, setSelectedMonth] = useState<moment.Moment | null>(\n    null\n  );\n  const [selectedDate, setSelectedDate] = useState<moment.Moment | null>(null);\n  const [selectedTime, setSelectedTime] = useState<string | null>(null);\n  const [datetimeSpotsByMonth, setDatetimeSpotsByMonth] = useState<any>({});\n\n  const updateSelectedMonth = (date: moment.Moment) => {\n    setSelectedMonth(date);\n  };\n\n  const updateSelectedDate = (date: moment.Moment) => {\n    setSelectedDate(date);\n  };\n\n  const updateSelectedTime = (time: string) => {\n    setSelectedTime(time);\n  };\n\n  const [eventTypes, setEventTypes] = useState<{\n    [key: string]: any;\n  }>({});\n\n  const [userProfileBySlug, setUserProfileBySlug] = useState<{\n    [key: string]: any;\n  }>({});\n\n  const [schedules, setSchedules] = useState<{\n    [key: string]: any;\n  }>({});\n\n  useEffect(() => {}, []);\n\n  const fetchUserProfile = (slug: string) => {\n    return fetchUserProfileBySlug(slug).then((r) => {\n      setUserProfileBySlug({\n        ...userProfileBySlug,\n        [slug]: r,\n      });\n      return r;\n    });\n  };\n\n  const fetchEventTypes = (user: string) => {\n    return fetchSchedulingLinksBrief(user).then((r) => {\n      return r;\n    });\n  };\n\n  const fetchEventTypeByUrl = (user: string, url: string) => {\n    return _fetchEventTypeByUrl(user, url).then((r) => {\n      setEventTypes({\n        ...eventTypes,\n        [user]: {\n          ...eventTypes[user],\n          [url]: r,\n        },\n      });\n      return r;\n    });\n  };\n\n  const fetchSchedule = (user: string, schedule_id: string) => {\n    return fetchScheduleById(user, schedule_id).then((r) => {\n      setSchedules({\n        ...schedules,\n        [schedule_id]: r,\n      });\n\n      return r;\n    });\n  };\n\n  const fetchDatetimeSpotsByMonth = (event_type_id: string, month: string) => {\n    const start = dayjs(month).startOf('month').format('YYYY-MM-DD');\n    const end = dayjs(month).endOf('month').format('YYYY-MM-DD');\n    return fetchDatetimeSpotsByRange(event_type_id, start, end).then((r) => {\n      setDatetimeSpotsByMonth({\n        ...datetimeSpotsByMonth,\n        [month]: r,\n      });\n      return r;\n    });\n  };\n\n  const createEvent = (event_type_id: string, start_time: string) => {\n    return _createEvent(event_type_id, start_time, '');\n  };\n\n  return (\n    <BookContext.Provider\n      value={{\n        selectedMonth,\n        selectedDate,\n        selectedTime,\n        updateSelectedMonth,\n        updateSelectedDate,\n        updateSelectedTime,\n\n        eventTypes,\n        fetchEventTypes,\n        fetchEventTypeByUrl,\n\n        userProfileBySlug,\n        fetchUserProfile,\n\n        schedules,\n        fetchSchedule,\n\n        datetimeSpotsByMonth,\n        fetchDatetimeSpotsByMonth,\n\n        createEvent,\n      }}\n    >\n      {props.children}\n    </BookContext.Provider>\n  );\n};\n\nexport default BookProvider;\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/TimeOption.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/BookTypePage.tsx",["804","805"],"import {Redirect, useHistory, useLocation, useParams} from 'react-router-dom';\nimport {useBook} from './BookProvider';\nimport React, {useEffect, useState} from 'react';\nimport moment from 'moment';\nimport dayjs from 'dayjs';\nimport {\n  PERIOD_TYPE_AVAILABLE_MOVING,\n  PERIOD_TYPE_FIXED,\n  PERIOD_TYPE_MOVING,\n  PERIOD_TYPE_UNLIMITED,\n} from '../constants';\nimport {\n  DayPickerSingleDateController,\n  isInclusivelyAfterDay,\n  isSameDay,\n} from 'react-dates';\nimport {colourOptions} from '../events/data';\nimport ReactList from 'react-list';\nimport TimeOption from './TimeOption';\nimport 'react-dates/lib/css/_datepicker.css';\nimport './day-picker.css';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst TimeOptionList = ({sliceOfTime}: any) => {\n  const {pathname} = useLocation();\n  const {selectedMonth, selectedDate, updateSelectedTime} = useBook();\n\n  const [checkedValue, setCheckedValue] = useState<string>('');\n  let history = useHistory();\n\n  const handleConfirm = () => {\n    updateSelectedTime(checkedValue);\n    history.push(\n      `${pathname}/${moment(\n        checkedValue\n      ).format()}?month=${selectedMonth?.format(\n        'YYYY-MM'\n      )}&date=${selectedDate?.format('YYYY-MM-DD')}`\n    );\n  };\n\n  return (\n    <ReactList\n      itemRenderer={(index: number, key: any) => {\n        return (\n          <div key={key}>\n            <TimeOption\n              value={sliceOfTime[index]}\n              checked={sliceOfTime[index] === checkedValue}\n              onCheck={setCheckedValue}\n              onConfirm={handleConfirm}\n            />\n          </div>\n        );\n      }}\n      length={sliceOfTime.length}\n      type=\"uniform\"\n    />\n  );\n};\n\nconst BookingInfo = ({profile, eventType}: any) => {\n  return (\n    <div\n      className=\"w-96 bg-white border-primary border-r border-solid\"\n      style={{\n        paddingTop: '25px',\n        paddingBottom: '25px',\n      }}\n    >\n      <div className=\"flex flex-col\">\n        <h4\n          className=\"\"\n          style={{\n            fontSize: '16px',\n            paddingLeft: '30px',\n            paddingRight: '10px',\n            color: 'rgba(77, 80, 85, 0.6)',\n            marginBottom: '0 0 3px',\n          }}\n        >\n          {profile?.full_name}\n        </h4>\n        <h1\n          className=\"font-bold\"\n          style={{\n            marginBottom: '24px',\n            fontSize: '28px',\n            lineHeight: '32px',\n            paddingLeft: '30px',\n            paddingRight: '10px',\n            color: '#4d5055',\n          }}\n        >\n          {eventType?.name}\n        </h1>\n        <div\n          style={{\n            fontSize: '16px',\n            lineHeight: '1.5',\n            paddingLeft: '30px',\n            paddingRight: '10px',\n            marginBottom: '20px',\n            color: '#4d5055',\n          }}\n        >\n          <i className=\"fas fa-clock mr-2 w-5 text-center\" />\n          {eventType?.duration} 分钟\n        </div>\n        <div\n          style={{\n            fontSize: '16px',\n            lineHeight: '1.5',\n            paddingLeft: '30px',\n            paddingRight: '10px',\n            marginBottom: '20px',\n            color: '#4d5055',\n          }}\n        >\n          <i className=\"fas fa-handshake mr-2 w-5 text-center\" />\n          {\n            colourOptions.find((opt) => opt.value === eventType?.location)\n              ?.label\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst BookTypePage = () => {\n  const {user, type} = useParams();\n  const query = useQuery();\n  const month = query.get('month');\n  const date = query.get('date');\n  const {pathname} = useLocation();\n  const history = useHistory();\n  const {\n    selectedMonth,\n    selectedDate,\n    updateSelectedMonth,\n    updateSelectedDate,\n\n    userProfileBySlug,\n    fetchUserProfile,\n    eventTypes,\n    fetchEventTypeByUrl,\n    fetchSchedule,\n    schedules,\n\n    datetimeSpotsByMonth,\n    fetchDatetimeSpotsByMonth,\n  } = useBook();\n\n  const [datetimeSpots, setDatetimeSpots] = useState<any>([]);\n\n  const profile = userProfileBySlug[user];\n  const eventType = eventTypes[user] && eventTypes[user][type];\n  const today = moment();\n  const schedule_id = eventType && eventType['schedule_id'];\n  const schedule = schedules && schedules[schedule_id];\n  const rules = schedule && JSON.parse(schedule.rules);\n\n  const sliceOfTime = datetimeSpots\n    ? datetimeSpots\n        .find((day: any) => day.date === selectedDate?.format('YYYY-MM-DD'))\n        ?.spots?.map((s: any) => s.start_time)\n    : [];\n\n  useEffect(() => {\n    fetchUserProfile(user);\n    fetchEventTypeByUrl(user, type).then((r) => {\n      if (r) {\n        fetchSchedule(user, r['schedule_id']).then((r) => {});\n      }\n    });\n\n    if (month) {\n      updateSelectedMonth(moment(month, 'YYYY-MM'));\n    }\n    if (date) {\n      updateSelectedDate(moment(date, 'YYYY-MM-DD'));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (eventType && selectedMonth) {\n      handleDatetimeSpotsFetch(eventType.id, selectedMonth);\n    }\n  }, [eventType, selectedMonth]);\n\n  useEffect(() => {\n    if (selectedMonth && datetimeSpotsByMonth) {\n      setDatetimeSpots(datetimeSpotsByMonth[selectedMonth.format('YYYY-MM')]);\n    }\n  }, [selectedMonth, datetimeSpotsByMonth]);\n\n  const isDayAvailable = (date: moment.Moment) => {\n    if (!eventType) {\n      return false;\n    }\n    const {max_booking_time} = eventType;\n    switch (eventType.period_type) {\n      case PERIOD_TYPE_MOVING:\n        const rule =\n          rules &&\n          rules.find(\n            (rule: any) =>\n              rule.wday ===\n              dayjs(date.toISOString()).format('dddd').toLowerCase()\n          );\n        return (\n          (isSameDay(date, today) || isInclusivelyAfterDay(date, today)) &&\n          rule &&\n          date.diff(today) < max_booking_time * 60000\n        );\n      case PERIOD_TYPE_AVAILABLE_MOVING:\n      case PERIOD_TYPE_FIXED:\n      case PERIOD_TYPE_UNLIMITED:\n    }\n    return false;\n  };\n\n  const isDayHighlighted = (date: moment.Moment) => {\n    return isDayAvailable(date);\n  };\n\n  const isOutsideRange = (date: moment.Moment) => {\n    return !isDayAvailable(date);\n  };\n\n  const handleDatetimeSpotsFetch = (\n    event_type_id: string,\n    month: moment.Moment\n  ) => {\n    return fetchDatetimeSpotsByMonth(event_type_id, month.format('YYYY-MM'));\n  };\n\n  const handleMonthNavigate = (newCurrentMonth: moment.Moment) => {\n    if (newCurrentMonth) {\n      updateSelectedMonth(newCurrentMonth);\n      history.push(\n        `${pathname}?month=${newCurrentMonth.format('YYYY-MM')}${\n          selectedDate ? `&date=${selectedDate.format('YYYY-MM-DD')}` : ''\n        }`\n      );\n    }\n  };\n\n  return (\n    <div className=\"h-full flex flex-row bg-gray-200\">\n      <BookingInfo profile={profile} eventType={eventType} />\n      <div className=\"bg-white\" style={{paddingTop: '28px'}}>\n        <div\n          className=\"text-20px\"\n          style={{\n            color: '#4d5055',\n            fontSize: '20px',\n            marginBottom: '20px',\n            textAlign: 'left',\n            paddingLeft: '32px',\n            paddingRight: '32px',\n          }}\n        >\n          选择日期和时间\n        </div>\n\n        <div className=\"flex flex-row justify-between bg-white\">\n          <div className=\"w-96\">\n            <DayPickerSingleDateController\n              date={selectedDate}\n              focused={true}\n              onFocusChange={(date) => {\n                console.log('onFocusChange', date);\n              }}\n              onPrevMonthClick={handleMonthNavigate}\n              onNextMonthClick={handleMonthNavigate}\n              onDateChange={(date) => {\n                if (date) {\n                  updateSelectedDate(date);\n                  history.push(\n                    `${pathname}?month=${(selectedMonth\n                      ? selectedMonth\n                      : date\n                    ).format('YYYY-MM')}&date=${date.format('YYYY-MM-DD')}`\n                  );\n                }\n              }}\n              initialVisibleMonth={() => {\n                return month ? moment(month, 'YYYY-MM') : moment();\n              }}\n              monthFormat=\"YYYY [年] M [月]\"\n              weekDayFormat=\"dd\"\n              isOutsideRange={isOutsideRange}\n              isDayBlocked={() => false}\n              isDayHighlighted={isDayHighlighted}\n              hideKeyboardShortcutsPanel\n            />\n          </div>\n          {selectedDate && (\n            <div className=\"w-64 flex flex-col h-full\">\n              <div\n                className=\"\"\n                style={{\n                  height: '38px',\n                  marginBottom: '10px',\n                  fontSize: '16px',\n                  lineHeight: '38px',\n                  color: '#4d5055',\n                }}\n              >\n                {selectedDate?.format('MMM D[日] dddd')}\n              </div>\n              <div\n                className=\"p-1 h-full\"\n                style={{overflow: 'scroll', height: '500px'}}\n              >\n                <TimeOptionList sliceOfTime={sliceOfTime ? sliceOfTime : []} />\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst BookTypePageWrapper = () => {\n  const query = useQuery();\n  const {pathname} = useLocation();\n  if (query.get('month')) {\n    return <BookTypePage />;\n  } else {\n    return <Redirect to={`${pathname}?month=${moment().format('YYYY-MM')}`} />;\n  }\n};\n\nexport default BookTypePageWrapper;\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/BookUserPage.tsx",["806"],"import React, {useEffect} from 'react';\nimport {Link, useParams} from 'react-router-dom';\nimport {useBook} from './BookProvider';\n\nconst BookUserPage = () => {\n  const {user} = useParams();\n  const {\n    userProfileBySlug,\n    fetchUserProfile,\n    eventTypes,\n    fetchEventTypes,\n  } = useBook();\n\n  useEffect(() => {\n    if (!eventTypes) {\n      fetchEventTypes(user).then((r) => {});\n    }\n    if (!userProfileBySlug[user]) {\n      fetchUserProfile(user).then((r) => {});\n    }\n  }, []);\n\n  return (\n    <div className=\"mx-auto p-8\">\n      <div className=\"h-56\">\n        <div className=\"h-24 gentle-flex text-xl font-normal opacity-75\">\n          {userProfileBySlug[user]?.full_name}\n        </div>\n        <div className=\"text-center\">\n          欢迎来到我的预约页面。\n          <br />\n          请按照指导添加预约时间到我的日历。\n        </div>\n      </div>\n      <div className=\"flex flex-row flex-wrap border-t-2 border-primary border-solid pt-5\">\n        {['15min', '30min', '45min', '50min'].map((type) => {\n          return (\n            <Link to={`/@${user}/${type}`}>\n              <div\n                key={type}\n                className=\"mt-2 ml-2 h-32 w-64 bg-gray-200 cursor-pointer gentle-flex hover:bg-gray-300 rounded\"\n              >\n                {type}\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default BookUserPage;\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/BookContactsPage.tsx",["807","808","809","810"],"import {useHistory, useLocation, useParams} from 'react-router-dom';\nimport {useBook} from './BookProvider';\nimport React, {useEffect, useState} from 'react';\nimport moment from 'moment';\nimport {colourOptions} from '../events/data';\nimport {\n  ITextFieldStyles,\n  Label,\n  PrimaryButton,\n  TextField,\n} from '@fluentui/react';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst QuestionForm = ({eventType}: any) => {\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState<boolean | null>(null);\n\n  const history = useHistory();\n\n  const {createEvent, selectedDate, selectedTime} = useBook();\n\n  const handleChangeEmail = (e: any) => {\n    setEmail(e.target.value);\n    setError(null);\n    setLoading(null);\n  };\n\n  const handleChangeName = (e: any) => {\n    setName(e.target.value);\n    setError(null);\n    setLoading(null);\n  };\n\n  const textFieldStyles: Partial<ITextFieldStyles> = {\n    field: {height: 50, fontSize: '1rem', color: 'black', padding: '12px 16px'},\n    fieldGroup: {height: 52, border: '1px black solid'},\n    revealButton: {height: 50},\n  };\n\n  return (\n    <form\n      className=\"flex flex-col justify-between h-full\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        const res = `invitees/HAX776ZFSRHFOTIA`;\n        if (selectedTime) {\n          createEvent(eventType.id, selectedTime).then((r) => {\n            history.push(res);\n          });\n        } else {\n          console.log('Error time is null');\n        }\n      }}\n    >\n      <div className=\"flex flex-col\">\n        <div style={{paddingBottom: '24px'}}>\n          <Label required>姓名</Label>\n          <TextField\n            type=\"text\"\n            styles={textFieldStyles}\n            onChange={handleChangeName}\n            value={name}\n            id={'name'}\n          />\n        </div>\n        <div style={{paddingBottom: '24px'}}>\n          <Label required>Email</Label>\n          <TextField\n            type=\"email\"\n            styles={textFieldStyles}\n            onChange={handleChangeEmail}\n            value={email}\n            id={'email'}\n          />\n        </div>\n      </div>\n      <PrimaryButton className=\"submit-button\" text=\"提交\" type=\"submit\" />\n    </form>\n  );\n};\n\nconst BookContactsPage = () => {\n  const {user, type, datetime} = useParams();\n  const query = useQuery();\n  const month = query.get('month');\n  const date = query.get('date');\n\n  const {\n    selectedDate,\n    updateSelectedDate,\n    updateSelectedMonth,\n    selectedTime,\n    updateSelectedTime,\n\n    userProfileBySlug,\n    fetchUserProfile,\n    eventTypes,\n    fetchEventTypeByUrl,\n    fetchSchedule,\n  } = useBook();\n  const profile = userProfileBySlug[user];\n  const eventType = eventTypes[user] && eventTypes[user][type];\n\n  useEffect(() => {\n    fetchUserProfile(user).then((r) => {});\n    fetchEventTypeByUrl(user, type).then((r) => {\n      if (r) {\n        fetchSchedule(user, r['schedule_id']).then((r) => {});\n      }\n    });\n\n    if (month) {\n      updateSelectedMonth(moment(month, 'YYYY-MM'));\n    }\n    if (date) {\n      updateSelectedDate(moment(date, 'YYYY-MM-DD'));\n    }\n    if (datetime) {\n      updateSelectedMonth(moment(datetime, 'YYYY-MM'));\n      updateSelectedDate(moment(datetime, 'YYYY-MM-DD'));\n      updateSelectedTime(datetime);\n    }\n  }, []);\n\n  return (\n    <div className=\"h-full flex flex-row bg-gray-200\">\n      <div\n        className=\"w-96 bg-white border-primary border-r border-solid\"\n        style={{\n          paddingTop: '25px',\n          paddingBottom: '25px',\n        }}\n      >\n        <div className=\"flex flex-col\">\n          <h4\n            className=\"\"\n            style={{\n              fontSize: '16px',\n              paddingLeft: '30px',\n              paddingRight: '10px',\n              color: 'rgba(77, 80, 85, 0.6)',\n              marginBottom: '0 0 3px',\n            }}\n          >\n            {profile?.full_name}\n          </h4>\n          <h1\n            className=\"font-bold\"\n            style={{\n              marginBottom: '24px',\n              fontSize: '28px',\n              lineHeight: '32px',\n              paddingLeft: '30px',\n              paddingRight: '10px',\n              color: '#4d5055',\n            }}\n          >\n            {eventType?.name}\n          </h1>\n          <div\n            style={{\n              fontSize: '16px',\n              lineHeight: '1.5',\n              paddingLeft: '30px',\n              paddingRight: '10px',\n              marginBottom: '20px',\n              color: '#4d5055',\n            }}\n          >\n            <i className=\"fas fa-clock mr-2 w-5 text-center\" />\n            {eventType?.duration} 分钟\n          </div>\n          <div\n            style={{\n              fontSize: '16px',\n              lineHeight: '1.5',\n              paddingLeft: '30px',\n              paddingRight: '10px',\n              marginBottom: '20px',\n              color: '#4d5055',\n            }}\n          >\n            <i className=\"fas fa-handshake mr-2 w-5 text-center\" />\n            {\n              colourOptions.find((opt) => opt.value === eventType?.location)\n                ?.label\n            }\n          </div>\n\n          <div\n            style={{\n              fontSize: '16px',\n              lineHeight: '1.5',\n              paddingLeft: '30px',\n              paddingRight: '10px',\n              marginBottom: '20px',\n              color: '#4d5055',\n            }}\n          >\n            <i className=\"fas fa-calendar-day mr-2 w-5 text-center\" />\n            {moment(selectedTime).format('HH:mm')},{' '}\n            {selectedDate?.format('YYYY-MM-DD')}\n          </div>\n        </div>\n      </div>\n      <div className=\"bg-white h-full\" style={{paddingTop: '28px'}}>\n        <div\n          className=\"text-20px\"\n          style={{\n            color: '#4d5055',\n            fontSize: '20px',\n            marginBottom: '20px',\n            textAlign: 'left',\n            paddingLeft: '32px',\n            paddingRight: '32px',\n          }}\n        >\n          联系信息\n        </div>\n        <div\n          className=\"\"\n          style={{\n            width: '600px',\n            paddingLeft: '32px',\n            paddingRight: '32px',\n            height: 'calc(100% - 60px)',\n          }}\n        >\n          <QuestionForm eventType={eventType} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BookContactsPage;\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/BookInviteePage.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/data.tsx",[],["811","812"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/Calendar.tsx",["813"],"import React from 'react'\nimport * as CalendarCore from '@toast-ui/react-calendar';\nimport 'tui-calendar/dist/tui-calendar.css';\n\n\nfunction Calendar() {\n\n    return (\n    // @ts-ignore\n        <CalendarCore\n            height=\"500px\"\n        />\n    );\n}\n\nexport default Calendar\n",["814","815"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/SchedulingLink.tsx",["816","817","818","819","820","821"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/hooks/SchedulingLinkProvider.tsx",["822","823"],"import React, {useContext, useEffect, useState} from 'react';\nimport useSWR, {mutate} from 'swr';\nimport {useAppData} from './AppDataProvider';\nimport {useLink} from '../api-hooks';\nimport * as API from '../api';\nimport _ from 'lodash';\n\nexport const SchedulingLinkContext = React.createContext<{\n  slug: string;\n  name: string;\n  description: string;\n  durations: string[];\n  location: string;\n  availability: any;\n  availabilityPresets: string[];\n  availabilityPresetsIntervals: any[];\n  availabilityOverrides: any[];\n  fields: any[];\n  bufferBefore: number;\n  bufferAfter: number;\n  limitBookingTime: number;\n  emailReminders: any[];\n  organizer: any;\n\n  updateSlug: (value: string) => Promise<any>;\n  updateName: (value: string) => Promise<any>;\n  updateDescription: (value: string) => Promise<any>;\n  updateDurations: (value: number[]) => Promise<any>;\n  updateLocation: (value: string) => Promise<any>;\n  updateAvailability: (value: any) => Promise<any>;\n  updateAvailabilityPresets: (value: string[] | null) => Promise<any>;\n  updateAvailabilityOverrides: (value: any) => Promise<any>;\n\n  updateSchedulingLink: (value: any) => Promise<any>;\n}>({\n  slug: '',\n  name: '',\n  description: '',\n  durations: [''],\n  location: '',\n  availability: {},\n  availabilityPresets: [],\n  availabilityPresetsIntervals: [],\n  availabilityOverrides: [],\n  fields: [],\n  bufferBefore: 0,\n  bufferAfter: 0,\n  limitBookingTime: 0,\n  emailReminders: [],\n  organizer: {},\n\n  updateSlug: (value: string) => Promise.resolve({}),\n  updateName: (value: string) => Promise.resolve({}),\n  updateDescription: (value: string) => Promise.resolve({}),\n  updateDurations: (value: number[]) => Promise.resolve({}),\n  updateLocation: (value: string) => Promise.resolve({}),\n  updateAvailability: (value: any) => Promise.resolve({}),\n  updateAvailabilityPresets: (value: string[] | null) => Promise.resolve({}),\n  updateAvailabilityOverrides: (value: any) => Promise.resolve({}),\n\n  updateSchedulingLink: (value: any) => Promise.resolve({}),\n});\n\nexport const useSchedulingLink = () => useContext(SchedulingLinkContext);\n\ntype Props = React.PropsWithChildren<{\n  linkId: string;\n}>;\n\nconst SchedulingLinkProvider = (props: Props) => {\n  const {data: link, isLoading, isError} = useLink(props.linkId);\n  const {settings, getAvailabilityPresetsById} = useAppData();\n  const [presetsIntervals, setPresetsIntervals] = useState<any[]>([]);\n\n  useEffect(() => {\n    if (link && link.organizer && link.organizer.availability) {\n      setPresetsIntervals(\n        getAvailabilityPresetsById(link.organizer.availability.presets)\n      );\n    }\n  }, [settings, link]);\n\n  const [overrides, setOverrides] = useState<any[]>([\n    {\n      startAt: '2021-01-19T02:00:00Z',\n      endAt: '2021-01-19T07:00:00Z',\n      type: 'block',\n    },\n    {\n      startAt: '2021-01-18T02:00:00Z',\n      endAt: '2021-01-18T08:00:00Z',\n      type: 'block',\n    },\n    {\n      startAt: '2021-01-23T02:00:00Z',\n      endAt: '2021-01-23T08:00:00Z',\n      type: 'allow',\n    },\n  ]);\n\n  if (isLoading) return <div>Loading</div>;\n  if (isError) return <div>Error</div>;\n\n  const _update = (newValue: any) => {\n    return mutate(\n      `/api/scheduling_links/${props.linkId}`,\n      {data: {...link, ...newValue}},\n      false\n    );\n  };\n\n  const _revalidate = () => {\n    mutate(`/api/scheduling_links/${props.linkId}`);\n    mutate('/api/scheduling_links/');\n  };\n\n  const updateSlug = async (value: string) => {\n    _update({slug: value});\n    await API.updateSchedulingLink(link.id, {slug: value});\n    _revalidate();\n    return Promise.resolve();\n  };\n\n  const updateName = async (value: string) => {\n    _update({name: value});\n    await API.updateSchedulingLink(link.id, {name: value});\n    _revalidate();\n    return Promise.resolve();\n  };\n\n  const updateDescription = async (value: string) => {\n    _update({description: value});\n    await API.updateSchedulingLink(link.id, {description: value});\n    _revalidate();\n    return Promise.resolve();\n  };\n\n  const updateDurations = async (value: number[]) => {\n    _update({durations: value});\n    await API.updateSchedulingLink(link.id, {durations: value});\n    _revalidate();\n    return Promise.resolve();\n  };\n\n  const updateLocation = async (value: string) => {\n    _update({location: value});\n    await API.updateSchedulingLink(link.id, {location: value});\n    _revalidate();\n    return Promise.resolve();\n  };\n\n  const updateAvailability = (value: any) => {\n    _update({description: value});\n    // await API.updateSchedulingLinkDescription\n    _revalidate();\n    return Promise.resolve();\n  };\n\n  const updateAvailabilityPresets = async (value: string[] | null) => {\n    if (link.organizer) {\n      const clone = _.cloneDeep(link.organizer);\n      return updateSchedulingLink({\n        organizer: {\n          ...clone,\n          availability: {\n            ...clone.availability,\n            presets: value,\n          },\n        },\n      });\n    } else {\n      return updateSchedulingLink({\n        organizer: {\n          availability: {\n            presets: value,\n          },\n        },\n      });\n    }\n  };\n\n  const updateAvailabilityOverrides = (value: any) => {\n    setOverrides(value);\n    return Promise.resolve();\n  };\n\n  const updateSchedulingLink = async (updates: any) => {\n    _update(updates);\n    await API.updateSchedulingLink(link.id, updates);\n    _revalidate();\n    return Promise.resolve();\n  };\n\n  return (\n    <SchedulingLinkContext.Provider\n      value={{\n        slug: link.slug,\n        name: link.name,\n        description: link.description,\n        durations: link.durations,\n        location: link.location,\n        availability: link.organizer?.availability,\n        availabilityPresets: link.organizer?.availability?.presets,\n        availabilityPresetsIntervals: presetsIntervals,\n        availabilityOverrides: overrides,\n        fields: link.fields,\n        bufferBefore: link.before_buffer_time,\n        bufferAfter: link.after_buffer_time,\n        limitBookingTime: link.max_booking_time,\n        emailReminders: link.email_reminders,\n        organizer: {\n          id: '',\n          avatarUrl:\n            'https://secure.gravatar.com/avatar/fcb9bbfe7fa822090dce8a194ed9730d?s=256&d=404',\n          displayName: 'Yuanyuan Zhang',\n          availability: {\n            mode: 'ranked',\n            overrides: [],\n            presets: ['1ac33b81-c2cc-43be-90e5-2cd25685bfd8'],\n            recurringIntervals: [],\n          },\n        },\n\n        updateSlug,\n        updateName,\n        updateDescription,\n        updateDurations,\n        updateLocation,\n        updateAvailability,\n        updateAvailabilityPresets,\n        updateAvailabilityOverrides,\n\n        updateSchedulingLink,\n      }}\n    >\n      {props.children}\n    </SchedulingLinkContext.Provider>\n  );\n};\n\nexport default SchedulingLinkProvider;\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/hooks/utils.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/WithTip.tsx",[],["824","825"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/Calendar.tsx",["826","827","828","829","830","831"],"import React, {useState} from 'react';\nimport FullCalendar, {\n  DateSelectArg,\n  DayHeaderContentArg,\n  EventApi,\n  EventClickArg,\n  EventContentArg,\n} from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport dayjs, {Dayjs} from 'dayjs';\nimport {\n  complementIntervals,\n  createEventId,\n  eliminateIntervals,\n  INITIAL_EVENTS,\n} from './event-utils';\nimport _ from 'lodash';\nimport zhLocale from '@fullcalendar/core/locales/zh-cn';\nimport {useSchedulingLink} from '../hooks/SchedulingLinkProvider';\nimport {dayConvertToEn} from '../utils';\nimport {EventInput} from '@fullcalendar/common';\n\nrequire('dayjs/locale/zh-cn');\nvar isToday = require('dayjs/plugin/isToday');\n\ndayjs.extend(isToday);\ndayjs.locale('zh-cn');\n\ninterface CalendarProps {\n  start: string;\n  end: string;\n  availabilityPresetsIntervals: any[];\n  availabilityOverrides: any[];\n  updateAvailabilityOverrides: (value: any) => any;\n}\n\ninterface CalendarAvailabilityControlProps {\n  handleSelectAllow: () => void;\n  handleSelectBlock: () => void;\n}\nfunction CalendarAvailabilityControl(props: CalendarAvailabilityControlProps) {\n  const {handleSelectAllow, handleSelectBlock} = props;\n  return (\n    <div\n      className=\"relative pb-4 bottom-0 w-full flex justify-center\"\n      style={{top: '-120px'}}\n    >\n      <div className=\"relative transition-all transform rounded-lg shadow-floating bg-white z-10\">\n        <div className=\"flex p-1\">\n          <button\n            type=\"button\"\n            onClick={handleSelectAllow}\n            className=\"w-32 p-3 rounded-md flex flex-col items-center text-green-600 font-medium text-sm bg-white hover:bg-gray-100 active:bg-gray-200 transition ease-in-out duration-150\"\n          >\n            <div className=\"-ml-px pb-1 flex items-center justify-center\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"20\"\n                height=\"20\"\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                stroke-width=\"2\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                className=\"feather feather-plus-square\"\n              >\n                <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                <line\n                  x1=\"12\"\n                  y1=\"8\"\n                  x2=\"12\"\n                  y2=\"16\"\n                  stroke=\"currentColor\"\n                ></line>\n                <line\n                  x1=\"8\"\n                  y1=\"12\"\n                  x2=\"16\"\n                  y2=\"12\"\n                  stroke=\"currentColor\"\n                ></line>\n              </svg>\n            </div>\n            <div>Allow</div>\n          </button>\n          <button\n            type=\"button\"\n            className=\"w-32 p-3 rounded-md flex flex-col items-center text-green-600 font-medium text-sm bg-white hover:bg-gray-100 active:bg-gray-200 transition ease-in-out duration-150\"\n          >\n            <div className=\"-ml-px pb-1 flex items-center justify-center\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"20\"\n                height=\"20\"\n                viewBox=\"0 0 24 24\"\n                fill=\"currentColor\"\n                stroke=\"currentColor\"\n                stroke-width=\"2\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                className=\"feather feather-plus-square\"\n              >\n                <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                <line x1=\"12\" y1=\"8\" x2=\"12\" y2=\"16\" stroke=\"#FFF\"></line>\n                <line x1=\"8\" y1=\"12\" x2=\"16\" y2=\"12\" stroke=\"#FFF\"></line>\n              </svg>\n            </div>\n            <div>Force Allow</div>\n          </button>\n          <button\n            type=\"button\"\n            onClick={handleSelectBlock}\n            className=\"w-32 p-3 rounded-md flex flex-col items-center text-red-600 font-medium text-sm bg-white hover:bg-gray-100 active:bg-gray-200 transition ease-in-out duration-150\"\n          >\n            <div className=\"-ml-px pb-1 flex items-center justify-center\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"20\"\n                height=\"20\"\n                viewBox=\"0 0 24 24\"\n                fill=\"currentColor\"\n                stroke=\"currentColor\"\n                stroke-width=\"2\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                className=\"feather feather-x-square\"\n              >\n                <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\" stroke=\"#FFF\"></line>\n                <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\" stroke=\"#FFF\"></line>\n              </svg>\n            </div>\n            <div>Block</div>\n          </button>\n        </div>\n        {/*  <button*/}\n        {/*    className=\"absolute flex items-center justify-center w-8 h-8 rounded-full shadow-floating bg-white hover:bg-gray-100 active:bg-gray-200 transition ease-in-out duration-150 border-2 border-white text-gray-500\"*/}\n        {/*    style={{right: '-12px; top: -12px'}}*/}\n        {/*  >*/}\n        {/*    <svg*/}\n        {/*      xmlns=\"http://www.w3.org/2000/svg\"*/}\n        {/*      width=\"16\"*/}\n        {/*      height=\"16\"*/}\n        {/*      viewBox=\"0 0 24 24\"*/}\n        {/*      fill=\"none\"*/}\n        {/*      stroke=\"currentColor\"*/}\n        {/*      stroke-width=\"2\"*/}\n        {/*      stroke-linecap=\"round\"*/}\n        {/*      stroke-linejoin=\"round\"*/}\n        {/*      className=\"feather feather-x\"*/}\n        {/*    >*/}\n        {/*      <line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line>*/}\n        {/*      <line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line>*/}\n        {/*    </svg>*/}\n        {/*  </button>*/}\n      </div>\n    </div>\n  );\n}\n\n/**\n * display events, presets & overrides\n *\n *\n * @param props\n * @constructor\n */\nfunction Calendar(props: CalendarProps) {\n  // read availability from scheduling link\n  // presets, id => value\n  const {\n    availabilityPresetsIntervals,\n    availabilityOverrides,\n    updateAvailabilityOverrides,\n  } = props;\n\n  const [selectInfo, setSelectInfo] = useState<DateSelectArg | null>(null);\n\n  const handleWeekendsToggle = () => {\n    // this.setState({\n    //   weekendsVisible: !weekendsVisible\n    // })\n  };\n\n  const handleSelectAllow = () => {\n    if (selectInfo) {\n      console.log('handleAllowSelect', selectInfo);\n      const copy = _.cloneDeep(availabilityOverrides);\n      copy.push({\n        startAt: selectInfo.startStr,\n        endAt: selectInfo.endStr,\n        type: 'allow',\n      });\n      updateAvailabilityOverrides(copy);\n    }\n  };\n\n  const handleSelectBlock = () => {\n    if (selectInfo) {\n      console.log('handleSelectBlock', selectInfo);\n      const copy = _.cloneDeep(availabilityOverrides);\n      copy.push({\n        startAt: selectInfo.startStr,\n        endAt: selectInfo.endStr,\n        type: 'block',\n      });\n      updateAvailabilityOverrides(copy);\n    }\n  };\n\n  const handleDateSelect = (selectInfo: DateSelectArg) => {\n    // let title = prompt('Please enter a new title for your event')\n    let title = 'new event';\n    let calendarApi = selectInfo.view.calendar;\n\n    // calendarApi.unselect() // clear date selection\n\n    console.log('select', selectInfo);\n\n    setSelectInfo(selectInfo);\n\n    // console.log('select', selectInfo.endStr, dayjs(selectInfo.end).subtract(15, 'minutes').toISOString())\n\n    // if (title) {\n    //   calendarApi.addEvent({\n    //     id: createEventId(),\n    //     title,\n    //     start: selectInfo.startStr,\n    //     end: selectInfo.endStr,\n    //     // end: dayjs(selectInfo.end).subtract(15, 'minutes').toISOString(),\n    //     allDay: selectInfo.allDay\n    //   })\n    // }\n  };\n\n  const handleEventClick = (clickInfo: EventClickArg) => {\n    // if (confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n    //     clickInfo.event.remove()\n    // }\n  };\n\n  const handleEvents = (events: EventApi[]) => {\n    // this.setState({\n    //   currentEvents: events\n    // })\n  };\n\n  const renderDayHeaderContent = (props: DayHeaderContentArg) => {\n    const date = dayjs(props.date);\n    return (\n      <div>\n        {\n          // @ts-ignore\n          date.isToday() ? (\n            <>\n              <div className=\"text-xs font-medium text-gray-600\">\n                {date.format('ddd')}\n              </div>\n              <div className=\"mb-2 flex justify-center\">\n                <div className=\"flex items-center justify-center w-10 h-10 rounded-full text-2xl bg-blue-500 text-white font-bold\">\n                  {date.format('D')}\n                </div>\n              </div>\n            </>\n          ) : (\n            <>\n              <div className=\"text-xs font-medium text-gray-600\">\n                {date.format('ddd')}\n              </div>\n              <div className=\"mb-2 flex justify-center\">\n                <div className=\"flex items-center justify-center w-10 h-10 rounded-full text-2xl text-gray-700 font-medium\">\n                  {date.format('D')}\n                </div>\n              </div>\n            </>\n          )\n        }\n      </div>\n    );\n  };\n\n  /**\n   * availabilityOverrides\n   * availabilityPresetsIntervals\n   */\n  const getBackgroundEvents = (\n    arg: {\n      start: Date;\n      end: Date;\n      startStr: string;\n      endStr: string;\n      timeZone: string;\n    },\n    successCallback: (events: EventInput[]) => void,\n    failureCallback: (error: any) => any\n  ) => {\n    const startDate = dayjs(arg.start);\n    const endDate = dayjs(arg.end);\n\n    const allowOverrides = availabilityOverrides.filter(\n      (e: any) => e.type === 'allow'\n    );\n    const blockOverrides = availabilityOverrides.filter(\n      (e: any) => e.type === 'block'\n    );\n\n    const intervals: Dayjs[][] = [];\n    let date = startDate.clone();\n    while (!date.isSame(endDate)) {\n      const day = dayConvertToEn(date.format('dd').toLowerCase());\n      availabilityPresetsIntervals.forEach((settings) => {\n        if (settings.byday.findIndex((d: string) => d === day) > -1) {\n          let startTime = date.add(settings.startTime, 'minute');\n          let endTime = date.add(settings.endTime, 'minute');\n          intervals.push([startTime, endTime]);\n        }\n      });\n      date = date.add(1, 'day');\n    }\n\n    // overrides intervals\n    // push allow overrides\n    allowOverrides.forEach((override) => {\n      intervals.push([dayjs(override.startAt), dayjs(override.endAt)]);\n    });\n    const sortedIntervals = _.sortBy(intervals, (e) => e[0].valueOf());\n    const eliminatedIntervals = eliminateIntervals(sortedIntervals);\n\n    const complementedIntervals = complementIntervals(\n      startDate,\n      endDate,\n      eliminatedIntervals\n    );\n    // push block overrides\n    blockOverrides.forEach((override) => {\n      complementedIntervals.push([\n        dayjs(override.startAt),\n        dayjs(override.endAt),\n      ]);\n    });\n    complementedIntervals.push([startDate, dayjs()]);\n    const sortedIntervals2 = _.sortBy(complementedIntervals, (e) =>\n      e[0].valueOf()\n    );\n    const eliminatedIntervals2 = eliminateIntervals(sortedIntervals2);\n\n    successCallback(\n      eliminatedIntervals2.map((interval) => {\n        return {\n          id: createEventId(),\n          start: interval[0].toISOString(),\n          end: interval[1].toISOString(),\n          className: 'sc-unavailable',\n          display: 'background',\n        };\n      })\n    );\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"\">\n        <FullCalendar\n          height=\"1200px\"\n          contentHeight=\"900px\"\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n          headerToolbar={{\n            left: 'title',\n            // center: '',\n            right: 'today prev,next',\n          }}\n          weekNumberCalculation=\"ISO\"\n          initialView=\"timeGridWeek\"\n          slotDuration=\"00:30:00\"\n          snapDuration=\"00:15:00\"\n          slotLabelInterval=\"01:00\"\n          slotMinTime=\"06:00:00\"\n          dayHeaderContent={renderDayHeaderContent}\n          editable={true}\n          selectable={true}\n          allDaySlot={false}\n          // dayMaxEvents={true}\n          weekends={true}\n          events={INITIAL_EVENTS} // alternatively, use the `events` setting to fetch from a feed\n          eventSources={[\n            {\n              events: getBackgroundEvents,\n              display: 'background',\n            },\n          ]}\n          select={handleDateSelect}\n          eventContent={renderEventContent} // custom render function\n          // eventClick={this.handleEventClick}\n          // eventsSet={this.handleEvents} // called after events are initialized/added/changed/removed\n          dateClick={function (info) {\n            // alert('clicked ' + info.dateStr);\n          }}\n          nowIndicator={true}\n          /* you can update a remote database when these fire:\n                    eventAdd={function(){}}\n                    eventChange={function(){}}\n                    eventRemove={function(){}}\n                    */\n          locale={zhLocale}\n        />\n      </div>\n\n      <CalendarAvailabilityControl\n        handleSelectAllow={handleSelectAllow}\n        handleSelectBlock={handleSelectBlock}\n      />\n    </div>\n  );\n}\n\nfunction renderEventContent(eventContent: EventContentArg) {\n  return (\n    <>\n      {/* <b>{eventContent.timeText}</b>\n      <i>{eventContent.event.title}</i> */}\n    </>\n  );\n}\n\nfunction CalendarWrapper() {\n  // read availability from scheduling link\n  // presets, id => value\n  const {\n    availabilityPresetsIntervals,\n    availabilityOverrides,\n    updateAvailabilityOverrides,\n  } = useSchedulingLink();\n  return (\n    <Calendar\n      start={''}\n      end={''}\n      availabilityOverrides={availabilityOverrides}\n      availabilityPresetsIntervals={availabilityPresetsIntervals}\n      updateAvailabilityOverrides={updateAvailabilityOverrides}\n    />\n  );\n}\n\nexport default CalendarWrapper;\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/event-utils.tsx",["832","833","834"],"import {EventInput} from '@fullcalendar/react';\nimport {Dayjs} from 'dayjs';\n\nlet eventGuid = 0;\nlet todayStr = new Date().toISOString().replace(/T.*$/, ''); // YYYY-MM-DD of today\n\nexport const INITIAL_EVENTS: EventInput[] = [\n  {\n    id: createEventId(),\n    start: '2021-01-22' + 'T12:00:00',\n    end: '2021-01-22' + 'T14:00:00',\n  },\n];\n\nexport function createEventId() {\n  return String(eventGuid++);\n}\n\nexport function complementIntervals(\n  start: Dayjs,\n  end: Dayjs,\n  intervals: Dayjs[][]\n) {\n  const res: Dayjs[][] = [];\n  if (intervals.length === 0) {\n    res.push([start, end]);\n    return res;\n  }\n\n  if (start.isBefore(intervals[0][0])) {\n    res.push([start, intervals[0][0]]);\n  }\n\n  for (let index = 0; index < intervals.length - 1; index++) {\n    res.push([intervals[index][1], intervals[index + 1][0]]);\n  }\n\n  if (end.isAfter(intervals[intervals.length - 1][1])) {\n    res.push([intervals[intervals.length - 1][1], end]);\n  }\n  return res;\n}\n\nfunction max(a: Dayjs, b: Dayjs) {\n  return a.isAfter(b) ? a : b;\n}\n\nexport function eliminateIntervals(intervals: Dayjs[][]) {\n  const res: Dayjs[][] = [];\n  if (intervals.length === 0) {\n    return res;\n  }\n  let currentStart = intervals[0][0];\n  let currentEnd = intervals[0][1];\n  for (let index = 1; index < intervals.length; index++) {\n    const element = intervals[index];\n    if (currentEnd.isAfter(element[0]) || currentEnd.isSame(element[0])) {\n      currentEnd = max(element[1], currentEnd);\n    } else {\n      res.push([currentStart, currentEnd]);\n      // next\n      currentStart = element[0];\n      currentEnd = element[1];\n    }\n    if (index === intervals.length - 1) {\n      res.push([currentStart, currentEnd]);\n    }\n  }\n  return res;\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/hooks/AppDataProvider.tsx",["835","836","837","838","839","840","841","842"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/api-hooks.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/SchedulingLinksBoard.tsx",["843","844","845","846","847"],"import React, {useEffect} from 'react';\nimport {\n  SearchBox,\n  ISearchBoxStyles,\n  DefaultButton,\n  PrimaryButton,\n} from '@fluentui/react';\nimport {useAppData} from '../hooks/AppDataProvider';\nimport EventTypeCard from './EventTypeCard';\nimport SchedulingLinkCard from './SchedulingLinkCard';\nimport {Link} from 'react-router-dom';\n\nconst searchBoxStyles: Partial<ISearchBoxStyles> = {\n  root: {width: 200, border: '0'},\n};\n\nexport const SearchBoxSmallExample = () => (\n  <SearchBox\n    styles={searchBoxStyles}\n    placeholder=\"Search\"\n    onEscape={(ev) => {\n      console.log('Custom onEscape Called');\n    }}\n    onClear={(ev) => {\n      console.log('Custom onClear Called');\n    }}\n    onChange={(_, newValue) =>\n      console.log('SearchBox onChange fired: ' + newValue)\n    }\n    onSearch={(newValue) =>\n      console.log('SearchBox onSearch fired: ' + newValue)\n    }\n  />\n);\n\nexport function SchedulingLinksBoard() {\n  const {schedulingLinks, createSchedulingLinkAndRedirect} = useAppData();\n\n  console.log('Scheduling link board', schedulingLinks);\n\n  return (\n    <div className=\"w-full flex flex-col\">\n      <div className=\"Header\">\n        <div className=\"flex flex-row justify-between w-full\">\n          <div>预约链接</div>\n          <button\n            className=\"cursor-pointer hover:bg-light-blue-200 hover:text-light-blue-800 group flex items-center rounded-md bg-light-blue-100 text-light-blue-600 text-sm font-medium px-4 py-2\"\n            onClick={createSchedulingLinkAndRedirect}\n          >\n            <svg\n              className=\"group-hover:text-light-blue-600 text-light-blue-500 mr-2\"\n              width=\"12\"\n              height=\"20\"\n              fill=\"currentColor\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M6 5a1 1 0 011 1v3h3a1 1 0 110 2H7v3a1 1 0 11-2 0v-3H2a1 1 0 110-2h3V6a1 1 0 011-1z\"\n              />\n            </svg>\n            New\n          </button>\n        </div>\n        {/*<div className=\"flex flex-row mb-2\">*/}\n        {/*  <Link to=\"/links/add\" className=\"cursor-pointer mr-2 py-1 \">*/}\n        {/*    <DefaultButton text=\"Add Event Type\" />*/}\n        {/*  </Link>*/}\n        {/*  <div className=\"cursor-pointer mr-2 py-1 \">*/}\n        {/*    <DefaultButton text=\"Copy Link\" />*/}\n        {/*  </div>*/}\n        {/*  <div className=\"cursor-pointer  py-1 \">*/}\n        {/*    <DefaultButton text=\"Add to Website\" />*/}\n        {/*  </div>*/}\n        {/*</div>*/}\n        {/*<div className=\"gentle-flex mb-2\">*/}\n        {/*  <SearchBoxSmallExample />*/}\n        {/*</div>*/}\n      </div>\n      <div className=\"flex flex-row flex-wrap\">\n        {schedulingLinks &&\n          schedulingLinks.map((link: any) => {\n            return (\n              <div key={link.id} className=\"py-4 pl-4 mb-4 w-64 h-32\">\n                <SchedulingLinkCard schedulingLink={link} />\n              </div>\n            );\n          })}\n        <div className=\"py-4 pl-4 w-64 h-32\">\n          {/*<button className=\"w-full h-full hover:bg-light-blue-200 hover:text-light-blue-800 group flex items-center rounded-md bg-light-blue-100 text-light-blue-600 text-sm font-medium px-4 py-2\">*/}\n          {/*    <svg*/}\n          {/*        className=\"group-hover:text-light-blue-600 text-light-blue-500 mr-2\"*/}\n          {/*        width=\"12\"*/}\n          {/*        height=\"20\"*/}\n          {/*        fill=\"currentColor\"*/}\n          {/*    >*/}\n          {/*        <path*/}\n          {/*            fill-rule=\"evenodd\"*/}\n          {/*            clip-rule=\"evenodd\"*/}\n          {/*            d=\"M6 5a1 1 0 011 1v3h3a1 1 0 110 2H7v3a1 1 0 11-2 0v-3H2a1 1 0 110-2h3V6a1 1 0 011-1z\"*/}\n          {/*        />*/}\n          {/*    </svg>*/}\n          {/*    New*/}\n          {/*</button>*/}\n          <li className=\"hover:shadow-lg flex hover:bg-light-blue-200 hover:text-light-blue-800 rounded-lg w-full h-full text-light-blue-600\">\n            <div\n              onClick={createSchedulingLinkAndRedirect}\n              className=\"cursor-pointer hover:border-transparent hover:shadow-xs w-full flex items-center justify-center rounded-lg border-2 border-dashed border-gray-200 text-sm font-medium py-4\"\n            >\n              新建\n            </div>\n          </li>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/SchedulingLinkCard.tsx",["848","849","850","851","852"],"import React, {useEffect} from 'react';\n\nimport {\n  Card,\n  ICardTokens,\n  ICardSectionStyles,\n  ICardSectionTokens,\n} from '@fluentui/react-cards';\nimport {Link} from 'react-router-dom';\n\nexport default function SchedulingLinkCard(props: any) {\n  const {schedulingLink} = props;\n  const {id} = schedulingLink;\n\n  const footerCardSectionTokens: ICardSectionTokens = {\n    padding: '12px 0px 0px',\n  };\n  return (\n    <div>\n      <Link to={`/links/${id}`}>\n        <div className=\"h-32 group cursor-pointer rounded-lg p-4 border border-gray-200 hover:bg-light-blue-500 hover:border-transparent hover:shadow-lg\">\n          <dl className=\"grid sm:block lg:grid xl:block grid-cols-2 grid-rows-2 items-center\">\n            <div className=\"pb-5\">\n              <dt className=\"sr-only\">Title</dt>\n              <dd className=\"leading-6 font-medium text-black group-hover:text-white\">\n                {schedulingLink?.name}\n              </dd>\n            </div>\n            <div>{schedulingLink?.description}</div>\n          </dl>\n        </div>\n      </Link>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/SchedulingLinkNew.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/SchedulingLinkSettings.tsx",["853"],"import React from 'react';\nimport {Link, useParams} from 'react-router-dom';\nimport _ from 'lodash';\nimport {useSchedulingLink} from '../hooks/SchedulingLinkProvider';\nimport Select from 'react-select';\nimport {nanoid} from 'nanoid';\nimport {X} from '@geist-ui/react-icons';\nimport {Button, Input, Toggle} from '@geist-ui/react';\n\nfunction SettingSection(props: any) {\n  return (\n    <div className=\"border-primary border-b border-solid py-8\">\n      <div className=\"mx-auto w-128\">{props.children}</div>\n    </div>\n  );\n}\n\ninterface SectionTitleProps extends React.PropsWithChildren<any> {\n  title: string;\n}\n\nfunction SectionTitle(props: SectionTitleProps) {\n  return <div className=\"text-xl py-2\">{props.title}</div>;\n}\n\nfunction CalendarBindingSection() {\n  // const {calendars} = useAppData()\n  // const {calendar} = useSchedulingLink()\n\n  return (\n    <SettingSection>\n      <h2>日历</h2>\n      <div>新日程将同步到选择的日历</div>\n    </SettingSection>\n  );\n}\n\ninterface SchedulingLinkFieldConfiguration {\n  label: string;\n  required: boolean;\n  type: string;\n}\n\ninterface SchedulingLinkField extends SchedulingLinkFieldConfiguration {\n  id: string;\n}\n\nfunction FieldSection() {\n  const {fields, updateSchedulingLink} = useSchedulingLink();\n\n  const updateLabel = (id: string, value: string) => {\n    const clone: SchedulingLinkField[] = _.cloneDeep(fields);\n    const field = clone.find((field) => field.id === id);\n    if (field) {\n      field.label = value;\n      updateSchedulingLink({\n        fields: clone,\n      });\n    }\n  };\n\n  const updateRequired = (id: string, value: boolean) => {\n    const clone: SchedulingLinkField[] = _.cloneDeep(fields);\n    const field = clone.find((field) => field.id === id);\n    if (field) {\n      field.required = value;\n      updateSchedulingLink({\n        fields: clone,\n      });\n    }\n  };\n\n  const addField = () => {\n    const clone: SchedulingLinkField[] = _.cloneDeep(fields);\n    clone.push({\n      id: 'f' + String(_.random(100)),\n      label: 'new question',\n      required: false,\n      type: 'long_text',\n    });\n    updateSchedulingLink({\n      fields: clone,\n    });\n  };\n\n  const removeField = (id: string) => {\n    if (fields) {\n      updateSchedulingLink({\n        fields: fields.filter((field) => field.id !== id),\n      });\n    }\n  };\n\n  return (\n    <SettingSection>\n      <SectionTitle title={'问题'} />\n      <div className=\"flex flex-col\">\n        {fields ? (\n          fields.map((field) => {\n            return (\n              <div\n                key={field.id}\n                className=\"flex flex-row py-2 justify-between \"\n              >\n                <Input\n                  size=\"large\"\n                  // className=\"border-primary border-solid border-2 rounded\"\n                  initialValue={field.label}\n                  onChange={(e) => {\n                    updateLabel(field.id, e.target.value);\n                  }}\n                />\n                <div className=\"flex flex-row\">\n                  <div className=\"mx-1\">\n                    <Button\n                      size={'small'}\n                      auto\n                      onClick={() => {\n                        updateRequired(field.id, !field.required);\n                      }}\n                    >\n                      {field.required ? '必填' : '可选'}\n                    </Button>\n                  </div>\n                  <div className=\"mx-1\">\n                    <Button\n                      size={'small'}\n                      auto\n                      onClick={() => {\n                        removeField(field.id);\n                      }}\n                    >\n                      删除\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            );\n          })\n        ) : (\n          <div>template</div>\n        )}\n        <div className=\"w-24 pt-4\">\n          <Button onClick={addField} size={'small'}>\n            添加\n          </Button>\n        </div>\n      </div>\n    </SettingSection>\n  );\n}\n\nfunction BufferLimitSection() {\n  const {\n    bufferBefore,\n    bufferAfter,\n    limitBookingTime,\n    updateSchedulingLink,\n  } = useSchedulingLink();\n\n  const updateBufferBefore = (value: number) => {\n    updateSchedulingLink({\n      before_buffer_time: value,\n    });\n  };\n\n  const updateBufferAfter = (value: number) => {\n    updateSchedulingLink({\n      after_buffer_time: value,\n    });\n  };\n\n  const updateLimitBookingTime = (value: number) => {\n    updateSchedulingLink({\n      max_booking_time: value,\n    });\n  };\n\n  // const {bufferBefore, bufferAfter, updateBufferBefore, updateBufferAfter, limitBookingTime, updateLimitBookingTime, limitBookingFrequency, updateLimitBookingFrequency} = useSchedulingLink()\n\n  return (\n    <SettingSection>\n      <SectionTitle title={'缓冲时间及限制'} />\n      <div className=\"flex flex-row pt-4\">\n        <div className=\"flex flex-col\">\n          <label>约见前</label>\n          <div className=\"flex flex-row items-center mt-2 py-1 pr-2\">\n            <input\n              className=\"border-primary border-solid border-2 rounded px-2 mr-2 w-16 focus:outline-none\"\n              defaultValue={bufferBefore}\n              type=\"number\"\n              onChange={(e) => {\n                updateBufferBefore(parseInt(e.target.value));\n              }}\n            />\n            <span>分钟</span>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col ml-4\">\n          <label>约见后</label>\n          <div className=\"flex flex-row items-center mt-2 py-1 pr-2\">\n            <input\n              className=\"border-primary border-solid border-2 rounded px-2 mr-2 w-16 focus:outline-none\"\n              defaultValue={bufferAfter}\n              type=\"number\"\n              onChange={(e) => {\n                updateBufferAfter(parseInt(e.target.value));\n              }}\n            />\n            <span className=\"\">分钟</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex flex-row pt-6\">\n        <div className=\"gentle-flex mr-2\">\n          <Toggle initialChecked={true} onChange={() => {}} />\n        </div>\n        <label>限制多少天内可以预约</label>\n      </div>\n      <div className=\"flex flex-row pt-4\">\n        <input\n          className=\"border-primary border-solid border-2 rounded py-1 px-2 w-16 focus:outline-none\"\n          defaultValue={limitBookingTime / 24 / 60}\n          type=\"number\"\n          onChange={(e) => {\n            updateLimitBookingTime(parseInt(e.target.value) * 24 * 60);\n          }}\n        />\n        <span className=\"gentle-flex ml-2\">\n          <label>天</label>\n        </span>\n      </div>\n    </SettingSection>\n  );\n}\n\nconst ReminderSection = React.memo(() => {\n  const {emailReminders, updateSchedulingLink} = useSchedulingLink();\n\n  const updateEmailReminderQuantity = (id: string, value: number) => {\n    const clone = _.cloneDeep(emailReminders);\n    const reminder = clone.find((r) => r.id === id);\n    if (reminder) {\n      reminder.quantity = value;\n      updateSchedulingLink({\n        email_reminders: clone,\n      });\n    }\n  };\n\n  const updateEmailReminderUnit = (id: string, value: string) => {\n    const clone = _.cloneDeep(emailReminders);\n    const reminder = clone.find((r) => r.id === id);\n    if (reminder) {\n      reminder.units = value;\n      updateSchedulingLink({\n        email_reminders: clone,\n      });\n    }\n  };\n\n  const add = () => {\n    if (emailReminders) {\n      const clone = _.cloneDeep(emailReminders);\n      clone.push({\n        id: nanoid(),\n        quantity: 30,\n        units: 'min',\n      });\n      updateSchedulingLink({\n        email_reminders: clone,\n      });\n    }\n  };\n\n  const remove = (id: string) => {\n    if (emailReminders) {\n      updateSchedulingLink({\n        email_reminders: emailReminders.filter((r) => r.id !== id),\n      });\n    }\n  };\n\n  console.log('reminder', emailReminders);\n\n  return (\n    <SettingSection>\n      <SectionTitle title={'提醒'} />\n      <div>\n        {emailReminders &&\n          emailReminders.map(({quantity, units, id}) => {\n            return (\n              <div className=\"flex flex-row justify-between py-2\">\n                <div key={id} className=\"flex flex-row \">\n                  <input\n                    className=\"border-primary border-solid border-2 rounded py-1 px-2 w-16 focus:outline-none\"\n                    defaultValue={quantity}\n                    type=\"number\"\n                    onChange={(e) => {\n                      updateEmailReminderQuantity(id, parseInt(e.target.value));\n                    }}\n                  />\n\n                  <Select\n                    className=\"ml-2 w-32\"\n                    options={[\n                      {\n                        label: 'minutes',\n                        value: 'min',\n                      },\n                      {\n                        label: 'hours',\n                        value: 'hour',\n                      },\n                      {\n                        label: 'days',\n                        value: 'day',\n                      },\n                    ]}\n                    defaultValue={{\n                      label: 'minutes',\n                      value: 'min',\n                    }}\n                    components={{\n                      IndicatorSeparator: null,\n                    }}\n                    onChange={(option) => {\n                      if (option) {\n                        updateEmailReminderUnit(id, option.value);\n                      }\n                    }}\n                  />\n                </div>\n                <div className=\"gentle-flex\">\n                  <Button\n                    size={'small'}\n                    auto\n                    onClick={() => {\n                      remove(id);\n                    }}\n                  >\n                    删除\n                  </Button>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n      <div className=\"w-24 pt-4\">\n        <Button onClick={add} size={'small'}>\n          添加\n        </Button>\n      </div>\n    </SettingSection>\n  );\n});\n\nexport default function SchedulingLinkSettings() {\n  let {id} = useParams();\n  return (\n    <div className=\"border-primary border-l border-solid w-full h-full\">\n      <div className=\"Header\">\n        <Link\n          to={`/links/${id}`}\n          className=\"hover:bg-gray-100 focus:outline-none text-gray-600 hover:text-black gentle-flex w-10 h-10  rounded-full\"\n        >\n          <X />\n        </Link>\n      </div>\n\n      <div className=\"w-full flex flex-col\">\n        {/*<CalendarBindingSection />*/}\n        <FieldSection />\n        <BufferLimitSection />\n        <ReminderSection />\n      </div>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/AppSettings.tsx",["854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/Availability.tsx",["874","875","876","877","878","879","880"],"import React from 'react';\nimport {useParams, Link} from 'react-router-dom';\nimport {useAppData} from '../hooks/AppDataProvider';\nimport TextField from './common/TextField';\nimport {listOfTime24, listOfTime24Options} from './constants';\nimport Select from 'react-select';\nimport FullCalendar, {DayHeaderContentArg} from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport {\n  complementIntervals,\n  createEventId,\n  eliminateIntervals,\n  INITIAL_EVENTS,\n} from './event-utils';\nimport zhLocale from '@fullcalendar/core/locales/zh-cn';\nimport {Button, Checkbox, Input} from '@geist-ui/react';\nimport dayjs, {Dayjs} from 'dayjs';\nimport produce, {Draft} from 'immer';\n\nimport {dayConvertToEn, dayConvertToZh} from '../utils';\nimport _ from 'lodash';\nimport {nanoid} from 'nanoid';\nimport {X} from '@geist-ui/react-icons';\nimport {EventInput} from '@fullcalendar/common';\n\nconst sliceOfTime = listOfTime24.slice(0, 24 * 4);\nconst timeOptions = listOfTime24Options;\n\nfunction AvailabilityByDay({\n  rule,\n  updateDayCheck,\n  updateStartTime,\n  updateEndTime,\n}: any) {\n  const dayState = ['mo', 'tu', 'we', 'th', 'fr', 'sa', 'su'].map((d) => {\n    return {\n      day: d,\n      checked: rule.byday.findIndex((day: string) => day === d) > -1,\n    };\n  });\n\n  return (\n    <div className={'flex flex-col'}>\n      <div className=\"flex flex-row py-2 px-4 \">\n        {dayState.map((state) => {\n          return (\n            <div key={state.day} className=\"cursor-pointer pl-4\">\n              <label className=\"cursor-pointer inline-flex flex-col\">\n                <input\n                  type=\"checkbox\"\n                  defaultChecked={state.checked}\n                  onChange={(e) => {\n                    updateDayCheck(rule.id, state.day, e.target.checked);\n                  }}\n                />\n                {dayConvertToZh(state.day)}\n              </label>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"flex flex-row\">\n        <Select\n          className=\"w-28 mx-4\"\n          classNamePrefix=\"select\"\n          components={{\n            IndicatorSeparator: () => {\n              return null;\n            },\n          }}\n          name=\"color\"\n          defaultValue={timeOptions[(rule.startTime / 60) * 4]}\n          options={timeOptions}\n          onChange={(option) => {\n            if (option) {\n              updateStartTime(rule.id, option.value);\n            }\n          }}\n        />\n        <Select\n          className=\"w-28 mx-4\"\n          classNamePrefix=\"select\"\n          components={{\n            IndicatorSeparator: () => {\n              return null;\n            },\n          }}\n          name=\"color\"\n          defaultValue={timeOptions[(rule.endTime / 60) * 4]}\n          options={timeOptions}\n          onChange={(option) => {\n            if (option) {\n              updateEndTime(rule.id, option.value);\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport function Availability() {\n  const {id} = useParams();\n\n  const {availabilityPresets, updateAvailabilityPreset} = useAppData();\n  const preset = availabilityPresets\n    ? availabilityPresets.find((p) => p.id === id)\n    : null;\n\n  const renderDayHeaderContent = (props: DayHeaderContentArg) => {\n    const date = dayjs(props.date);\n    return (\n      <div>\n        <div className=\"text-xs font-medium text-gray-600\">\n          {date.format('ddd')}\n        </div>\n      </div>\n    );\n  };\n\n  const getBackgroundEvents = (\n    arg: {\n      start: Date;\n      end: Date;\n      startStr: string;\n      endStr: string;\n      timeZone: string;\n    },\n    successCallback: (events: EventInput[]) => void,\n    failureCallback: (error: any) => any\n  ) => {\n    const startDate = dayjs(arg.start);\n    const endDate = dayjs(arg.end);\n    const availabilityPresetsIntervals: any = preset ? preset.rules : [];\n\n    const availableIntervals: Dayjs[][] = [];\n    let date = startDate.clone();\n    while (!date.isSame(endDate)) {\n      const day = dayConvertToEn(date.format('dd').toLowerCase());\n      availabilityPresetsIntervals.forEach((settings: any) => {\n        if (settings.byday.findIndex((d: string) => d === day) > -1) {\n          let startTime = date.add(settings.startTime, 'minute');\n          let endTime = date.add(settings.endTime, 'minute');\n          availableIntervals.push([startTime, endTime]);\n        }\n      });\n      date = date.add(1, 'day');\n    }\n    const sortedIntervals = _.sortBy(availableIntervals, (e) => e[0].valueOf());\n    const eliminatedIntervals = eliminateIntervals(sortedIntervals);\n    const complementedIntervals = complementIntervals(\n      startDate,\n      endDate,\n      eliminatedIntervals\n    );\n\n    successCallback(\n      complementedIntervals.map((interval) => {\n        return {\n          id: createEventId(),\n          start: interval[0].toISOString(),\n          end: interval[1].toISOString(),\n          className: 'sc-unavailable',\n          display: 'background',\n        };\n      })\n    );\n  };\n\n  /** update functions\n   *  1. name\n   *  2. rule: edit, add, remove\n   * */\n\n  const updateName = (value: string) => {\n    updateAvailabilityPreset(preset.id, {name: value});\n  };\n\n  const removeRule = (id: string) => {\n    updateAvailabilityPreset(preset.id, {\n      rules: preset.rules.filter((rule: any) => rule.id != id),\n    });\n  };\n\n  const addRule = () => {\n    const rules = produce(preset.rules, (draft: Draft<any>) => {\n      draft.push({\n        id: nanoid(),\n        byday: ['mo', 'tu', 'we', 'th', 'fr'],\n        startTime: 540,\n        endTime: 1020,\n      });\n    });\n    updateAvailabilityPreset(preset.id, {rules});\n  };\n\n  const updateDayCheck = (ruleId: string, day: string, checked: boolean) => {\n    const rules = produce(preset.rules, (draft: Draft<any>) => {\n      const rule = draft.find((rule: any) => rule.id === ruleId);\n      if (checked) {\n        rule.byday.push(day);\n      } else {\n        rule.byday = rule.byday.filter((byday: string) => byday !== day);\n      }\n    });\n    updateAvailabilityPreset(preset.id, {rules});\n  };\n\n  const updateStartTime = (ruleId: string, value: number) => {\n    const rules = produce(preset.rules, (draft: Draft<any>) => {\n      const rule = draft.find((rule: any) => rule.id === ruleId);\n      rule.startTime = value;\n    });\n    updateAvailabilityPreset(preset.id, {rules});\n  };\n\n  const updateEndTime = (ruleId: string, value: number) => {\n    const rules = produce(preset.rules, (draft: Draft<any>) => {\n      const rule = draft.find((rule: any) => rule.id === ruleId);\n      rule.endTime = value;\n    });\n    updateAvailabilityPreset(preset.id, {rules});\n  };\n\n  console.log('avaialbility', preset);\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      <div className=\"flex flex-row header-padding header-border header-h items-center\">\n        <Link\n          to={`/settings/links`}\n          className=\"gentle-flex focus:outline-none w-10 h-10 text-gray-400 hover:text-gray-700 hover:bg-gray-100 rounded-full\"\n        >\n          <X />\n        </Link>\n        <span className=\"pl-2\">时间管理</span>\n      </div>\n\n      <div className=\"flex flex-row w-full\">\n        <div className=\"flex flex-col w-112\">\n          <div className=\"px-4 pt-8\">\n            <textarea\n              className=\"-mx-2 px-2 py-2 rounded-lg text-2xl leading-6 font-bold border-transparent focus:outline-none focus:border-gray-300 focus:ring focus:ring-black focus:ring-opacity-50 text-gray-800 resize-none placeholder-gray-600\"\n              placeholder=\"未命名\"\n              spellCheck=\"false\"\n              style={{minHeight: '42px !important'}}\n              defaultValue={preset?.name}\n              rows={1}\n              onKeyPress={(e) => {\n                console.log(e.key);\n                if (e.key === 'Enter') {\n                  e.preventDefault();\n                }\n              }}\n              onChange={(e) => {\n                // console.log('Name change', e.target.value);\n                updateName(e.target.value);\n              }}\n            />\n          </div>\n\n          <div className=\"pt-4\">\n            {preset?.rules.map((rule: any) => {\n              return (\n                <div\n                  key={rule.id}\n                  className=\"flex flex-row py-2 pb-8 mb-4 border-b border-primary border-solid\"\n                >\n                  <AvailabilityByDay\n                    rule={rule}\n                    updateDayCheck={updateDayCheck}\n                    updateStartTime={updateStartTime}\n                    updateEndTime={updateEndTime}\n                  />\n                  <button\n                    className=\"w-8 h-8 relative text-gray-300 hover:text-black hover:bg-gray-100 rounded-full gentle-flex\"\n                    onClick={() => removeRule(rule.id)}\n                  >\n                    <X />\n                  </button>\n                </div>\n              );\n            })}\n          </div>\n\n          <div className=\"w-full mt-4\">\n            <Button className={'ml-4 mt-4'} onClick={addRule}>\n              添加\n            </Button>\n            <Button className={'ml-4 mt-4'}>显示我的日历</Button>\n          </div>\n        </div>\n\n        <div className=\"ml-4 demo-app-main w-full\">\n          <FullCalendar\n            contentHeight=\"1100px\"\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n            headerToolbar={false}\n            weekNumberCalculation=\"ISO\"\n            initialView=\"timeGridWeek\"\n            slotDuration=\"00:30:00\"\n            snapDuration=\"00:15:00\"\n            slotLabelInterval=\"01:00\"\n            slotMinTime=\"06:00:00\"\n            dayHeaderContent={renderDayHeaderContent}\n            allDaySlot={false}\n            weekends={true}\n            eventSources={[\n              {\n                events: getBackgroundEvents,\n                display: 'background',\n              },\n            ]}\n            nowIndicator={false}\n            locale={zhLocale}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/TextField.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/booking/BookingPage.tsx",["881","882","883","884","885","886","887","888","889","890","891","892","893"],"import React, {useState, Fragment, RefObject} from 'react';\nimport {useParams} from 'react-router-dom';\nimport BookingProvider, {useBooking} from './BookingProvider';\nimport DayPicker from 'react-day-picker';\nimport 'react-day-picker/lib/style.css';\nimport FullCalendar, {\n  DateSelectArg,\n  DayHeaderContentArg,\n  EventApi,\n} from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin, {DateClickArg} from '@fullcalendar/interaction';\nimport {\n  complementIntervals,\n  createEventId,\n  eliminateIntervals,\n  INITIAL_EVENTS,\n} from '../event-utils';\nimport zhLocale from '@fullcalendar/core/locales/zh-cn';\nimport dayjs, {Dayjs} from 'dayjs';\nimport {Button, Input, Text} from '@geist-ui/react';\nimport humanizeDuration from 'humanize-duration';\nimport {colourOptions} from '../events/data';\nimport {convertMinToHrsMin, dayConvertToEn} from '../../utils';\nimport {nanoid} from 'nanoid';\nimport _ from 'lodash';\nimport * as API from '../../api';\nimport {EventInput} from '@fullcalendar/common';\n\nvar localizedFormat = require('dayjs/plugin/localizedFormat');\ndayjs.extend(localizedFormat);\ndayjs().format('L LT');\n\nfunction GeneralSection() {\n  const {user, schedulingLink, eventDuration, setEventDuration} = useBooking();\n\n  return (\n    <div date-section=\"control\" className=\"flex flex-col\">\n      <div className=\"px-4 pt-8\">\n        <h2 className=\"text-2xl\">{schedulingLink?.name}</h2>\n        <p className=\"pt-4\">{schedulingLink?.description}</p>\n      </div>\n\n      <div\n        className=\"px-2 pt-8 pr-4 py-2 grid gap-x-1 gap-y-6\"\n        style={{gridTemplateColumns: '30px auto'}}\n      >\n        <Fragment>\n          <span className=\"w-full gentle-flex\">\n            <i className=\"fas fa-user-alt \" />\n          </span>\n          <span>{schedulingLink?.organizer.displayName}</span>\n        </Fragment>\n\n        <Fragment>\n          <span className=\"w-full gentle-flex\">\n            <i className=\"fas fa-clock\" />\n          </span>\n          <div className=\"flex flex-row flex-wrap\">\n            {schedulingLink?.durations.map((d: number) => {\n              const durationDisplay = humanizeDuration(d * 60 * 1000, {\n                units: ['h', 'm'],\n                language: 'zh_CN',\n              });\n\n              return (\n                <div key={d} className=\"mt-1 mr-1\">\n                  <Button\n                    onClick={() => {\n                      setEventDuration(d);\n                    }}\n                    type={d === eventDuration ? 'success' : 'default'}\n                    size=\"mini\"\n                  >\n                    {durationDisplay}\n                  </Button>\n                </div>\n              );\n            })}\n          </div>\n        </Fragment>\n\n        <Fragment>\n          <span className=\"w-full gentle-flex\">\n            <i className=\"fas fa-video\" />\n          </span>\n          <span>\n            {schedulingLink?.location &&\n              colourOptions.find((opt) => opt.value === schedulingLink.location)\n                ?.label}\n          </span>\n        </Fragment>\n      </div>\n\n      <div className=\"px-4 pt-8\">当前登录用户：{user?.display_name}</div>\n    </div>\n  );\n}\n\nfunction EventSection() {\n  const {\n    user,\n    timeSelected,\n    eventStartTime,\n    schedulingLink,\n    setEventTime,\n    eventDuration,\n    setEventId,\n    cancelEventDrafted,\n  } = useBooking();\n  const durationDisplay = humanizeDuration(eventDuration * 60 * 1000, {\n    units: ['h', 'm'],\n    language: 'zh_CN',\n  });\n\n  const onSubmit = () => {\n    if (eventStartTime) {\n      console.log('scheduling link', schedulingLink);\n      API.createScheduledEvent(\n        schedulingLink.id,\n        eventStartTime.toISOString(),\n        'guest_name'\n      ).then((r) => {\n        console.log('createScheduledEvent response', r);\n      });\n    }\n  };\n\n  const onCancel = () => {\n    cancelEventDrafted();\n  };\n\n  return (\n    <div className=\"pt-2\">\n      <div className=\"px-4 pt-8\">\n        <h2 className=\"text-2xl\">{schedulingLink?.name}</h2>\n        <p className=\"pt-4\">{schedulingLink?.description}</p>\n      </div>\n\n      <div\n        className=\"px-2 pt-8 pr-4 py-2 grid gap-x-1 gap-y-6\"\n        style={{gridTemplateColumns: '30px auto'}}\n      >\n        <Fragment>\n          <span className=\"w-full gentle-flex\">\n            <i className=\"fas fa-user-alt \" />\n          </span>\n          <span>{schedulingLink?.organizer.displayName}</span>\n        </Fragment>\n\n        <Fragment>\n          <span className=\"w-full gentle-flex\">\n            <i className=\"fas fa-clock\" />\n          </span>\n          <span>{durationDisplay}</span>\n        </Fragment>\n\n        <Fragment>\n          <span className=\"w-full gentle-flex\">\n            <i className=\"fas fa-calendar-check\" />\n          </span>\n          {eventStartTime && (\n            <div\n              className=\"grid grid-cols-2 gap-2\"\n              style={{gridTemplateColumns: '80px auto'}}\n            >\n              <span>{dayjs(eventStartTime).format('M[月]DD[日]')}</span>\n              <span>{dayjs(eventStartTime).format('a h点 mm[分]')}</span>\n              <span className=\"text-right\">至</span>\n              <span>\n                {dayjs(eventStartTime)\n                  .add(eventDuration, 'minutes')\n                  .format('a h点 mm[分]')}\n              </span>\n            </div>\n          )}\n        </Fragment>\n      </div>\n\n      <div className=\"px-4 pt-8\">\n        <div className=\"pt-4\">\n          <Input placeholder=\"\" type=\"text\" id={'name'} clearable>\n            联系人\n          </Input>\n        </div>\n        <div className=\"pt-4\">\n          <Input placeholder=\"\" type=\"email\" id={'email'} clearable>\n            Email\n          </Input>\n        </div>\n        {schedulingLink?.fields && (\n          <>\n            {schedulingLink.fields.map((field: any) => {\n              return (\n                <div key={field.id} className=\"pt-4\">\n                  <Input placeholder=\"\" type=\"text\" id={field.id} clearable>\n                    {field.label}\n                  </Input>\n                </div>\n              );\n            })}\n          </>\n        )}\n      </div>\n\n      <div className=\"px-4 flex flex-row pt-8\">\n        <Button className=\"mr-8\" type=\"success\" size=\"mini\" onClick={onSubmit}>\n          确定\n        </Button>\n        <Button size=\"mini\" onClick={onCancel}>\n          取消\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nfunction CalendarMonthView() {\n  const [selectedDay, handleDayClick] = useState<Date>(new Date());\n\n  return (\n    <div className=\"absolute bottom-0 border-t border-primary border-solid\">\n      <DayPicker\n        selectedDays={selectedDay}\n        onDayClick={handleDayClick}\n        todayButton=\"今天\"\n        modifiers={{\n          foo: new Date(),\n        }}\n        onTodayButtonClick={(day, modifiers) => console.log(day, modifiers)}\n      />\n    </div>\n  );\n}\n\nfunction ControlSection() {\n  const {eventDrafted} = useBooking();\n  return (\n    <div className=\"flex flex-col w-96\">\n      {eventDrafted ? <EventSection /> : <GeneralSection />}\n      <CalendarMonthView />\n    </div>\n  );\n}\n\nfunction CalendarSection() {\n  const {\n    eventDuration,\n    eventStartTime,\n    setEventStartTime,\n    draftEvent,\n    calendarRef,\n    eventDrafted,\n    getIntervals,\n  } = useBooking();\n\n  const renderDayHeaderContent = (props: DayHeaderContentArg) => {\n    const date = dayjs(props.date);\n    return (\n      <div className=\"h-full\">\n        {\n          // @ts-ignore\n          date.isToday() ? (\n            <>\n              <div className=\"text-xs font-medium text-gray-600\">\n                {date.format('ddd')}\n              </div>\n              <div className=\"mb-2 flex justify-center\">\n                <div className=\"flex items-center justify-center w-10 h-10 rounded-full text-2xl bg-indigo-600 text-white font-bold\">\n                  {date.format('D')}\n                </div>\n              </div>\n            </>\n          ) : (\n            <>\n              <div className=\"text-xs font-medium text-gray-600\">\n                {date.format('ddd')}\n              </div>\n              <div className=\"mb-2 flex justify-center\">\n                <div className=\"flex items-center justify-center w-10 h-10 rounded-full text-2xl text-gray-700 font-medium\">\n                  {date.format('D')}\n                </div>\n              </div>\n            </>\n          )\n        }\n      </div>\n    );\n  };\n\n  const handleDateClick = (info: DateClickArg) => {\n    let calendarApi = info.view.calendar;\n    // calendarApi.\n    // calendarApi.removeAllEvents();\n    setEventStartTime(info.date);\n    //\n    // const id = nanoid();\n    // setEventId(id);\n    //\n    draftEvent();\n\n    // calendarApi.addEvent({\n    //   id,\n    //   start: info.dateStr,\n    //   end: dayjs(info.date).add(eventDuration, 'minutes').toISOString(),\n    // });\n  };\n\n  const handleEvents = (events: EventApi[]) => {\n    console.log('handleEvents', events);\n  };\n\n  /**\n   * organizer.availability\n   * 1. presets\n   * 2. overrides\n   */\n  const getBlockEvents = (\n    arg: {\n      start: Date;\n      end: Date;\n      startStr: string;\n      endStr: string;\n      timeZone: string;\n    },\n    successCallback: (events: EventInput[]) => void,\n    failureCallback: (error: any) => any\n  ) => {\n    console.log('get intervals', getIntervals(arg.start, arg.end));\n\n    const intervals = getIntervals(arg.start, arg.end);\n\n    const now = dayjs();\n    const intervalsFormat: Dayjs[][] = intervals\n      ? intervals\n          .filter((interval) => dayjs(interval.endAt).isAfter(now))\n          .map((interval) => [dayjs(interval.startAt), dayjs(interval.endAt)])\n          .filter((interval) => interval.length > 0)\n      : [];\n\n    const startDate = dayjs(arg.start);\n    const endDate = dayjs(arg.end);\n\n    const complementedIntervals = complementIntervals(\n      startDate,\n      endDate,\n      intervalsFormat\n    );\n\n    successCallback(\n      complementedIntervals.map((interval) => {\n        return {\n          id: createEventId(),\n          start: interval[0].toISOString(),\n          end: interval[1].toISOString(),\n          className: 'sc-unavailable',\n          overlap: false,\n          editable: false,\n          display: 'background',\n        };\n      })\n    );\n  };\n\n  const getEvent = (\n    arg: {\n      start: Date;\n      end: Date;\n      startStr: string;\n      endStr: string;\n      timeZone: string;\n    },\n    successCallback: (events: EventInput[]) => void,\n    failureCallback: (error: any) => any\n  ) => {\n    successCallback(\n      eventDrafted && eventStartTime\n        ? [\n            {\n              id: nanoid(),\n              start: eventStartTime,\n              end: dayjs(eventStartTime)\n                .add(eventDuration, 'minutes')\n                .toISOString(),\n            },\n          ]\n        : []\n    );\n  };\n\n  return (\n    <div className=\"pt-8 w-full h-full\">\n      <div className=\"w-full h-full\">\n        <FullCalendar\n          ref={calendarRef}\n          height=\"100%\"\n          contentHeight=\"900px\"\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n          headerToolbar={{\n            left: 'title',\n            center: '',\n            right: 'today prev,next',\n          }}\n          weekNumberCalculation=\"ISO\"\n          initialView=\"timeGridWeek\"\n          slotDuration=\"00:30:00\"\n          snapDuration=\"00:15:00\"\n          slotLabelInterval=\"01:00\"\n          slotMinTime=\"00:00:00\"\n          dayHeaderContent={renderDayHeaderContent}\n          editable={true}\n          selectable={false}\n          eventDurationEditable={false}\n          allDaySlot={false}\n          // dayMaxEvents={true}\n          weekends={true}\n          // events={[\n          //   {\n          //     id: nanoid(),\n          //     start: timeSelected?.start,\n          //     end: timeSelected?.end,\n          //   },\n          // ]} // alternatively, use the `events` setting to fetch from a feed\n          eventSources={[\n            {\n              events: getBlockEvents,\n              display: 'background',\n            },\n            {\n              events: getEvent,\n            },\n          ]}\n          // eventContent={renderEventContent} // custom render function\n          eventClick={(e) => {\n            console.log('click', e);\n          }}\n          eventsSet={handleEvents} // called after events are initialized/added/changed/removed\n          dateClick={handleDateClick}\n          eventDragStop={function (arg) {\n            console.log('drag stop', arg, arg.event.startStr, arg.event.endStr);\n          }}\n          nowIndicator={true}\n          locale={zhLocale}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default function BookingPage() {\n  const {userSlug, schedulingLinkSlug} = useParams();\n\n  console.log('userSlug', userSlug);\n\n  // read scheduling link\n  // - name\n  // - description\n  // - ...\n\n  return (\n    <BookingProvider\n      userSlug={userSlug}\n      schedulingLinkSlug={schedulingLinkSlug}\n    >\n      <div className=\"w-screen h-screen flex flex-row \">\n        <ControlSection />\n        <CalendarSection />\n      </div>\n    </BookingProvider>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/booking/BookingProvider.tsx",["894","895","896","897","898"],"import React, {useContext, useEffect, useState} from 'react';\nimport {useAuth} from '../../components/auth/AuthProvider';\nimport {\n  useIntervals,\n  useLink,\n  useSchedulingLinkBySlug,\n  useUserProfileBySlug,\n} from '../../api-hooks';\nimport * as API from '../../api';\nimport {useSchedulingLink} from '../../hooks/SchedulingLinkProvider';\nimport dayjs, {Dayjs} from 'dayjs';\nimport {useMap} from 'react-use';\n\ninterface EventTime {\n  start: Date;\n  end: Date;\n}\n\nconst BookingContext = React.createContext<{\n  userSlug: string;\n  schedulingLinkSlug: string;\n  user: any;\n  schedulingLink: any;\n\n  eventDrafted: boolean;\n  draftEvent: () => void;\n  calendarRef: any;\n\n  eventStartTime: Date | null;\n  setEventStartTime: (start: Date) => void;\n\n  timeSelected: EventTime | null;\n  eventId: string | null;\n  eventDuration: number;\n\n  setEventId: (id: string | null) => void;\n  setEventDuration: (value: number) => void;\n  setEventTime: (start: Date, end: Date) => void;\n\n  fetchIntervals: (start: Date, end: Date) => void;\n  submitScheduledEvent: () => Promise<any>;\n  cancelEventDrafted: () => Promise<any>;\n  getIntervals: (start: Date, end: Date) => Interval[];\n}>({\n  userSlug: '',\n  schedulingLinkSlug: '',\n  user: {},\n  schedulingLink: {},\n\n  eventDrafted: false,\n  draftEvent: () => {},\n  calendarRef: {},\n\n  eventStartTime: null,\n  setEventStartTime: (start: Date) => {},\n  timeSelected: null,\n  eventId: null,\n\n  eventDuration: 30,\n  setEventId: (id: string | null) => {},\n  setEventDuration: (value: number) => {},\n  setEventTime: (start: Date, end: Date) => {},\n\n  fetchIntervals: (start: Date, end: Date) => {},\n  submitScheduledEvent: () => Promise.resolve(),\n  cancelEventDrafted: () => Promise.resolve(),\n  getIntervals: (start: Date, end: Date) => [],\n});\n\nexport const useBooking = () => useContext(BookingContext);\n\ninterface BookingProviderProps {\n  userSlug: string;\n  schedulingLinkSlug: string;\n}\n\ninterface Interval {\n  startAt: string;\n  endAt: string;\n}\n\ninterface IntervalsCache {\n  [key: string]: Interval[];\n}\n\ntype Props = React.PropsWithChildren<BookingProviderProps>;\n\nfunction BookingProvider(props: Props) {\n  const {userSlug, schedulingLinkSlug} = props;\n  const {data: user} = useUserProfileBySlug(userSlug);\n  const {data: schedulingLink} = useSchedulingLinkBySlug(\n    userSlug,\n    schedulingLinkSlug\n  );\n  const [\n    intervalsCache,\n    {set: setIntervalsCache, get: getIntervalsCache},\n  ] = useMap<IntervalsCache>({});\n  const [timeSelected, setTimeSelected] = useState<EventTime | null>(null);\n  const [eventStartTime, setEventStartTime] = useState<Date | null>(null);\n  const [eventDuration, setEventDuration] = useState<number>(30);\n  const [eventId, setEventId] = useState<string | null>(null);\n\n  const [eventDrafted, setEventDrafted] = useState<boolean>(false);\n  const calendarRef = React.createRef<any>();\n\n  useEffect(() => {\n    if (schedulingLink) {\n      setEventDuration(schedulingLink.durations[0]);\n    }\n  }, [schedulingLink]);\n\n  const createScheduledEvent = async () => {\n    return Promise.resolve();\n  };\n\n  const setEventTime = (start: Date, end: Date) => {\n    setTimeSelected({start, end});\n  };\n\n  const cancelEventDrafted = () => {\n    setEventDrafted(false);\n    if (calendarRef.current) {\n      calendarRef.current.getApi().removeAllEvents();\n    }\n    return Promise.resolve();\n  };\n\n  const draftEvent = () => {\n    setEventDrafted(true);\n  };\n\n  const fetchIntervals = (start: Date, end: Date) => {\n    if (!Object.keys(intervalsCache).includes(start.toISOString())) {\n      API.fetchIntervals(\n        userSlug,\n        schedulingLinkSlug,\n        dayjs(start).format('YYYY-MM-DDTHH:mm:ssZ'),\n        dayjs(end).format('YYYY-MM-DDTHH:mm:ssZ')\n      ).then((data) => {\n        setIntervalsCache(start.toISOString(), data);\n      });\n    }\n  };\n\n  const getIntervals = (start: Date, end: Date) => {\n    fetchIntervals(start, end);\n    return getIntervalsCache(start.toISOString());\n  };\n\n  return (\n    <BookingContext.Provider\n      value={{\n        userSlug,\n        schedulingLinkSlug,\n        timeSelected,\n        eventStartTime,\n        eventDuration,\n\n        user,\n        schedulingLink,\n        submitScheduledEvent: createScheduledEvent,\n\n        eventId,\n        setEventId,\n\n        setEventTime,\n        setEventStartTime,\n        setEventDuration,\n\n        eventDrafted,\n        draftEvent,\n        cancelEventDrafted,\n        calendarRef,\n\n        fetchIntervals,\n        getIntervals,\n      }}\n    >\n      {props.children}\n    </BookingContext.Provider>\n  );\n}\n\nexport default BookingProvider;\n",{"ruleId":"899","replacedBy":"900"},{"ruleId":"901","replacedBy":"902"},{"ruleId":"903","severity":1,"message":"904","line":48,"column":1,"nodeType":"905","endLine":51,"endColumn":3},{"ruleId":"906","severity":1,"message":"907","line":12,"column":3,"nodeType":"908","messageId":"909","endLine":12,"endColumn":16},{"ruleId":"906","severity":1,"message":"910","line":29,"column":7,"nodeType":"908","messageId":"909","endLine":29,"endColumn":12},{"ruleId":"906","severity":1,"message":"911","line":148,"column":20,"nodeType":"908","messageId":"909","endLine":148,"endColumn":31},{"ruleId":"906","severity":1,"message":"912","line":150,"column":10,"nodeType":"908","messageId":"909","endLine":150,"endColumn":17},{"ruleId":"906","severity":1,"message":"913","line":32,"column":7,"nodeType":"908","messageId":"909","endLine":32,"endColumn":15},{"ruleId":"906","severity":1,"message":"911","line":255,"column":20,"nodeType":"908","messageId":"909","endLine":255,"endColumn":31},{"ruleId":"906","severity":1,"message":"912","line":257,"column":10,"nodeType":"908","messageId":"909","endLine":257,"endColumn":17},{"ruleId":"906","severity":1,"message":"914","line":1173,"column":9,"nodeType":"908","messageId":"909","endLine":1173,"endColumn":12},{"ruleId":"899","replacedBy":"915"},{"ruleId":"901","replacedBy":"916"},{"ruleId":"906","severity":1,"message":"917","line":1,"column":16,"nodeType":"908","messageId":"909","endLine":1,"endColumn":25},{"ruleId":"906","severity":1,"message":"918","line":1,"column":27,"nodeType":"908","messageId":"909","endLine":1,"endColumn":35},{"ruleId":"906","severity":1,"message":"919","line":3,"column":3,"nodeType":"908","messageId":"909","endLine":3,"endColumn":14},{"ruleId":"906","severity":1,"message":"920","line":4,"column":3,"nodeType":"908","messageId":"909","endLine":4,"endColumn":9},{"ruleId":"906","severity":1,"message":"921","line":5,"column":3,"nodeType":"908","messageId":"909","endLine":5,"endColumn":11},{"ruleId":"906","severity":1,"message":"922","line":6,"column":3,"nodeType":"908","messageId":"909","endLine":6,"endColumn":8},{"ruleId":"906","severity":1,"message":"923","line":8,"column":3,"nodeType":"908","messageId":"909","endLine":8,"endColumn":22},{"ruleId":"924","severity":1,"message":"925","line":16,"column":11,"nodeType":"926","endLine":16,"endColumn":94},{"ruleId":"924","severity":1,"message":"925","line":32,"column":13,"nodeType":"926","endLine":32,"endColumn":68},{"ruleId":"924","severity":1,"message":"925","line":33,"column":13,"nodeType":"926","endLine":33,"endColumn":68},{"ruleId":"924","severity":1,"message":"925","line":34,"column":13,"nodeType":"926","endLine":34,"endColumn":68},{"ruleId":"924","severity":1,"message":"925","line":35,"column":13,"nodeType":"926","endLine":35,"endColumn":68},{"ruleId":"924","severity":1,"message":"925","line":36,"column":13,"nodeType":"926","endLine":36,"endColumn":68},{"ruleId":"924","severity":1,"message":"925","line":256,"column":17,"nodeType":"926","endLine":256,"endColumn":76},{"ruleId":"924","severity":1,"message":"925","line":298,"column":17,"nodeType":"926","endLine":298,"endColumn":76},{"ruleId":"924","severity":1,"message":"925","line":339,"column":17,"nodeType":"926","endLine":339,"endColumn":76},{"ruleId":"924","severity":1,"message":"925","line":407,"column":11,"nodeType":"926","endLine":407,"endColumn":113},{"ruleId":"924","severity":1,"message":"925","line":434,"column":13,"nodeType":"926","endLine":434,"endColumn":42},{"ruleId":"924","severity":1,"message":"925","line":446,"column":13,"nodeType":"926","endLine":446,"endColumn":47},{"ruleId":"924","severity":1,"message":"925","line":458,"column":13,"nodeType":"926","endLine":458,"endColumn":47},{"ruleId":"924","severity":1,"message":"925","line":472,"column":13,"nodeType":"926","endLine":472,"endColumn":47},{"ruleId":"906","severity":1,"message":"917","line":1,"column":16,"nodeType":"908","messageId":"909","endLine":1,"endColumn":25},{"ruleId":"906","severity":1,"message":"927","line":2,"column":8,"nodeType":"908","messageId":"909","endLine":2,"endColumn":14},{"ruleId":"906","severity":1,"message":"921","line":6,"column":3,"nodeType":"908","messageId":"909","endLine":6,"endColumn":11},{"ruleId":"906","severity":1,"message":"928","line":10,"column":20,"nodeType":"908","messageId":"909","endLine":10,"endColumn":26},{"ruleId":"906","severity":1,"message":"929","line":12,"column":8,"nodeType":"908","messageId":"909","endLine":12,"endColumn":9},{"ruleId":"906","severity":1,"message":"930","line":13,"column":8,"nodeType":"908","messageId":"909","endLine":13,"endColumn":17},{"ruleId":"906","severity":1,"message":"931","line":15,"column":9,"nodeType":"908","messageId":"909","endLine":15,"endColumn":19},{"ruleId":"906","severity":1,"message":"932","line":16,"column":9,"nodeType":"908","messageId":"909","endLine":16,"endColumn":30},{"ruleId":"906","severity":1,"message":"933","line":17,"column":9,"nodeType":"908","messageId":"909","endLine":17,"endColumn":23},{"ruleId":"906","severity":1,"message":"934","line":17,"column":25,"nodeType":"908","messageId":"909","endLine":17,"endColumn":34},{"ruleId":"906","severity":1,"message":"935","line":18,"column":8,"nodeType":"908","messageId":"909","endLine":18,"endColumn":20},{"ruleId":"906","severity":1,"message":"936","line":19,"column":8,"nodeType":"908","messageId":"909","endLine":19,"endColumn":18},{"ruleId":"924","severity":1,"message":"925","line":24,"column":9,"nodeType":"926","endLine":24,"endColumn":92},{"ruleId":"924","severity":1,"message":"925","line":28,"column":11,"nodeType":"926","endLine":28,"endColumn":51},{"ruleId":"924","severity":1,"message":"925","line":29,"column":11,"nodeType":"926","endLine":29,"endColumn":51},{"ruleId":"924","severity":1,"message":"925","line":30,"column":11,"nodeType":"926","endLine":30,"endColumn":51},{"ruleId":"924","severity":1,"message":"925","line":31,"column":11,"nodeType":"926","endLine":31,"endColumn":51},{"ruleId":"899","replacedBy":"937"},{"ruleId":"901","replacedBy":"938"},{"ruleId":"939","severity":1,"message":"940","line":99,"column":6,"nodeType":"941","endLine":99,"endColumn":41,"suggestions":"942"},{"ruleId":"939","severity":1,"message":"943","line":99,"column":20,"nodeType":"944","endLine":99,"endColumn":40},{"ruleId":"899","replacedBy":"945"},{"ruleId":"901","replacedBy":"946"},{"ruleId":"906","severity":1,"message":"947","line":2,"column":8,"nodeType":"908","messageId":"909","endLine":2,"endColumn":21},{"ruleId":"906","severity":1,"message":"927","line":5,"column":8,"nodeType":"908","messageId":"909","endLine":5,"endColumn":14},{"ruleId":"906","severity":1,"message":"948","line":7,"column":8,"nodeType":"908","messageId":"909","endLine":7,"endColumn":13},{"ruleId":"906","severity":1,"message":"949","line":12,"column":9,"nodeType":"908","messageId":"909","endLine":12,"endColumn":16},{"ruleId":"906","severity":1,"message":"950","line":13,"column":8,"nodeType":"908","messageId":"909","endLine":13,"endColumn":31},{"ruleId":"906","severity":1,"message":"951","line":14,"column":8,"nodeType":"908","messageId":"909","endLine":14,"endColumn":27},{"ruleId":"906","severity":1,"message":"952","line":21,"column":5,"nodeType":"908","messageId":"909","endLine":21,"endColumn":13},{"ruleId":"939","severity":1,"message":"953","line":33,"column":6,"nodeType":"941","endLine":33,"endColumn":8,"suggestions":"954"},{"ruleId":"906","severity":1,"message":"955","line":43,"column":9,"nodeType":"908","messageId":"909","endLine":43,"endColumn":23},{"ruleId":"906","severity":1,"message":"956","line":67,"column":9,"nodeType":"908","messageId":"909","endLine":67,"endColumn":28},{"ruleId":"906","severity":1,"message":"957","line":93,"column":9,"nodeType":"908","messageId":"909","endLine":93,"endColumn":32},{"ruleId":"906","severity":1,"message":"958","line":6,"column":9,"nodeType":"908","messageId":"909","endLine":6,"endColumn":20},{"ruleId":"924","severity":1,"message":"925","line":54,"column":17,"nodeType":"926","endLine":54,"endColumn":47},{"ruleId":"899","replacedBy":"959"},{"ruleId":"901","replacedBy":"960"},{"ruleId":"906","severity":1,"message":"961","line":69,"column":10,"nodeType":"908","messageId":"909","endLine":69,"endColumn":21},{"ruleId":"906","severity":1,"message":"962","line":69,"column":23,"nodeType":"908","messageId":"909","endLine":69,"endColumn":37},{"ruleId":"939","severity":1,"message":"963","line":94,"column":6,"nodeType":"941","endLine":94,"endColumn":17,"suggestions":"964"},{"ruleId":"906","severity":1,"message":"965","line":258,"column":9,"nodeType":"908","messageId":"909","endLine":258,"endColumn":22},{"ruleId":"906","severity":1,"message":"966","line":1,"column":17,"nodeType":"908","messageId":"909","endLine":1,"endColumn":28},{"ruleId":"906","severity":1,"message":"917","line":1,"column":30,"nodeType":"908","messageId":"909","endLine":1,"endColumn":39},{"ruleId":"906","severity":1,"message":"967","line":2,"column":13,"nodeType":"908","messageId":"909","endLine":2,"endColumn":19},{"ruleId":"906","severity":1,"message":"968","line":6,"column":10,"nodeType":"908","messageId":"909","endLine":6,"endColumn":30},{"ruleId":"906","severity":1,"message":"969","line":8,"column":10,"nodeType":"908","messageId":"909","endLine":8,"endColumn":24},{"ruleId":"906","severity":1,"message":"918","line":1,"column":28,"nodeType":"908","messageId":"909","endLine":1,"endColumn":36},{"ruleId":"906","severity":1,"message":"970","line":12,"column":9,"nodeType":"908","messageId":"909","endLine":12,"endColumn":17},{"ruleId":"906","severity":1,"message":"948","line":13,"column":8,"nodeType":"908","messageId":"909","endLine":13,"endColumn":13},{"ruleId":"906","severity":1,"message":"971","line":14,"column":9,"nodeType":"908","messageId":"909","endLine":14,"endColumn":19},{"ruleId":"906","severity":1,"message":"972","line":16,"column":9,"nodeType":"908","messageId":"909","endLine":16,"endColumn":15},{"ruleId":"906","severity":1,"message":"973","line":17,"column":8,"nodeType":"908","messageId":"909","endLine":17,"endColumn":14},{"ruleId":"906","severity":1,"message":"974","line":17,"column":17,"nodeType":"908","messageId":"909","endLine":17,"endColumn":20},{"ruleId":"906","severity":1,"message":"975","line":18,"column":9,"nodeType":"908","messageId":"909","endLine":18,"endColumn":15},{"ruleId":"906","severity":1,"message":"976","line":21,"column":9,"nodeType":"908","messageId":"909","endLine":21,"endColumn":38},{"ruleId":"939","severity":1,"message":"977","line":101,"column":6,"nodeType":"941","endLine":101,"endColumn":25,"suggestions":"978"},{"ruleId":"906","severity":1,"message":"979","line":134,"column":21,"nodeType":"908","messageId":"909","endLine":134,"endColumn":33},{"ruleId":"906","severity":1,"message":"980","line":8,"column":7,"nodeType":"908","messageId":"909","endLine":8,"endColumn":16},{"ruleId":"906","severity":1,"message":"981","line":13,"column":5,"nodeType":"908","messageId":"909","endLine":13,"endColumn":18},{"ruleId":"906","severity":1,"message":"982","line":14,"column":5,"nodeType":"908","messageId":"909","endLine":14,"endColumn":22},{"ruleId":"906","severity":1,"message":"983","line":15,"column":5,"nodeType":"908","messageId":"909","endLine":15,"endColumn":20},{"ruleId":"906","severity":1,"message":"917","line":1,"column":16,"nodeType":"908","messageId":"909","endLine":1,"endColumn":25},{"ruleId":"906","severity":1,"message":"918","line":1,"column":16,"nodeType":"908","messageId":"909","endLine":1,"endColumn":24},{"ruleId":"906","severity":1,"message":"918","line":1,"column":16,"nodeType":"908","messageId":"909","endLine":1,"endColumn":24},{"ruleId":"899","replacedBy":"984"},{"ruleId":"901","replacedBy":"985"},{"ruleId":"906","severity":1,"message":"917","line":1,"column":16,"nodeType":"908","messageId":"909","endLine":1,"endColumn":25},{"ruleId":"906","severity":1,"message":"918","line":1,"column":27,"nodeType":"908","messageId":"909","endLine":1,"endColumn":35},{"ruleId":"906","severity":1,"message":"986","line":3,"column":23,"nodeType":"908","messageId":"909","endLine":3,"endColumn":30},{"ruleId":"906","severity":1,"message":"987","line":3,"column":13,"nodeType":"908","messageId":"909","endLine":3,"endColumn":16},{"ruleId":"906","severity":1,"message":"988","line":4,"column":9,"nodeType":"908","messageId":"909","endLine":4,"endColumn":25},{"ruleId":"906","severity":1,"message":"989","line":8,"column":3,"nodeType":"908","messageId":"909","endLine":8,"endColumn":31},{"ruleId":"906","severity":1,"message":"990","line":9,"column":3,"nodeType":"908","messageId":"909","endLine":9,"endColumn":20},{"ruleId":"906","severity":1,"message":"991","line":10,"column":3,"nodeType":"908","messageId":"909","endLine":10,"endColumn":21},{"ruleId":"906","severity":1,"message":"992","line":11,"column":3,"nodeType":"908","messageId":"909","endLine":11,"endColumn":24},{"ruleId":"906","severity":1,"message":"927","line":17,"column":10,"nodeType":"908","messageId":"909","endLine":17,"endColumn":16},{"ruleId":"906","severity":1,"message":"955","line":56,"column":9,"nodeType":"908","messageId":"909","endLine":56,"endColumn":23},{"ruleId":"906","severity":1,"message":"956","line":82,"column":9,"nodeType":"908","messageId":"909","endLine":82,"endColumn":28},{"ruleId":"899","replacedBy":"993"},{"ruleId":"901","replacedBy":"994"},{"ruleId":"906","severity":1,"message":"995","line":2,"column":9,"nodeType":"908","messageId":"909","endLine":2,"endColumn":20},{"ruleId":"906","severity":1,"message":"996","line":3,"column":8,"nodeType":"908","messageId":"909","endLine":3,"endColumn":20},{"ruleId":"906","severity":1,"message":"997","line":7,"column":3,"nodeType":"908","messageId":"909","endLine":7,"endColumn":19},{"ruleId":"906","severity":1,"message":"998","line":9,"column":3,"nodeType":"908","messageId":"909","endLine":9,"endColumn":13},{"ruleId":"906","severity":1,"message":"999","line":10,"column":3,"nodeType":"908","messageId":"909","endLine":10,"endColumn":17},{"ruleId":"906","severity":1,"message":"1000","line":11,"column":3,"nodeType":"908","messageId":"909","endLine":11,"endColumn":16},{"ruleId":"906","severity":1,"message":"1001","line":12,"column":3,"nodeType":"908","messageId":"909","endLine":12,"endColumn":12},{"ruleId":"906","severity":1,"message":"1002","line":30,"column":9,"nodeType":"908","messageId":"909","endLine":30,"endColumn":13},{"ruleId":"906","severity":1,"message":"917","line":1,"column":16,"nodeType":"908","messageId":"909","endLine":1,"endColumn":25},{"ruleId":"906","severity":1,"message":"970","line":9,"column":9,"nodeType":"908","messageId":"909","endLine":9,"endColumn":17},{"ruleId":"906","severity":1,"message":"1003","line":58,"column":9,"nodeType":"908","messageId":"909","endLine":58,"endColumn":17},{"ruleId":"906","severity":1,"message":"961","line":62,"column":10,"nodeType":"908","messageId":"909","endLine":62,"endColumn":21},{"ruleId":"906","severity":1,"message":"962","line":62,"column":23,"nodeType":"908","messageId":"909","endLine":62,"endColumn":37},{"ruleId":"906","severity":1,"message":"965","line":247,"column":9,"nodeType":"908","messageId":"909","endLine":247,"endColumn":22},{"ruleId":"899","replacedBy":"1004"},{"ruleId":"901","replacedBy":"1005"},{"ruleId":"899","replacedBy":"1006"},{"ruleId":"901","replacedBy":"1007"},{"ruleId":"906","severity":1,"message":"907","line":3,"column":9,"nodeType":"908","messageId":"909","endLine":3,"endColumn":22},{"ruleId":"906","severity":1,"message":"1008","line":5,"column":9,"nodeType":"908","messageId":"909","endLine":5,"endColumn":13},{"ruleId":"906","severity":1,"message":"1009","line":8,"column":9,"nodeType":"908","messageId":"909","endLine":8,"endColumn":30},{"ruleId":"906","severity":1,"message":"1010","line":14,"column":10,"nodeType":"908","messageId":"909","endLine":14,"endColumn":18},{"ruleId":"906","severity":1,"message":"1011","line":14,"column":20,"nodeType":"908","messageId":"909","endLine":14,"endColumn":31},{"ruleId":"906","severity":1,"message":"1012","line":186,"column":10,"nodeType":"908","messageId":"909","endLine":186,"endColumn":25},{"ruleId":"939","severity":1,"message":"1013","line":190,"column":6,"nodeType":"941","endLine":190,"endColumn":8,"suggestions":"1014"},{"ruleId":"906","severity":1,"message":"917","line":1,"column":16,"nodeType":"908","messageId":"909","endLine":1,"endColumn":25},{"ruleId":"906","severity":1,"message":"970","line":2,"column":9,"nodeType":"908","messageId":"909","endLine":2,"endColumn":17},{"ruleId":"906","severity":1,"message":"958","line":2,"column":19,"nodeType":"908","messageId":"909","endLine":2,"endColumn":30},{"ruleId":"906","severity":1,"message":"1015","line":2,"column":32,"nodeType":"908","messageId":"909","endLine":2,"endColumn":40},{"ruleId":"906","severity":1,"message":"1016","line":3,"column":9,"nodeType":"908","messageId":"909","endLine":3,"endColumn":13},{"ruleId":"906","severity":1,"message":"934","line":4,"column":9,"nodeType":"908","messageId":"909","endLine":4,"endColumn":18},{"ruleId":"906","severity":1,"message":"1017","line":5,"column":9,"nodeType":"908","messageId":"909","endLine":5,"endColumn":23},{"ruleId":"906","severity":1,"message":"1018","line":5,"column":25,"nodeType":"908","messageId":"909","endLine":5,"endColumn":41},{"ruleId":"906","severity":1,"message":"1019","line":6,"column":8,"nodeType":"908","messageId":"909","endLine":6,"endColumn":29},{"ruleId":"906","severity":1,"message":"907","line":10,"column":3,"nodeType":"908","messageId":"909","endLine":10,"endColumn":16},{"ruleId":"906","severity":1,"message":"1000","line":11,"column":3,"nodeType":"908","messageId":"909","endLine":11,"endColumn":16},{"ruleId":"906","severity":1,"message":"1020","line":13,"column":8,"nodeType":"908","messageId":"909","endLine":13,"endColumn":21},{"ruleId":"906","severity":1,"message":"917","line":1,"column":16,"nodeType":"908","messageId":"909","endLine":1,"endColumn":25},{"ruleId":"906","severity":1,"message":"1021","line":4,"column":3,"nodeType":"908","messageId":"909","endLine":4,"endColumn":7},{"ruleId":"906","severity":1,"message":"1022","line":5,"column":3,"nodeType":"908","messageId":"909","endLine":5,"endColumn":14},{"ruleId":"906","severity":1,"message":"1023","line":6,"column":3,"nodeType":"908","messageId":"909","endLine":6,"endColumn":21},{"ruleId":"906","severity":1,"message":"1024","line":10,"column":3,"nodeType":"908","messageId":"909","endLine":10,"endColumn":15},{"ruleId":"906","severity":1,"message":"1025","line":11,"column":3,"nodeType":"908","messageId":"909","endLine":11,"endColumn":14},{"ruleId":"906","severity":1,"message":"1026","line":12,"column":3,"nodeType":"908","messageId":"909","endLine":12,"endColumn":16},{"ruleId":"906","severity":1,"message":"1027","line":13,"column":3,"nodeType":"908","messageId":"909","endLine":13,"endColumn":7},{"ruleId":"906","severity":1,"message":"1028","line":14,"column":3,"nodeType":"908","messageId":"909","endLine":14,"endColumn":14},{"ruleId":"906","severity":1,"message":"1029","line":15,"column":3,"nodeType":"908","messageId":"909","endLine":15,"endColumn":8},{"ruleId":"906","severity":1,"message":"1030","line":16,"column":3,"nodeType":"908","messageId":"909","endLine":16,"endColumn":10},{"ruleId":"906","severity":1,"message":"1031","line":17,"column":3,"nodeType":"908","messageId":"909","endLine":17,"endColumn":8},{"ruleId":"906","severity":1,"message":"1032","line":18,"column":3,"nodeType":"908","messageId":"909","endLine":18,"endColumn":15},{"ruleId":"906","severity":1,"message":"1033","line":19,"column":3,"nodeType":"908","messageId":"909","endLine":19,"endColumn":7},{"ruleId":"906","severity":1,"message":"1034","line":20,"column":3,"nodeType":"908","messageId":"909","endLine":20,"endColumn":14},{"ruleId":"906","severity":1,"message":"907","line":21,"column":3,"nodeType":"908","messageId":"909","endLine":21,"endColumn":16},{"ruleId":"906","severity":1,"message":"1035","line":29,"column":14,"nodeType":"908","messageId":"909","endLine":29,"endColumn":18},{"ruleId":"906","severity":1,"message":"1036","line":29,"column":20,"nodeType":"908","messageId":"909","endLine":29,"endColumn":31},{"ruleId":"906","severity":1,"message":"1037","line":29,"column":33,"nodeType":"908","messageId":"909","endLine":29,"endColumn":41},{"ruleId":"906","severity":1,"message":"914","line":29,"column":43,"nodeType":"908","messageId":"909","endLine":29,"endColumn":46},{"ruleId":"906","severity":1,"message":"1038","line":29,"column":48,"nodeType":"908","messageId":"909","endLine":29,"endColumn":52},{"ruleId":"906","severity":1,"message":"1039","line":29,"column":54,"nodeType":"908","messageId":"909","endLine":29,"endColumn":61},{"ruleId":"906","severity":1,"message":"1040","line":31,"column":9,"nodeType":"908","messageId":"909","endLine":31,"endColumn":52},{"ruleId":"899","replacedBy":"1041"},{"ruleId":"901","replacedBy":"1042"},{"ruleId":"906","severity":1,"message":"1043","line":2,"column":9,"nodeType":"908","messageId":"909","endLine":2,"endColumn":19},{"ruleId":"906","severity":1,"message":"919","line":2,"column":21,"nodeType":"908","messageId":"909","endLine":2,"endColumn":32},{"ruleId":"1044","severity":1,"message":"1045","line":9,"column":3,"nodeType":"1046","messageId":"1047","endLine":9,"endColumn":57,"fix":"1048"},{"ruleId":"906","severity":1,"message":"1008","line":12,"column":9,"nodeType":"908","messageId":"909","endLine":12,"endColumn":13},{"ruleId":"939","severity":1,"message":"1049","line":187,"column":6,"nodeType":"941","endLine":187,"endColumn":8,"suggestions":"1050"},{"ruleId":"939","severity":1,"message":"1051","line":193,"column":6,"nodeType":"941","endLine":193,"endColumn":32,"suggestions":"1052"},{"ruleId":"939","severity":1,"message":"1053","line":21,"column":6,"nodeType":"941","endLine":21,"endColumn":8,"suggestions":"1054"},{"ruleId":"906","severity":1,"message":"1055","line":20,"column":10,"nodeType":"908","messageId":"909","endLine":20,"endColumn":15},{"ruleId":"906","severity":1,"message":"912","line":21,"column":10,"nodeType":"908","messageId":"909","endLine":21,"endColumn":17},{"ruleId":"906","severity":1,"message":"1056","line":25,"column":23,"nodeType":"908","messageId":"909","endLine":25,"endColumn":35},{"ruleId":"939","severity":1,"message":"1057","line":129,"column":6,"nodeType":"941","endLine":129,"endColumn":8,"suggestions":"1058"},{"ruleId":"899","replacedBy":"1059"},{"ruleId":"901","replacedBy":"1060"},{"ruleId":"906","severity":1,"message":"1061","line":6,"column":10,"nodeType":"908","messageId":"909","endLine":6,"endColumn":18},{"ruleId":"899","replacedBy":"1062"},{"ruleId":"901","replacedBy":"1063"},{"ruleId":"906","severity":1,"message":"1064","line":9,"column":8,"nodeType":"908","messageId":"909","endLine":9,"endColumn":15},{"ruleId":"906","severity":1,"message":"1065","line":19,"column":11,"nodeType":"908","messageId":"909","endLine":19,"endColumn":20},{"ruleId":"906","severity":1,"message":"1066","line":21,"column":3,"nodeType":"908","messageId":"909","endLine":21,"endColumn":11},{"ruleId":"906","severity":1,"message":"1067","line":200,"column":5,"nodeType":"908","messageId":"909","endLine":200,"endColumn":14},{"ruleId":"1068","severity":1,"message":"1069","line":262,"column":37,"nodeType":"1070","messageId":"1071","endLine":262,"endColumn":39},{"ruleId":"906","severity":1,"message":"1072","line":411,"column":10,"nodeType":"908","messageId":"909","endLine":411,"endColumn":25},{"ruleId":"906","severity":1,"message":"1073","line":2,"column":8,"nodeType":"908","messageId":"909","endLine":2,"endColumn":14},{"ruleId":"939","severity":1,"message":"1074","line":83,"column":6,"nodeType":"941","endLine":83,"endColumn":22,"suggestions":"1075"},{"ruleId":"899","replacedBy":"1076"},{"ruleId":"901","replacedBy":"1077"},{"ruleId":"906","severity":1,"message":"1078","line":182,"column":9,"nodeType":"908","messageId":"909","endLine":182,"endColumn":29},{"ruleId":"906","severity":1,"message":"1079","line":216,"column":9,"nodeType":"908","messageId":"909","endLine":216,"endColumn":14},{"ruleId":"906","severity":1,"message":"1080","line":217,"column":9,"nodeType":"908","messageId":"909","endLine":217,"endColumn":20},{"ruleId":"906","severity":1,"message":"1081","line":239,"column":9,"nodeType":"908","messageId":"909","endLine":239,"endColumn":25},{"ruleId":"906","severity":1,"message":"1082","line":245,"column":9,"nodeType":"908","messageId":"909","endLine":245,"endColumn":21},{"ruleId":"1083","severity":1,"message":"1084","line":314,"column":44,"nodeType":"1070","messageId":"1085","endLine":320,"endColumn":8},{"ruleId":"906","severity":1,"message":"1086","line":5,"column":5,"nodeType":"908","messageId":"909","endLine":5,"endColumn":13},{"ruleId":"1087","severity":1,"message":"1088","line":10,"column":25,"nodeType":"1089","messageId":"1090","endLine":10,"endColumn":26},{"ruleId":"1087","severity":1,"message":"1088","line":11,"column":23,"nodeType":"1089","messageId":"1090","endLine":11,"endColumn":24},{"ruleId":"906","severity":1,"message":"917","line":1,"column":28,"nodeType":"908","messageId":"909","endLine":1,"endColumn":37},{"ruleId":"906","severity":1,"message":"1073","line":3,"column":8,"nodeType":"908","messageId":"909","endLine":3,"endColumn":14},{"ruleId":"906","severity":1,"message":"1091","line":5,"column":9,"nodeType":"908","messageId":"909","endLine":5,"endColumn":23},{"ruleId":"906","severity":1,"message":"1092","line":6,"column":9,"nodeType":"908","messageId":"909","endLine":6,"endColumn":23},{"ruleId":"906","severity":1,"message":"949","line":7,"column":9,"nodeType":"908","messageId":"909","endLine":7,"endColumn":16},{"ruleId":"906","severity":1,"message":"1093","line":14,"column":9,"nodeType":"908","messageId":"909","endLine":14,"endColumn":26},{"ruleId":"906","severity":1,"message":"1094","line":127,"column":9,"nodeType":"908","messageId":"909","endLine":127,"endColumn":28},{"ruleId":"906","severity":1,"message":"1095","line":135,"column":9,"nodeType":"908","messageId":"909","endLine":135,"endColumn":32},{"ruleId":"906","severity":1,"message":"917","line":1,"column":16,"nodeType":"908","messageId":"909","endLine":1,"endColumn":25},{"ruleId":"906","severity":1,"message":"907","line":5,"column":3,"nodeType":"908","messageId":"909","endLine":5,"endColumn":16},{"ruleId":"906","severity":1,"message":"1000","line":6,"column":3,"nodeType":"908","messageId":"909","endLine":6,"endColumn":16},{"ruleId":"906","severity":1,"message":"1020","line":9,"column":8,"nodeType":"908","messageId":"909","endLine":9,"endColumn":21},{"ruleId":"906","severity":1,"message":"1016","line":11,"column":9,"nodeType":"908","messageId":"909","endLine":11,"endColumn":13},{"ruleId":"906","severity":1,"message":"917","line":1,"column":16,"nodeType":"908","messageId":"909","endLine":1,"endColumn":25},{"ruleId":"906","severity":1,"message":"1021","line":4,"column":3,"nodeType":"908","messageId":"909","endLine":4,"endColumn":7},{"ruleId":"906","severity":1,"message":"1022","line":5,"column":3,"nodeType":"908","messageId":"909","endLine":5,"endColumn":14},{"ruleId":"906","severity":1,"message":"1023","line":6,"column":3,"nodeType":"908","messageId":"909","endLine":6,"endColumn":21},{"ruleId":"906","severity":1,"message":"1040","line":15,"column":9,"nodeType":"908","messageId":"909","endLine":15,"endColumn":52},{"ruleId":"906","severity":1,"message":"1096","line":26,"column":10,"nodeType":"908","messageId":"909","endLine":26,"endColumn":32},{"ruleId":"906","severity":1,"message":"1097","line":6,"column":3,"nodeType":"908","messageId":"909","endLine":6,"endColumn":21},{"ruleId":"906","severity":1,"message":"948","line":10,"column":8,"nodeType":"908","messageId":"909","endLine":10,"endColumn":13},{"ruleId":"906","severity":1,"message":"1098","line":223,"column":10,"nodeType":"908","messageId":"909","endLine":223,"endColumn":24},{"ruleId":"906","severity":1,"message":"1099","line":224,"column":10,"nodeType":"908","messageId":"909","endLine":224,"endColumn":17},{"ruleId":"906","severity":1,"message":"952","line":224,"column":19,"nodeType":"908","messageId":"909","endLine":224,"endColumn":27},{"ruleId":"906","severity":1,"message":"1100","line":224,"column":29,"nodeType":"908","messageId":"909","endLine":224,"endColumn":46},{"ruleId":"906","severity":1,"message":"1101","line":224,"column":48,"nodeType":"908","messageId":"909","endLine":224,"endColumn":58},{"ruleId":"906","severity":1,"message":"1102","line":226,"column":10,"nodeType":"908","messageId":"909","endLine":226,"endColumn":17},{"ruleId":"906","severity":1,"message":"1103","line":226,"column":19,"nodeType":"908","messageId":"909","endLine":226,"endColumn":29},{"ruleId":"906","severity":1,"message":"952","line":230,"column":19,"nodeType":"908","messageId":"909","endLine":230,"endColumn":27},{"ruleId":"906","severity":1,"message":"1100","line":230,"column":29,"nodeType":"908","messageId":"909","endLine":230,"endColumn":46},{"ruleId":"906","severity":1,"message":"1101","line":230,"column":48,"nodeType":"908","messageId":"909","endLine":230,"endColumn":58},{"ruleId":"906","severity":1,"message":"1102","line":232,"column":10,"nodeType":"908","messageId":"909","endLine":232,"endColumn":17},{"ruleId":"906","severity":1,"message":"1103","line":232,"column":19,"nodeType":"908","messageId":"909","endLine":232,"endColumn":29},{"ruleId":"906","severity":1,"message":"952","line":243,"column":19,"nodeType":"908","messageId":"909","endLine":243,"endColumn":27},{"ruleId":"906","severity":1,"message":"1101","line":243,"column":48,"nodeType":"908","messageId":"909","endLine":243,"endColumn":58},{"ruleId":"906","severity":1,"message":"1099","line":262,"column":10,"nodeType":"908","messageId":"909","endLine":262,"endColumn":17},{"ruleId":"906","severity":1,"message":"952","line":262,"column":19,"nodeType":"908","messageId":"909","endLine":262,"endColumn":27},{"ruleId":"906","severity":1,"message":"1100","line":262,"column":29,"nodeType":"908","messageId":"909","endLine":262,"endColumn":46},{"ruleId":"906","severity":1,"message":"1101","line":262,"column":48,"nodeType":"908","messageId":"909","endLine":262,"endColumn":58},{"ruleId":"906","severity":1,"message":"1001","line":4,"column":8,"nodeType":"908","messageId":"909","endLine":4,"endColumn":17},{"ruleId":"906","severity":1,"message":"1104","line":15,"column":3,"nodeType":"908","messageId":"909","endLine":15,"endColumn":17},{"ruleId":"906","severity":1,"message":"1105","line":18,"column":17,"nodeType":"908","messageId":"909","endLine":18,"endColumn":25},{"ruleId":"906","severity":1,"message":"1106","line":18,"column":27,"nodeType":"908","messageId":"909","endLine":18,"endColumn":32},{"ruleId":"906","severity":1,"message":"1107","line":28,"column":7,"nodeType":"908","messageId":"909","endLine":28,"endColumn":18},{"ruleId":"1083","severity":1,"message":"1084","line":142,"column":44,"nodeType":"1070","messageId":"1085","endLine":148,"endColumn":8},{"ruleId":"1108","severity":1,"message":"1109","line":183,"column":57,"nodeType":"1089","messageId":"1110","endLine":183,"endColumn":59},{"ruleId":"906","severity":1,"message":"1111","line":1,"column":36,"nodeType":"908","messageId":"909","endLine":1,"endColumn":45},{"ruleId":"906","severity":1,"message":"1112","line":7,"column":3,"nodeType":"908","messageId":"909","endLine":7,"endColumn":16},{"ruleId":"906","severity":1,"message":"1113","line":17,"column":3,"nodeType":"908","messageId":"909","endLine":17,"endColumn":21},{"ruleId":"906","severity":1,"message":"1104","line":18,"column":3,"nodeType":"908","messageId":"909","endLine":18,"endColumn":17},{"ruleId":"906","severity":1,"message":"1033","line":22,"column":24,"nodeType":"908","messageId":"909","endLine":22,"endColumn":28},{"ruleId":"906","severity":1,"message":"1097","line":25,"column":9,"nodeType":"908","messageId":"909","endLine":25,"endColumn":27},{"ruleId":"906","severity":1,"message":"1114","line":25,"column":29,"nodeType":"908","messageId":"909","endLine":25,"endColumn":43},{"ruleId":"906","severity":1,"message":"929","line":27,"column":8,"nodeType":"908","messageId":"909","endLine":27,"endColumn":9},{"ruleId":"906","severity":1,"message":"1115","line":103,"column":5,"nodeType":"908","messageId":"909","endLine":103,"endColumn":9},{"ruleId":"906","severity":1,"message":"1116","line":104,"column":5,"nodeType":"908","messageId":"909","endLine":104,"endColumn":17},{"ruleId":"906","severity":1,"message":"1117","line":107,"column":5,"nodeType":"908","messageId":"909","endLine":107,"endColumn":17},{"ruleId":"906","severity":1,"message":"1118","line":109,"column":5,"nodeType":"908","messageId":"909","endLine":109,"endColumn":15},{"ruleId":"906","severity":1,"message":"1080","line":293,"column":9,"nodeType":"908","messageId":"909","endLine":293,"endColumn":20},{"ruleId":"906","severity":1,"message":"949","line":2,"column":9,"nodeType":"908","messageId":"909","endLine":2,"endColumn":16},{"ruleId":"906","severity":1,"message":"1119","line":4,"column":3,"nodeType":"908","messageId":"909","endLine":4,"endColumn":15},{"ruleId":"906","severity":1,"message":"1120","line":5,"column":3,"nodeType":"908","messageId":"909","endLine":5,"endColumn":10},{"ruleId":"906","severity":1,"message":"1093","line":10,"column":9,"nodeType":"908","messageId":"909","endLine":10,"endColumn":26},{"ruleId":"906","severity":1,"message":"1121","line":11,"column":16,"nodeType":"908","messageId":"909","endLine":11,"endColumn":21},"no-native-reassign",["1122"],"no-negated-in-lhs",["1123"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'DefaultButton' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'setRedirect' is assigned a value but never used.","'loading' is assigned a value but never used.","'Register' is defined but never used.","'url' is assigned a value but never used.",["1122"],["1123"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useLocation' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","'RouteComponentProps' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Header' is defined but never used.","'Router' is defined but never used.","'_' is defined but never used.","'EventType' is defined but never used.","'EventTypes' is defined but never used.","'ConversationsProvider' is defined but never used.","'EventsProvider' is defined but never used.","'useEvents' is defined but never used.","'NewEventType' is defined but never used.","'NavSection' is defined but never used.",["1122"],["1123"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'args', 'callback', and 'sortBy'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["1124"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression",["1122"],["1123"],"'EventTypeEdit' is defined but never used.","'dayjs' is defined but never used.","'useAuth' is defined but never used.","'InviteeQuestionsSection' is defined but never used.","'NotifyPolicySection' is defined but never used.","'settings' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchAllSchedules'. Either include it or remove the dependency array.",["1125"],"'generalSection' is assigned a value but never used.","'availabilitySection' is assigned a value but never used.","'inviteeQuestionsSection' is assigned a value but never used.","'useQueryOne' is defined but never used.",["1122"],["1123"],"'forceCancel' is assigned a value but never used.","'setForceCancel' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'activeAvailabilityRule'. Either include it or remove the dependency array.",["1126"],"'duplicateRule' is assigned a value but never used.","'useCallback' is defined but never used.","'Dialog' is defined but never used.","'useDebouncedTransact' is defined but never used.","'EditingContext' is defined but never used.","'useQuery' is defined but never used.","'listOfTime' is defined but never used.","'random' is defined but never used.","'moment' is defined but never used.","'now' is defined but never used.","'number' is defined but never used.","'DayPickerSingleDateController' is defined but never used.","React Hook useCallback has an unnecessary dependency: 'selectRef.current'. Either exclude it or remove the dependency array. Mutable values like 'selectRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["1127"],"'setCheckPass' is assigned a value but never used.","'customKey' is assigned a value but never used.","'setPeriodType' is assigned a value but never used.","'setMaxBookingTime' is assigned a value but never used.","'setStartEndDate' is assigned a value but never used.",["1122"],["1123"],"'useBook' is defined but never used.","'API' is defined but never used.","'EventGeneralEdit' is defined but never used.","'PERIOD_TYPE_AVAILABLE_MOVING' is defined but never used.","'PERIOD_TYPE_FIXED' is defined but never used.","'PERIOD_TYPE_MOVING' is defined but never used.","'PERIOD_TYPE_UNLIMITED' is defined but never used.",["1122"],["1123"],"'useTransact' is defined but never used.","'CancelButton' is defined but never used.","'ITextFieldStyles' is defined but never used.","'MessageBar' is defined but never used.","'MessageBarType' is defined but never used.","'PrimaryButton' is defined but never used.","'TextField' is defined but never used.","'save' is assigned a value but never used.","'transact' is assigned a value but never used.",["1122"],["1123"],["1122"],["1123"],"'days' is defined but never used.","'SearchBoxSmallExample' is defined but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'scheduledEvents' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchScheduledEvents'. Either include it or remove the dependency array.",["1128"],"'useStore' is defined but never used.","'Link' is defined but never used.","'fetchSchedules' is defined but never used.","'fetchUserProfile' is defined but never used.","'CreateEventTypeDialog' is defined but never used.","'EventTypeCard' is defined but never used.","'Card' is defined but never used.","'ICardTokens' is defined but never used.","'ICardSectionStyles' is defined but never used.","'ActionButton' is defined but never used.","'FontWeights' is defined but never used.","'IButtonStyles' is defined but never used.","'Icon' is defined but never used.","'IIconStyles' is defined but never used.","'Image' is defined but never used.","'Persona' is defined but never used.","'Stack' is defined but never used.","'IStackTokens' is defined but never used.","'Text' is defined but never used.","'ITextStyles' is defined but never used.","'name' is assigned a value but never used.","'description' is assigned a value but never used.","'duration' is assigned a value but never used.","'kind' is assigned a value but never used.","'enabled' is assigned a value but never used.","'footerCardSectionTokens' is assigned a value but never used.",["1122"],["1123"],"'useHistory' is defined but never used.","no-useless-rename","Import fetchDatetimeSpotsByRange unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"1129","text":"1130"},"React Hook useEffect has missing dependencies: 'date', 'fetchEventTypeByUrl', 'fetchSchedule', 'fetchUserProfile', 'month', 'type', 'updateSelectedDate', 'updateSelectedMonth', and 'user'. Either include them or remove the dependency array.",["1131"],"React Hook useEffect has a missing dependency: 'handleDatetimeSpotsFetch'. Either include it or remove the dependency array.",["1132"],"React Hook useEffect has missing dependencies: 'eventTypes', 'fetchEventTypes', 'fetchUserProfile', 'user', and 'userProfileBySlug'. Either include them or remove the dependency array.",["1133"],"'error' is assigned a value but never used.","'selectedDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'date', 'datetime', 'fetchEventTypeByUrl', 'fetchSchedule', 'fetchUserProfile', 'month', 'type', 'updateSelectedDate', 'updateSelectedMonth', 'updateSelectedTime', and 'user'. Either include them or remove the dependency array.",["1134"],["1122"],["1123"],"'Calendar' is defined but never used.",["1122"],["1123"],"'WithTip' is defined but never used.","'LinkPlain' is defined but never used.","'Textarea' is defined but never used.","'organizer' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'CalendarSection' is defined but never used.","'useSWR' is defined but never used.","React Hook useEffect has a missing dependency: 'getAvailabilityPresetsById'. Either include it or remove the dependency array.",["1135"],["1122"],["1123"],"'handleWeekendsToggle' is assigned a value but never used.","'title' is assigned a value but never used.","'calendarApi' is assigned a value but never used.","'handleEventClick' is assigned a value but never used.","'handleEvents' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'date', 'date'.","unsafeRefs","'todayStr' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'getAccessToken' is defined but never used.","'fetchWithToken' is defined but never used.","'useSchedulingLink' is defined but never used.","'_updateUserSettings' is assigned a value but never used.","'_revalidateUserSettings' is assigned a value but never used.","'CalendarBindingSection' is defined but never used.","'convertMinToHrsMin' is defined but never used.","'LinkUrlSection' is defined but never used.","'profile' is assigned a value but never used.","'updateDisplayName' is assigned a value but never used.","'updateSlug' is assigned a value but never used.","'editing' is assigned a value but never used.","'setEditing' is assigned a value but never used.","'INITIAL_EVENTS' is defined but never used.","'Checkbox' is defined but never used.","'Input' is defined but never used.","'sliceOfTime' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'RefObject' is defined but never used.","'DateSelectArg' is defined but never used.","'eliminateIntervals' is defined but never used.","'dayConvertToEn' is defined but never used.","'user' is assigned a value but never used.","'timeSelected' is assigned a value but never used.","'setEventTime' is assigned a value but never used.","'setEventId' is assigned a value but never used.","'useIntervals' is defined but never used.","'useLink' is defined but never used.","'Dayjs' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1136","fix":"1137"},{"desc":"1138","fix":"1139"},{"desc":"1140","fix":"1141"},{"desc":"1142","fix":"1143"},{"desc":"1144","fix":"1145"},[290,344],"fetchDatetimeSpotsByRange",{"desc":"1146","fix":"1147"},{"desc":"1148","fix":"1149"},{"desc":"1150","fix":"1151"},{"desc":"1152","fix":"1153"},{"desc":"1154","fix":"1155"},"Update the dependencies array to be: [args, callback, conn, query, sortBy]",{"range":"1156","text":"1157"},"Update the dependencies array to be: [fetchAllSchedules]",{"range":"1158","text":"1159"},"Update the dependencies array to be: [activeAvailabilityRule, schedules]",{"range":"1160","text":"1161"},"Update the dependencies array to be: []",{"range":"1162","text":"1163"},"Update the dependencies array to be: [fetchScheduledEvents]",{"range":"1164","text":"1165"},"Update the dependencies array to be: [date, fetchEventTypeByUrl, fetchSchedule, fetchUserProfile, month, type, updateSelectedDate, updateSelectedMonth, user]",{"range":"1166","text":"1167"},"Update the dependencies array to be: [eventType, handleDatetimeSpotsFetch, selectedMonth]",{"range":"1168","text":"1169"},"Update the dependencies array to be: [eventTypes, fetchEventTypes, fetchUserProfile, user, userProfileBySlug]",{"range":"1170","text":"1171"},"Update the dependencies array to be: [date, datetime, fetchEventTypeByUrl, fetchSchedule, fetchUserProfile, month, type, updateSelectedDate, updateSelectedMonth, updateSelectedTime, user]",{"range":"1172","text":"1173"},"Update the dependencies array to be: [settings, link, getAvailabilityPresetsById]",{"range":"1174","text":"1175"},[2308,2343],"[args, callback, conn, query, sortBy]",[1306,1308],"[fetchAllSchedules]",[2789,2800],"[activeAvailabilityRule, schedules]",[3556,3575],"[]",[6381,6383],"[fetchScheduledEvents]",[4869,4871],"[date, fetchEventTypeByUrl, fetchSchedule, fetchUserProfile, month, type, updateSelectedDate, updateSelectedMonth, user]",[5005,5031],"[eventType, handleDatetimeSpotsFetch, selectedMonth]",[487,489],"[eventTypes, fetchEventTypes, fetchUserProfile, user, userProfileBySlug]",[3394,3396],"[date, datetime, fetchEventTypeByUrl, fetchSchedule, fetchUserProfile, month, type, updateSelectedDate, updateSelectedMonth, updateSelectedTime, user]",[2660,2676],"[settings, link, getAvailabilityPresetsById]"]