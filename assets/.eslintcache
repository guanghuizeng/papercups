[{"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/index.tsx":"1","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/serviceWorker.ts":"2","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/analytics.ts":"3","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/App.tsx":"4","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/auth/AuthProvider.tsx":"5","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/config.ts":"6","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/auth/Register.tsx":"7","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/auth/Login.tsx":"8","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/auth/EmailVerification.tsx":"9","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/auth/PasswordReset.tsx":"10","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/auth/RequestPasswordReset.tsx":"11","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/auth/PasswordResetRequested.tsx":"12","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/Sandbox.tsx":"13","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/storage.ts":"14","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/api.ts":"15","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/Dashboard.tsx":"16","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/demo/BotDemo.tsx":"17","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/demo/Demo.tsx":"18","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/ScheduledEvent.tsx":"19","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/billing/PricingOverview.tsx":"20","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/landing/LadingPage.tsx":"21","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/book/Live.tsx":"22","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/conversations/SharedConversation.tsx":"23","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/book/Book.tsx":"24","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/booking/BookingPage.tsx":"25","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/logger.tsx":"26","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/common.tsx":"27","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/events/data.ts":"28","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/SchedulingLinksBoard.tsx":"29","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/SchedulingLinkNew.tsx":"30","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/SchedulingLink.tsx":"31","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/AppSettings.tsx":"32","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/Availability.tsx":"33","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/icons.tsx":"34","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/events/ScheduledEvents.tsx":"35","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/event-utils.tsx":"36","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/booking/BookingProvider.tsx":"37","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/book/BookInviteePage.tsx":"38","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/book/BookContactsPage.tsx":"39","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/book/BookUserPage.tsx":"40","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/book/BookTypePage.tsx":"41","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/book/BookProvider.tsx":"42","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/conversations/ConversationMessages.tsx":"43","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/hooks/AppDataProvider.tsx":"44","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/hooks/ScheduledEventProvider.tsx":"45","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/utils.ts":"46","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/DatePicker.tsx":"47","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/constants.ts":"48","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/SchedulingLinkCard.tsx":"49","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/hooks/ScheduledEventsProvider.tsx":"50","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/api-hooks.tsx":"51","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/conversations/ChatMessage.tsx":"52","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/Spinner.tsx":"53","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/book/TimeOption.tsx":"54","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/SchedulingLinkSettings.tsx":"55","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/hooks/utils.ts":"56","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/conversations/support.ts":"57","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/conversations/ChatMessageBox.tsx":"58","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/hooks/SchedulingLinkProvider.tsx":"59","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/Calendar.tsx":"60","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/events/EventLocationSelect.tsx":"61","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/NavSidebar.tsx":"62"},{"size":615,"mtime":1609244306905,"results":"63","hashOfConfig":"64"},{"size":5296,"mtime":1607220770508,"results":"65","hashOfConfig":"64"},{"size":1226,"mtime":1607220770491,"results":"66","hashOfConfig":"64"},{"size":3891,"mtime":1612593041664,"results":"67","hashOfConfig":"64"},{"size":3603,"mtime":1607220770494,"results":"68","hashOfConfig":"64"},{"size":898,"mtime":1608873579256,"results":"69","hashOfConfig":"64"},{"size":11691,"mtime":1609813521127,"results":"70","hashOfConfig":"64"},{"size":7378,"mtime":1609813521023,"results":"71","hashOfConfig":"64"},{"size":1262,"mtime":1607220770494,"results":"72","hashOfConfig":"64"},{"size":4766,"mtime":1607220770495,"results":"73","hashOfConfig":"64"},{"size":2756,"mtime":1607220770495,"results":"74","hashOfConfig":"64"},{"size":913,"mtime":1607220770495,"results":"75","hashOfConfig":"64"},{"size":279,"mtime":1607220770492,"results":"76","hashOfConfig":"64"},{"size":1088,"mtime":1607220770508,"results":"77","hashOfConfig":"64"},{"size":25022,"mtime":1616144863080,"results":"78","hashOfConfig":"64"},{"size":1965,"mtime":1616143291470,"results":"79","hashOfConfig":"64"},{"size":8333,"mtime":1607220770503,"results":"80","hashOfConfig":"64"},{"size":5588,"mtime":1608873579254,"results":"81","hashOfConfig":"64"},{"size":6972,"mtime":1612683381999,"results":"82","hashOfConfig":"64"},{"size":8039,"mtime":1608873579251,"results":"83","hashOfConfig":"64"},{"size":21820,"mtime":1609250206793,"results":"84","hashOfConfig":"64"},{"size":249,"mtime":1609304887015,"results":"85","hashOfConfig":"64"},{"size":2386,"mtime":1608873579253,"results":"86","hashOfConfig":"64"},{"size":1567,"mtime":1610327497495,"results":"87","hashOfConfig":"64"},{"size":13201,"mtime":1612489990492,"results":"88","hashOfConfig":"64"},{"size":3667,"mtime":1607220770507,"results":"89","hashOfConfig":"64"},{"size":2262,"mtime":1608873579252,"results":"90","hashOfConfig":"64"},{"size":4018,"mtime":1609995663108,"results":"91","hashOfConfig":"64"},{"size":4788,"mtime":1616144182222,"results":"92","hashOfConfig":"64"},{"size":633,"mtime":1611323525128,"results":"93","hashOfConfig":"64"},{"size":14843,"mtime":1612583908873,"results":"94","hashOfConfig":"64"},{"size":9975,"mtime":1616144136460,"results":"95","hashOfConfig":"64"},{"size":10130,"mtime":1612579037811,"results":"96","hashOfConfig":"64"},{"size":2455,"mtime":1607220770503,"results":"97","hashOfConfig":"64"},{"size":6193,"mtime":1616144182270,"results":"98","hashOfConfig":"64"},{"size":1720,"mtime":1612157529828,"results":"99","hashOfConfig":"64"},{"size":4580,"mtime":1612494953184,"results":"100","hashOfConfig":"64"},{"size":252,"mtime":1610101952444,"results":"101","hashOfConfig":"64"},{"size":6456,"mtime":1610367622427,"results":"102","hashOfConfig":"64"},{"size":1435,"mtime":1610243076578,"results":"103","hashOfConfig":"64"},{"size":9477,"mtime":1610367622515,"results":"104","hashOfConfig":"64"},{"size":5120,"mtime":1611320063757,"results":"105","hashOfConfig":"64"},{"size":3401,"mtime":1608873579252,"results":"106","hashOfConfig":"64"},{"size":5411,"mtime":1616145036971,"results":"107","hashOfConfig":"64"},{"size":918,"mtime":1612683359398,"results":"108","hashOfConfig":"64"},{"size":4237,"mtime":1612269403083,"results":"109","hashOfConfig":"64"},{"size":389,"mtime":1607220770492,"results":"110","hashOfConfig":"64"},{"size":1055,"mtime":1611641475088,"results":"111","hashOfConfig":"64"},{"size":1071,"mtime":1612573105224,"results":"112","hashOfConfig":"64"},{"size":647,"mtime":1612691633336,"results":"113","hashOfConfig":"64"},{"size":3505,"mtime":1612691915861,"results":"114","hashOfConfig":"64"},{"size":4108,"mtime":1607220770498,"results":"115","hashOfConfig":"64"},{"size":278,"mtime":1607220770492,"results":"116","hashOfConfig":"64"},{"size":1220,"mtime":1610462393535,"results":"117","hashOfConfig":"64"},{"size":10782,"mtime":1612574312404,"results":"118","hashOfConfig":"64"},{"size":293,"mtime":1611664159522,"results":"119","hashOfConfig":"64"},{"size":325,"mtime":1607220770501,"results":"120","hashOfConfig":"64"},{"size":958,"mtime":1607220770498,"results":"121","hashOfConfig":"64"},{"size":6836,"mtime":1612583681282,"results":"122","hashOfConfig":"64"},{"size":14222,"mtime":1612432013047,"results":"123","hashOfConfig":"64"},{"size":771,"mtime":1612180702546,"results":"124","hashOfConfig":"64"},{"size":1949,"mtime":1616144669508,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bzf6wz",{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"157"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/index.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/serviceWorker.ts",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/analytics.ts",["253"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/App.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/auth/AuthProvider.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/config.ts",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/auth/Register.tsx",["254","255","256"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/auth/Login.tsx",["257","258","259","260"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/auth/EmailVerification.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/auth/PasswordReset.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/auth/RequestPasswordReset.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/auth/PasswordResetRequested.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/Sandbox.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/storage.ts",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/api.ts",["261"],"import request from 'superagent';\nimport qs from 'query-string';\nimport {getAuthTokens} from './storage';\nimport {Conversation, User} from './types';\nimport * as queryString from 'query-string';\nimport {nanoid} from 'nanoid';\n\n// TODO: handle this on the server instead\nfunction now() {\n  const date = new Date();\n\n  return new Date(\n    date.getUTCFullYear(),\n    date.getUTCMonth(),\n    date.getUTCDate(),\n    date.getUTCHours(),\n    date.getUTCMinutes(),\n    date.getUTCSeconds()\n  );\n}\n\nexport type LoginParams = {\n  email: string;\n  password: string;\n};\n\nexport type RegisterParams = LoginParams & {\n  companyName?: string;\n  inviteToken?: string;\n  passwordConfirmation: string;\n};\n\nexport type ResetPasswordParams = {\n  password: string;\n  passwordConfirmation: string;\n};\n\nexport type WidgetSettingsParams = {\n  id?: string;\n  title: string;\n  subtitle: string;\n  color: string;\n  greeting?: string;\n  new_message_placeholder?: string;\n};\n\nexport type EventSubscriptionParams = {\n  webhook_url: string;\n};\n\nexport const getAccessToken = (): string | null => {\n  const tokens = getAuthTokens();\n\n  return (tokens && tokens.token) || null;\n};\n\nexport const getRefreshToken = (): string | null => {\n  const tokens = getAuthTokens();\n\n  return (tokens && tokens.renew_token) || null;\n};\n\nexport const me = async (token = getAccessToken()): Promise<User> => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/me`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const login = async ({email, password}: LoginParams) => {\n  return request\n    .post(`/api/session`)\n    .send({user: {email, password}})\n    .then((res) => res.body.data);\n};\n\nexport const logout = async () => {\n  return request.delete(`/api/session`).then((res) => res.body);\n};\n\nexport const register = async ({\n  companyName,\n  inviteToken,\n  email,\n  password,\n  passwordConfirmation,\n}: RegisterParams) => {\n  return request\n    .post(`/api/registration`)\n    .send({\n      user: {\n        company_name: companyName,\n        invite_token: inviteToken,\n        email,\n        password,\n        password_confirmation: passwordConfirmation,\n      },\n    })\n    .then((res) => res.body.data);\n};\n\nexport const renew = async (token = getRefreshToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/session/renew`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const verifyUserEmail = async (verificationToken: string) => {\n  return request\n    .post(`/api/verify_email`)\n    .send({token: verificationToken})\n    .then((res) => res.body.data);\n};\n\nexport const sendPasswordResetEmail = async (email: string) => {\n  return request\n    .post(`/api/reset_password`)\n    .send({email})\n    .then((res) => res.body.data);\n};\n\nexport const attemptPasswordReset = async (\n  passwordResetToken: string,\n  {password, passwordConfirmation}: ResetPasswordParams\n) => {\n  return request\n    .put(`/api/reset_password`)\n    .send({\n      password,\n      password_confirmation: passwordConfirmation,\n      token: passwordResetToken,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const createNewCustomer = async (accountId: string) => {\n  return request\n    .post(`/api/customers`)\n    .send({\n      customer: {\n        account_id: accountId,\n        first_seen: now(),\n        last_seen: now(),\n      },\n    }) // TODO: send over some metadata?\n    .then((res) => res.body.data);\n};\n\nexport const fetchCustomers = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/customers`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchCustomer = async (id: string, token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/customers/${id}`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const updateCustomer = async (\n  id: string,\n  updates: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/customers/${id}`)\n    .set('Authorization', token)\n    .send({\n      customer: updates,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const createNewConversation = async (\n  customerId: string,\n  params?: object,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/conversations`)\n    .set('Authorization', token)\n    .send({\n      conversation: {\n        customer_id: customerId,\n        ...params,\n      },\n    })\n    .then((res) => res.body.data);\n};\n\nexport const fetchAccountInfo = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/accounts/me`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const updateAccountInfo = async (\n  updates: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/accounts/me`)\n    .set('Authorization', token)\n    .send({\n      account: updates,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const fetchUserProfile = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/profile`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const updateUserProfile = async (\n  updates: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/profile`)\n    .set('Authorization', token)\n    .send({\n      user_profile: updates,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const fetchUserSettings = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get('/api/user_settings')\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const updateUserSettings = async (\n  updates: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put('/api/user_settings')\n    .set('Authorization', token)\n    .send({\n      user_settings: updates,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const fetchAllConversations = async (\n  token = getAccessToken()\n): Promise<Array<Conversation>> => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/conversations`)\n    .query({status: 'open'})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchMyConversations = async (\n  userId: number,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/conversations`)\n    .query({assignee_id: userId, status: 'open'})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchPriorityConversations = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/conversations`)\n    .query({priority: 'priority', status: 'open'})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchClosedConversations = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/conversations`)\n    .query({status: 'closed'})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchConversation = async (\n  id: string,\n  token = getAccessToken()\n): Promise<Conversation> => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/conversations/${id}`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const generateShareConversationToken = async (\n  conversationId: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/conversations/${conversationId}/share`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchSharedConversation = async (\n  id: string,\n  token: string\n): Promise<Conversation> => {\n  if (!token) {\n    throw new Error('Access denied!');\n  }\n\n  return request\n    .get(`/api/conversations/shared`)\n    .query({token, conversation_id: id})\n    .then((res) => res.body.data);\n};\n\nexport const updateConversation = async (\n  conversationId: string,\n  updates: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/conversations/${conversationId}`)\n    .set('Authorization', token)\n    .send(updates)\n    .then((res) => res.body.data);\n};\n\nexport const deleteConversation = async (\n  conversationId: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .delete(`/api/conversations/${conversationId}`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const createNewMessage = async (\n  conversationId: string,\n  message: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/messages`)\n    .set('Authorization', token)\n    .send({\n      message: {\n        conversation_id: conversationId,\n        sent_at: new Date().toISOString(),\n        ...message,\n      },\n    })\n    .then((res) => res.body.data);\n};\n\nexport const countMessages = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/messages/count`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchCustomerConversations = async (\n  customerId: string,\n  accountId: string\n) => {\n  return request\n    .get(`/api/conversations/customer`)\n    .query({customer_id: customerId, account_id: accountId})\n    .then((res) => res.body.data);\n};\n\nexport const generateUserInvitation = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/user_invitations`)\n    .send({user_invitation: {}})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchSlackAuthorization = async (\n  type = 'reply',\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/slack/authorization`)\n    .query({type})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchGmailAuthorization = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/gmail/authorization`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport type EmailParams = {\n  recipient: string;\n  subject: string;\n  message: string;\n};\n\nexport const sendGmailNotification = async (\n  {recipient, subject, message}: EmailParams,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/gmail/send`)\n    .send({recipient, subject, message})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchEventSubscriptions = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/event_subscriptions`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const verifyWebhookUrl = async (\n  url: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/event_subscriptions/verify`)\n    .set('Authorization', token)\n    .send({url})\n    .then((res) => res.body.data);\n};\n\nexport const createEventSubscription = async (\n  params: EventSubscriptionParams,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/event_subscriptions`)\n    .set('Authorization', token)\n    .send({\n      event_subscription: params,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const updateEventSubscription = async (\n  id: string,\n  updates: EventSubscriptionParams,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/event_subscriptions/${id}`)\n    .set('Authorization', token)\n    .send({\n      event_subscription: updates,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const deleteEventSubscription = async (\n  id: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .delete(`/api/event_subscriptions/${id}`)\n    .set('Authorization', token);\n};\n\nexport const authorizeSlackIntegration = async (\n  code: string,\n  type: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/slack/oauth`)\n    .query({code, type})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const authorizeGmailIntegration = async (\n  code: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/gmail/oauth`)\n    .query({code})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const updateWidgetSettings = async (\n  widgetSettingsParams: WidgetSettingsParams,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/widget_settings`)\n    .send({widget_settings: widgetSettingsParams})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchDefaultPaymentMethod = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/payment_methods`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchBillingInfo = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/billing`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const createSubscriptionPlan = async (\n  plan: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/billing`)\n    .send({plan})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const updateSubscriptionPlan = async (\n  plan: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/billing`)\n    .send({plan})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const createPaymentMethod = async (\n  paymentMethod: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/payment_methods`)\n    .send({payment_method: paymentMethod})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const disableAccountUser = async (\n  userId: number | string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/users/${userId}/disable`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const enableAccountUser = async (\n  userId: number | string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/users/${userId}/enable`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchCustomerNotes = async (\n  customerId: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/notes`)\n    .query({customer_id: customerId})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const createCustomerNote = async (\n  customerId: string,\n  body: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/notes`)\n    .set('Authorization', token)\n    .send({\n      note: {\n        body,\n        customer_id: customerId,\n      },\n    })\n    .then((res) => res.body.data);\n};\n\nexport const deleteCustomerNote = async (\n  noteId: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request.delete(`/api/notes/${noteId}`).set('Authorization', token);\n};\n\nexport const fetchAllTags = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/tags`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const createTag = async (name: string, token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/tags`)\n    .send({tag: {name}})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const addConversationTag = async (\n  conversationId: string,\n  tagId: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/conversations/${conversationId}/tags`)\n    .send({tag_id: tagId})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const removeConversationTag = async (\n  conversationId: string,\n  tagId: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .delete(`/api/conversations/${conversationId}/tags/${tagId}`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const addCustomerTag = async (\n  customerId: string,\n  tagId: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/customers/${customerId}/tags`)\n    .send({tag_id: tagId})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const removeCustomerTag = async (\n  customerId: string,\n  tagId: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .delete(`/api/customers/${customerId}/tags/${tagId}`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\ntype BrowserSessionFilters = {\n  sessionIds?: Array<string>;\n  customerId?: string;\n  isActive?: boolean;\n  limit?: number;\n};\n\nexport const fetchBrowserSessions = async (\n  {customerId, isActive, limit = 100, sessionIds = []}: BrowserSessionFilters,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/browser_sessions`)\n    .query(\n      qs.stringify(\n        {\n          ids: sessionIds,\n          customer_id: customerId,\n          active: isActive,\n          limit,\n        },\n        {arrayFormat: 'bracket'}\n      )\n    )\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const countBrowserSessions = async (\n  {customerId, isActive}: BrowserSessionFilters,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/browser_sessions/count`)\n    .query(\n      qs.stringify(\n        {\n          customer_id: customerId,\n          active: isActive,\n        },\n        {arrayFormat: 'bracket'}\n      )\n    )\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchBrowserSession = async (\n  id: string,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/browser_sessions/${id}`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\ntype ReportingFilters = {\n  from_date?: string | null;\n  to_date?: string | null;\n};\n\nexport const fetchReportingData = async (\n  filters = {} as ReportingFilters,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/reporting`)\n    .query(filters)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const createSchedulingLink = async (\n  scheduling_link: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/scheduling_links`)\n    .send({scheduling_link})\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const updateSchedulingLink = async (\n  eventTypeId: string,\n  updates: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/scheduling_links/${eventTypeId}`)\n    .set('Authorization', token)\n    .send({\n      scheduling_link: updates,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const createDemo = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/demos`)\n    .send({\n      demo: {\n        name: 'type1',\n        count: 1,\n      },\n    })\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchSchedulingLinks = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/scheduling_links/`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchSchedulingLinksBrief = async (user: string) => {\n  return request\n    .get(`/api/scheduling_links_brief/`)\n    .then((res) => res.body.data);\n};\n\nexport const createSchedule = async (schedule: any, token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .post(`/api/schedules/`)\n    .set('Authorization', token)\n    .send({\n      schedule\n    })\n    .then((res) => res.body.data);\n};\n\nexport const fetchSchedules = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/schedules/`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchScheduleById = async (user: string, schedule_id: string) => {\n  return request\n    .get(`/api/schedules`)\n    .query({schedule_id})\n    .then((res) => res.body.data);\n};\n\nexport const updateSchedule = async (\n  id: string,\n  updates: any,\n  token = getAccessToken()\n) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .put(`/api/schedules/${id}`)\n    .set('Authorization', token)\n    .send({\n      schedule: updates,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const fetchUserProfileBySlug = async (slug: string) => {\n  return request\n    .get(`/api/profile`)\n    .query({slug})\n    .then((res) => res.body.data);\n};\n\nexport const fetchSchedulingLinkByUrl = async (user: string, url: string) => {\n  return request\n    .get(`/api/event_type`)\n    .query({url})\n    .then((res) => res.body.data);\n};\n\nexport const createEvent = async (\n  event_type_id: string,\n  start_time: string,\n  guest_name: string\n) => {\n  return request\n    .post(`/api/events`)\n    .send({\n      event: {\n        guest_name: 'guest_1',\n        event_type_id,\n        start_time,\n      },\n    })\n    .then((res) => res.body.data);\n};\n\nexport const createScheduledEvent = async (\n  scheduling_link_id: string,\n  start_time: string,\n  guest_name: string\n) => {\n  return request\n    .post(`/api/scheduled_events`)\n    .send({\n      event: {\n        scheduling_link_id,\n        start_time,\n        guest_name,\n      },\n    })\n    .then((res) => res.body.data);\n};\n\nexport const fetchDatetimeSpotsByRange = async (\n  event_type_id: string,\n  start_time: string,\n  end_time: string\n) => {\n  return request\n    .get(`/api/booking/scheduling_links/${event_type_id}/calendar/range`)\n    .query({\n      start_time,\n      end_time,\n    })\n    .then((res) => res.body.data);\n};\n\nexport const fetchScheduledEvents = async (token = getAccessToken()) => {\n  if (!token) {\n    throw new Error('Invalid token!');\n  }\n\n  return request\n    .get(`/api/scheduled_events/`)\n    .set('Authorization', token)\n    .then((res) => res.body.data);\n};\n\nexport const fetchIntervals = async (\n  userSlug: string,\n  linkSlug: string,\n  from: string,\n  to: string\n) => {\n  const url = queryString.stringifyUrl({\n    url: `/api/links/${userSlug}/${linkSlug}/intervals`,\n    query: {\n      from,\n      to,\n    },\n  });\n  return request\n    .get(`/api/links/${userSlug}/${linkSlug}/intervals`)\n    .query({\n      from,\n      to,\n    })\n    .then((res) => res.body.data);\n};\n",["262","263"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/Dashboard.tsx",["264","265","266","267","268"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/demo/BotDemo.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/demo/Demo.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/ScheduledEvent.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/billing/PricingOverview.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/landing/LadingPage.tsx",["269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/book/Live.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/conversations/SharedConversation.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/book/Book.tsx",["290","291","292"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/booking/BookingPage.tsx",["293","294","295","296","297","298","299","300","301","302","303","304","305"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/logger.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/common.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/events/data.ts",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/SchedulingLinksBoard.tsx",["306","307","308","309","310","311","312","313","314"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/SchedulingLinkNew.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/SchedulingLink.tsx",["315","316","317","318","319","320"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/AppSettings.tsx",["321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/Availability.tsx",["341","342","343","344","345","346","347"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/icons.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/events/ScheduledEvents.tsx",["348","349","350","351","352","353","354","355","356","357"],"import React, {useEffect, useState} from 'react';\nimport {Switch, Route, Link, useLocation, Redirect} from 'react-router-dom';\nimport {DefaultButton} from '@fluentui/react';\nimport {useEvents} from '../EventsProvider';\nimport {days} from '../book/data';\nimport dayjs from 'dayjs';\nimport moment from 'moment';\nimport {SearchBoxSmallExample} from '../EventTypes';\nimport ScheduledEventsProvider, {\n  useScheduledEvents,\n} from '../../hooks/ScheduledEventsProvider';\nimport NavSidebar from '../NavSidebar';\nvar weekOfYear = require('dayjs/plugin/weekOfYear');\ndayjs.extend(weekOfYear);\n\nfunction EventCard() {\n  const [hovered, setHovered] = useState(false);\n  const [expanded, setExpanded] = useState(false);\n  return (\n    <div\n      className=\"border-primary border-solid border flex flex-row justify-between w-full h-24\"\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n    >\n      <div\n        className=\"my-2 p-4 flex flex-row justify-between\"\n        style={{width: 'calc(100% - 10px)'}}\n      >\n        <div className=\"w-1/2\">09:30 - 09:45</div>\n        <div className=\"w-1/2\">\n          <div>张三</div>\n          <div className=\"text-gray-500\">30 分钟约见</div>\n        </div>\n      </div>\n      <div className=\"h-full w-8\">\n        {hovered && (\n          <div className=\"cursor-pointer opacity-25 hover:opacity-100 h-full bg-red-300 gentle-flex\">\n            <i className=\"fas fa-expand-alt fa-sm\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction NextEventCard() {\n  const [hovered, setHovered] = useState(false);\n  return (\n    <div\n      className=\"border-red-300 border-solid border flex flex-row justify-between w-full h-24\"\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n    >\n      <div\n        className=\"my-2 p-4 flex flex-row justify-between\"\n        style={{width: 'calc(100% - 10px)'}}\n      >\n        <div className=\"w-1/2\">09:30 - 09:45</div>\n        <div className=\"w-1/2\">\n          <div>张三</div>\n          <div className=\"text-gray-500\">30 分钟约见</div>\n        </div>\n      </div>\n      <div className=\"h-full w-8\">\n        {hovered && (\n          <div className=\"cursor-pointer opacity-25 hover:opacity-100 h-full bg-red-300 gentle-flex\">\n            <i className=\"fas fa-expand-alt fa-sm\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction UpcomingScheduledEvents() {\n  const {scheduledEvents} = useScheduledEvents();\n  console.log('scheduledEvents', scheduledEvents);\n\n  return (\n    <div className=\"w-full flex flex-col\">\n      <ul>\n        <li className=\"px-6 py-3 border-b grid grid-cols-10 gap-4 hover:bg-gray-50 transition ease-in-out duration-150 text-sm\">\n          <div className=\"text-gray-700 col-span-2 lg:col-span-1\">\n            Thu, Feb 11\n          </div>\n          <div className=\"text-gray-700 col-span-4 lg:col-span-2\">\n            12:00 pm – 2:00 pm\n          </div>\n          <div className=\"col-span-4 lg:col-span-6 text-sm leading-5\">\n            <div className=\"pb-1 flex items-center\">\n              <div className=\"pr-2\">\n                <span className=\"inline-flex flex-shrink-0 items-center justify-center h-5 w-5  rounded-full text-white ring-2 ring-white bg-gray-500 select-none\">\n                  <span className=\"text-xxs font-medium leading-none\">YZ</span>\n                </span>\n              </div>\n              <a\n                href=\"/events/b3a6b143-5493-48d2-aefd-689570e22b5a\"\n                className=\"text-gray-900 font-bold mr-2 leading-5 hover:underline truncate transition ease-in-out duration-150\"\n              >\n                Chat with Yuanyuan\n              </a>\n            </div>\n            <div className=\"ml-7 text-gray-600 truncate\">\n              Yuanyuan Zhang and Yuanyuan Zhang\n            </div>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default function ScheduledEvents() {\n  const {pathname} = useLocation();\n\n  return (\n    <div className=\"w-full flex flex-row\">\n      <NavSidebar />\n\n      <ScheduledEventsProvider>\n        <div className=\"h-full w-full flex flex-col\">\n          <div className=\"Header bg-gray-100\">\n            <div className=\"flex flex-row\">\n              <div className=\"gentle-flex py-1 w-24\">\n                <div className=\"font-bold\">日程</div>\n              </div>\n\n              {[\n                {url: '/events/upcoming', name: '待完成'},\n                {url: '/events/past', name: '已完成'},\n                {url: '/events/canceled', name: '已取消'},\n                // {url: '/events/all', name: '全部'},\n              ].map(({url, name}) => {\n                return (\n                  <div className=\"px-2 cursor-pointer\" key={url}>\n                    {pathname === url ? (\n                      <div className=\"gentle-flex py-1 w-24\">\n                        <span>{name}</span>\n                      </div>\n                    ) : (\n                      <Link to={url}>\n                        <span className=\"gentle-flex w-24 py-1 opacity-25 hover:opacity-100\">\n                          {name}\n                        </span>\n                      </Link>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n            <div className=\"flex flex-row\">\n              <div className=\"gentle-flex py-1 w-24 opacity-25 hover:opacity-100 cursor-pointer\">\n                日历\n              </div>\n            </div>\n          </div>\n          <div className=\"h-full\">\n            <Switch>\n              <Route\n                path=\"/events/upcoming\"\n                component={UpcomingScheduledEvents}\n              />\n              <Route path=\"/events/past\" component={() => <div>past</div>} />\n              <Route\n                path=\"/events/canceled\"\n                component={() => <div>canceled</div>}\n              />\n              <Route path=\"/events/all\" component={() => <div>all</div>} />\n              <Route path=\"/events\">\n                <Redirect to=\"/events/upcoming\" />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </ScheduledEventsProvider>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/event-utils.tsx",["358","359","360"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/booking/BookingProvider.tsx",["361","362","363","364","365"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/book/BookInviteePage.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/book/BookContactsPage.tsx",["366","367","368","369"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/book/BookUserPage.tsx",["370"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/book/BookTypePage.tsx",["371","372"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/book/BookProvider.tsx",["373","374","375","376"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/conversations/ConversationMessages.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/hooks/AppDataProvider.tsx",["377","378","379","380","381","382","383","384","385"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/hooks/ScheduledEventProvider.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/utils.ts",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/DatePicker.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/constants.ts",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/SchedulingLinkCard.tsx",["386","387","388","389","390"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/hooks/ScheduledEventsProvider.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/api-hooks.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/conversations/ChatMessage.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/Spinner.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/book/TimeOption.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/SchedulingLinkSettings.tsx",["391"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/hooks/utils.ts",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/conversations/support.ts",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components/conversations/ChatMessageBox.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/hooks/SchedulingLinkProvider.tsx",["392","393"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/Calendar.tsx",["394","395","396","397","398","399"],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/events/EventLocationSelect.tsx",[],"/Users/guanghui/guanghui.io/dev/booking/papercups/assets/src/components-new/NavSidebar.tsx",["400"],{"ruleId":"401","severity":1,"message":"402","line":48,"column":1,"nodeType":"403","endLine":51,"endColumn":3},{"ruleId":"404","severity":1,"message":"405","line":32,"column":7,"nodeType":"406","messageId":"407","endLine":32,"endColumn":15},{"ruleId":"404","severity":1,"message":"408","line":255,"column":20,"nodeType":"406","messageId":"407","endLine":255,"endColumn":31},{"ruleId":"404","severity":1,"message":"409","line":257,"column":10,"nodeType":"406","messageId":"407","endLine":257,"endColumn":17},{"ruleId":"404","severity":1,"message":"410","line":12,"column":3,"nodeType":"406","messageId":"407","endLine":12,"endColumn":16},{"ruleId":"404","severity":1,"message":"411","line":29,"column":7,"nodeType":"406","messageId":"407","endLine":29,"endColumn":12},{"ruleId":"404","severity":1,"message":"408","line":148,"column":20,"nodeType":"406","messageId":"407","endLine":148,"endColumn":31},{"ruleId":"404","severity":1,"message":"409","line":150,"column":10,"nodeType":"406","messageId":"407","endLine":150,"endColumn":17},{"ruleId":"404","severity":1,"message":"412","line":1173,"column":9,"nodeType":"406","messageId":"407","endLine":1173,"endColumn":12},{"ruleId":"413","replacedBy":"414"},{"ruleId":"415","replacedBy":"416"},{"ruleId":"404","severity":1,"message":"417","line":1,"column":16,"nodeType":"406","messageId":"407","endLine":1,"endColumn":25},{"ruleId":"404","severity":1,"message":"418","line":2,"column":8,"nodeType":"406","messageId":"407","endLine":2,"endColumn":14},{"ruleId":"404","severity":1,"message":"419","line":4,"column":3,"nodeType":"406","messageId":"407","endLine":4,"endColumn":14},{"ruleId":"404","severity":1,"message":"420","line":8,"column":3,"nodeType":"406","messageId":"407","endLine":8,"endColumn":7},{"ruleId":"404","severity":1,"message":"421","line":10,"column":20,"nodeType":"406","messageId":"407","endLine":10,"endColumn":26},{"ruleId":"404","severity":1,"message":"417","line":1,"column":16,"nodeType":"406","messageId":"407","endLine":1,"endColumn":25},{"ruleId":"404","severity":1,"message":"422","line":1,"column":27,"nodeType":"406","messageId":"407","endLine":1,"endColumn":35},{"ruleId":"404","severity":1,"message":"419","line":3,"column":3,"nodeType":"406","messageId":"407","endLine":3,"endColumn":14},{"ruleId":"404","severity":1,"message":"423","line":4,"column":3,"nodeType":"406","messageId":"407","endLine":4,"endColumn":9},{"ruleId":"404","severity":1,"message":"424","line":5,"column":3,"nodeType":"406","messageId":"407","endLine":5,"endColumn":11},{"ruleId":"404","severity":1,"message":"425","line":6,"column":3,"nodeType":"406","messageId":"407","endLine":6,"endColumn":8},{"ruleId":"404","severity":1,"message":"426","line":8,"column":3,"nodeType":"406","messageId":"407","endLine":8,"endColumn":22},{"ruleId":"427","severity":1,"message":"428","line":16,"column":11,"nodeType":"429","endLine":16,"endColumn":94},{"ruleId":"427","severity":1,"message":"428","line":32,"column":13,"nodeType":"429","endLine":32,"endColumn":68},{"ruleId":"427","severity":1,"message":"428","line":33,"column":13,"nodeType":"429","endLine":33,"endColumn":68},{"ruleId":"427","severity":1,"message":"428","line":34,"column":13,"nodeType":"429","endLine":34,"endColumn":68},{"ruleId":"427","severity":1,"message":"428","line":35,"column":13,"nodeType":"429","endLine":35,"endColumn":68},{"ruleId":"427","severity":1,"message":"428","line":36,"column":13,"nodeType":"429","endLine":36,"endColumn":68},{"ruleId":"427","severity":1,"message":"428","line":256,"column":17,"nodeType":"429","endLine":256,"endColumn":76},{"ruleId":"427","severity":1,"message":"428","line":298,"column":17,"nodeType":"429","endLine":298,"endColumn":76},{"ruleId":"427","severity":1,"message":"428","line":339,"column":17,"nodeType":"429","endLine":339,"endColumn":76},{"ruleId":"427","severity":1,"message":"428","line":407,"column":11,"nodeType":"429","endLine":407,"endColumn":113},{"ruleId":"427","severity":1,"message":"428","line":434,"column":13,"nodeType":"429","endLine":434,"endColumn":42},{"ruleId":"427","severity":1,"message":"428","line":446,"column":13,"nodeType":"429","endLine":446,"endColumn":47},{"ruleId":"427","severity":1,"message":"428","line":458,"column":13,"nodeType":"429","endLine":458,"endColumn":47},{"ruleId":"427","severity":1,"message":"428","line":472,"column":13,"nodeType":"429","endLine":472,"endColumn":47},{"ruleId":"404","severity":1,"message":"417","line":1,"column":16,"nodeType":"406","messageId":"407","endLine":1,"endColumn":25},{"ruleId":"404","severity":1,"message":"422","line":1,"column":27,"nodeType":"406","messageId":"407","endLine":1,"endColumn":35},{"ruleId":"404","severity":1,"message":"430","line":3,"column":23,"nodeType":"406","messageId":"407","endLine":3,"endColumn":30},{"ruleId":"404","severity":1,"message":"431","line":1,"column":36,"nodeType":"406","messageId":"407","endLine":1,"endColumn":45},{"ruleId":"404","severity":1,"message":"432","line":7,"column":3,"nodeType":"406","messageId":"407","endLine":7,"endColumn":16},{"ruleId":"404","severity":1,"message":"433","line":17,"column":3,"nodeType":"406","messageId":"407","endLine":17,"endColumn":21},{"ruleId":"404","severity":1,"message":"434","line":18,"column":3,"nodeType":"406","messageId":"407","endLine":18,"endColumn":17},{"ruleId":"404","severity":1,"message":"435","line":22,"column":24,"nodeType":"406","messageId":"407","endLine":22,"endColumn":28},{"ruleId":"404","severity":1,"message":"436","line":25,"column":9,"nodeType":"406","messageId":"407","endLine":25,"endColumn":27},{"ruleId":"404","severity":1,"message":"437","line":25,"column":29,"nodeType":"406","messageId":"407","endLine":25,"endColumn":43},{"ruleId":"404","severity":1,"message":"438","line":27,"column":8,"nodeType":"406","messageId":"407","endLine":27,"endColumn":9},{"ruleId":"404","severity":1,"message":"439","line":103,"column":5,"nodeType":"406","messageId":"407","endLine":103,"endColumn":9},{"ruleId":"404","severity":1,"message":"440","line":104,"column":5,"nodeType":"406","messageId":"407","endLine":104,"endColumn":17},{"ruleId":"404","severity":1,"message":"441","line":107,"column":5,"nodeType":"406","messageId":"407","endLine":107,"endColumn":17},{"ruleId":"404","severity":1,"message":"442","line":109,"column":5,"nodeType":"406","messageId":"407","endLine":109,"endColumn":15},{"ruleId":"404","severity":1,"message":"443","line":293,"column":9,"nodeType":"406","messageId":"407","endLine":293,"endColumn":20},{"ruleId":"404","severity":1,"message":"417","line":1,"column":16,"nodeType":"406","messageId":"407","endLine":1,"endColumn":25},{"ruleId":"404","severity":1,"message":"410","line":5,"column":3,"nodeType":"406","messageId":"407","endLine":5,"endColumn":16},{"ruleId":"404","severity":1,"message":"444","line":6,"column":3,"nodeType":"406","messageId":"407","endLine":6,"endColumn":16},{"ruleId":"404","severity":1,"message":"445","line":9,"column":8,"nodeType":"406","messageId":"407","endLine":9,"endColumn":21},{"ruleId":"404","severity":1,"message":"420","line":11,"column":9,"nodeType":"406","messageId":"407","endLine":11,"endColumn":13},{"ruleId":"404","severity":1,"message":"419","line":11,"column":15,"nodeType":"406","messageId":"407","endLine":11,"endColumn":26},{"ruleId":"404","severity":1,"message":"446","line":12,"column":13,"nodeType":"406","messageId":"407","endLine":12,"endColumn":16},{"ruleId":"404","severity":1,"message":"447","line":13,"column":9,"nodeType":"406","messageId":"407","endLine":13,"endColumn":16},{"ruleId":"404","severity":1,"message":"448","line":43,"column":5,"nodeType":"406","messageId":"407","endLine":43,"endColumn":24},{"ruleId":"404","severity":1,"message":"449","line":9,"column":8,"nodeType":"406","messageId":"407","endLine":9,"endColumn":15},{"ruleId":"404","severity":1,"message":"450","line":19,"column":11,"nodeType":"406","messageId":"407","endLine":19,"endColumn":20},{"ruleId":"404","severity":1,"message":"451","line":21,"column":3,"nodeType":"406","messageId":"407","endLine":21,"endColumn":11},{"ruleId":"404","severity":1,"message":"452","line":214,"column":5,"nodeType":"406","messageId":"407","endLine":214,"endColumn":14},{"ruleId":"453","severity":1,"message":"454","line":276,"column":37,"nodeType":"455","messageId":"456","endLine":276,"endColumn":39},{"ruleId":"404","severity":1,"message":"457","line":425,"column":10,"nodeType":"406","messageId":"407","endLine":425,"endColumn":25},{"ruleId":"404","severity":1,"message":"436","line":6,"column":3,"nodeType":"406","messageId":"407","endLine":6,"endColumn":21},{"ruleId":"404","severity":1,"message":"458","line":10,"column":8,"nodeType":"406","messageId":"407","endLine":10,"endColumn":13},{"ruleId":"404","severity":1,"message":"459","line":224,"column":10,"nodeType":"406","messageId":"407","endLine":224,"endColumn":24},{"ruleId":"404","severity":1,"message":"460","line":225,"column":10,"nodeType":"406","messageId":"407","endLine":225,"endColumn":17},{"ruleId":"404","severity":1,"message":"461","line":225,"column":19,"nodeType":"406","messageId":"407","endLine":225,"endColumn":27},{"ruleId":"404","severity":1,"message":"462","line":225,"column":29,"nodeType":"406","messageId":"407","endLine":225,"endColumn":46},{"ruleId":"404","severity":1,"message":"463","line":225,"column":48,"nodeType":"406","messageId":"407","endLine":225,"endColumn":58},{"ruleId":"404","severity":1,"message":"464","line":227,"column":10,"nodeType":"406","messageId":"407","endLine":227,"endColumn":17},{"ruleId":"404","severity":1,"message":"465","line":227,"column":19,"nodeType":"406","messageId":"407","endLine":227,"endColumn":29},{"ruleId":"404","severity":1,"message":"461","line":231,"column":19,"nodeType":"406","messageId":"407","endLine":231,"endColumn":27},{"ruleId":"404","severity":1,"message":"462","line":231,"column":29,"nodeType":"406","messageId":"407","endLine":231,"endColumn":46},{"ruleId":"404","severity":1,"message":"463","line":231,"column":48,"nodeType":"406","messageId":"407","endLine":231,"endColumn":58},{"ruleId":"404","severity":1,"message":"464","line":233,"column":10,"nodeType":"406","messageId":"407","endLine":233,"endColumn":17},{"ruleId":"404","severity":1,"message":"465","line":233,"column":19,"nodeType":"406","messageId":"407","endLine":233,"endColumn":29},{"ruleId":"404","severity":1,"message":"461","line":244,"column":19,"nodeType":"406","messageId":"407","endLine":244,"endColumn":27},{"ruleId":"404","severity":1,"message":"463","line":244,"column":48,"nodeType":"406","messageId":"407","endLine":244,"endColumn":58},{"ruleId":"404","severity":1,"message":"460","line":263,"column":10,"nodeType":"406","messageId":"407","endLine":263,"endColumn":17},{"ruleId":"404","severity":1,"message":"461","line":263,"column":19,"nodeType":"406","messageId":"407","endLine":263,"endColumn":27},{"ruleId":"404","severity":1,"message":"462","line":263,"column":29,"nodeType":"406","messageId":"407","endLine":263,"endColumn":46},{"ruleId":"404","severity":1,"message":"463","line":263,"column":48,"nodeType":"406","messageId":"407","endLine":263,"endColumn":58},{"ruleId":"404","severity":1,"message":"466","line":4,"column":8,"nodeType":"406","messageId":"407","endLine":4,"endColumn":17},{"ruleId":"404","severity":1,"message":"434","line":15,"column":3,"nodeType":"406","messageId":"407","endLine":15,"endColumn":17},{"ruleId":"404","severity":1,"message":"467","line":18,"column":17,"nodeType":"406","messageId":"407","endLine":18,"endColumn":25},{"ruleId":"404","severity":1,"message":"468","line":18,"column":27,"nodeType":"406","messageId":"407","endLine":18,"endColumn":32},{"ruleId":"404","severity":1,"message":"469","line":28,"column":7,"nodeType":"406","messageId":"407","endLine":28,"endColumn":18},{"ruleId":"470","severity":1,"message":"471","line":142,"column":44,"nodeType":"455","messageId":"472","endLine":148,"endColumn":8},{"ruleId":"473","severity":1,"message":"474","line":183,"column":57,"nodeType":"475","messageId":"476","endLine":183,"endColumn":59},{"ruleId":"404","severity":1,"message":"417","line":1,"column":16,"nodeType":"406","messageId":"407","endLine":1,"endColumn":25},{"ruleId":"404","severity":1,"message":"410","line":3,"column":9,"nodeType":"406","messageId":"407","endLine":3,"endColumn":22},{"ruleId":"404","severity":1,"message":"477","line":4,"column":9,"nodeType":"406","messageId":"407","endLine":4,"endColumn":18},{"ruleId":"404","severity":1,"message":"478","line":5,"column":9,"nodeType":"406","messageId":"407","endLine":5,"endColumn":13},{"ruleId":"404","severity":1,"message":"479","line":7,"column":8,"nodeType":"406","messageId":"407","endLine":7,"endColumn":14},{"ruleId":"404","severity":1,"message":"480","line":8,"column":9,"nodeType":"406","messageId":"407","endLine":8,"endColumn":30},{"ruleId":"404","severity":1,"message":"481","line":16,"column":10,"nodeType":"406","messageId":"407","endLine":16,"endColumn":19},{"ruleId":"404","severity":1,"message":"482","line":18,"column":10,"nodeType":"406","messageId":"407","endLine":18,"endColumn":18},{"ruleId":"404","severity":1,"message":"483","line":18,"column":20,"nodeType":"406","messageId":"407","endLine":18,"endColumn":31},{"ruleId":"404","severity":1,"message":"484","line":46,"column":10,"nodeType":"406","messageId":"407","endLine":46,"endColumn":23},{"ruleId":"404","severity":1,"message":"485","line":5,"column":5,"nodeType":"406","messageId":"407","endLine":5,"endColumn":13},{"ruleId":"486","severity":1,"message":"487","line":10,"column":25,"nodeType":"475","messageId":"488","endLine":10,"endColumn":26},{"ruleId":"486","severity":1,"message":"487","line":11,"column":23,"nodeType":"475","messageId":"488","endLine":11,"endColumn":24},{"ruleId":"404","severity":1,"message":"447","line":2,"column":9,"nodeType":"406","messageId":"407","endLine":2,"endColumn":16},{"ruleId":"404","severity":1,"message":"489","line":4,"column":3,"nodeType":"406","messageId":"407","endLine":4,"endColumn":15},{"ruleId":"404","severity":1,"message":"490","line":5,"column":3,"nodeType":"406","messageId":"407","endLine":5,"endColumn":10},{"ruleId":"404","severity":1,"message":"491","line":10,"column":9,"nodeType":"406","messageId":"407","endLine":10,"endColumn":26},{"ruleId":"404","severity":1,"message":"492","line":11,"column":16,"nodeType":"406","messageId":"407","endLine":11,"endColumn":21},{"ruleId":"404","severity":1,"message":"493","line":20,"column":10,"nodeType":"406","messageId":"407","endLine":20,"endColumn":15},{"ruleId":"404","severity":1,"message":"409","line":21,"column":10,"nodeType":"406","messageId":"407","endLine":21,"endColumn":17},{"ruleId":"404","severity":1,"message":"494","line":25,"column":23,"nodeType":"406","messageId":"407","endLine":25,"endColumn":35},{"ruleId":"495","severity":1,"message":"496","line":129,"column":6,"nodeType":"497","endLine":129,"endColumn":8,"suggestions":"498"},{"ruleId":"495","severity":1,"message":"499","line":21,"column":6,"nodeType":"497","endLine":21,"endColumn":8,"suggestions":"500"},{"ruleId":"495","severity":1,"message":"501","line":187,"column":6,"nodeType":"497","endLine":187,"endColumn":8,"suggestions":"502"},{"ruleId":"495","severity":1,"message":"503","line":193,"column":6,"nodeType":"497","endLine":193,"endColumn":32,"suggestions":"504"},{"ruleId":"404","severity":1,"message":"505","line":2,"column":9,"nodeType":"406","messageId":"407","endLine":2,"endColumn":19},{"ruleId":"404","severity":1,"message":"419","line":2,"column":21,"nodeType":"406","messageId":"407","endLine":2,"endColumn":32},{"ruleId":"506","severity":1,"message":"507","line":9,"column":3,"nodeType":"508","messageId":"509","endLine":9,"endColumn":57,"fix":"510"},{"ruleId":"404","severity":1,"message":"478","line":12,"column":9,"nodeType":"406","messageId":"407","endLine":12,"endColumn":13},{"ruleId":"404","severity":1,"message":"417","line":1,"column":28,"nodeType":"406","messageId":"407","endLine":1,"endColumn":37},{"ruleId":"404","severity":1,"message":"511","line":3,"column":8,"nodeType":"406","messageId":"407","endLine":3,"endColumn":14},{"ruleId":"404","severity":1,"message":"512","line":5,"column":9,"nodeType":"406","messageId":"407","endLine":5,"endColumn":23},{"ruleId":"404","severity":1,"message":"513","line":6,"column":9,"nodeType":"406","messageId":"407","endLine":6,"endColumn":23},{"ruleId":"404","severity":1,"message":"447","line":7,"column":9,"nodeType":"406","messageId":"407","endLine":7,"endColumn":16},{"ruleId":"404","severity":1,"message":"491","line":14,"column":9,"nodeType":"406","messageId":"407","endLine":14,"endColumn":26},{"ruleId":"404","severity":1,"message":"514","line":127,"column":9,"nodeType":"406","messageId":"407","endLine":127,"endColumn":28},{"ruleId":"404","severity":1,"message":"515","line":135,"column":9,"nodeType":"406","messageId":"407","endLine":135,"endColumn":32},{"ruleId":"404","severity":1,"message":"516","line":184,"column":9,"nodeType":"406","messageId":"407","endLine":184,"endColumn":23},{"ruleId":"404","severity":1,"message":"417","line":1,"column":16,"nodeType":"406","messageId":"407","endLine":1,"endColumn":25},{"ruleId":"404","severity":1,"message":"517","line":4,"column":3,"nodeType":"406","messageId":"407","endLine":4,"endColumn":7},{"ruleId":"404","severity":1,"message":"518","line":5,"column":3,"nodeType":"406","messageId":"407","endLine":5,"endColumn":14},{"ruleId":"404","severity":1,"message":"519","line":6,"column":3,"nodeType":"406","messageId":"407","endLine":6,"endColumn":21},{"ruleId":"404","severity":1,"message":"520","line":15,"column":9,"nodeType":"406","messageId":"407","endLine":15,"endColumn":52},{"ruleId":"404","severity":1,"message":"521","line":26,"column":10,"nodeType":"406","messageId":"407","endLine":26,"endColumn":32},{"ruleId":"404","severity":1,"message":"511","line":2,"column":8,"nodeType":"406","messageId":"407","endLine":2,"endColumn":14},{"ruleId":"495","severity":1,"message":"522","line":81,"column":6,"nodeType":"497","endLine":81,"endColumn":22,"suggestions":"523"},{"ruleId":"404","severity":1,"message":"524","line":182,"column":9,"nodeType":"406","messageId":"407","endLine":182,"endColumn":29},{"ruleId":"404","severity":1,"message":"525","line":216,"column":9,"nodeType":"406","messageId":"407","endLine":216,"endColumn":14},{"ruleId":"404","severity":1,"message":"443","line":217,"column":9,"nodeType":"406","messageId":"407","endLine":217,"endColumn":20},{"ruleId":"404","severity":1,"message":"526","line":239,"column":9,"nodeType":"406","messageId":"407","endLine":239,"endColumn":25},{"ruleId":"404","severity":1,"message":"527","line":245,"column":9,"nodeType":"406","messageId":"407","endLine":245,"endColumn":21},{"ruleId":"470","severity":1,"message":"471","line":314,"column":44,"nodeType":"455","messageId":"472","endLine":320,"endColumn":8},{"ruleId":"404","severity":1,"message":"446","line":3,"column":13,"nodeType":"406","messageId":"407","endLine":3,"endColumn":16},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'Register' is defined but never used.","Identifier","unusedVar","'setRedirect' is assigned a value but never used.","'loading' is assigned a value but never used.","'DefaultButton' is defined but never used.","'Login' is defined but never used.","'url' is assigned a value but never used.","no-native-reassign",["528"],"no-negated-in-lhs",["529"],"'useEffect' is defined but never used.","'Header' is defined but never used.","'useLocation' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'useState' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","'RouteComponentProps' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useBook' is defined but never used.","'RefObject' is defined but never used.","'DateSelectArg' is defined but never used.","'eliminateIntervals' is defined but never used.","'INITIAL_EVENTS' is defined but never used.","'Text' is defined but never used.","'convertMinToHrsMin' is defined but never used.","'dayConvertToEn' is defined but never used.","'_' is defined but never used.","'user' is assigned a value but never used.","'timeSelected' is assigned a value but never used.","'setEventTime' is assigned a value but never used.","'setEventId' is assigned a value but never used.","'calendarApi' is assigned a value but never used.","'PrimaryButton' is defined but never used.","'EventTypeCard' is defined but never used.","'API' is defined but never used.","'useAuth' is defined but never used.","'availabilityPresets' is assigned a value but never used.","'WithTip' is defined but never used.","'LinkPlain' is defined but never used.","'Textarea' is defined but never used.","'organizer' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'CalendarSection' is defined but never used.","'dayjs' is defined but never used.","'LinkUrlSection' is defined but never used.","'profile' is assigned a value but never used.","'settings' is assigned a value but never used.","'updateDisplayName' is assigned a value but never used.","'updateSlug' is assigned a value but never used.","'editing' is assigned a value but never used.","'setEditing' is assigned a value but never used.","'TextField' is defined but never used.","'Checkbox' is defined but never used.","'Input' is defined but never used.","'sliceOfTime' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'date', 'date'.","unsafeRefs","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEvents' is defined but never used.","'days' is defined but never used.","'moment' is defined but never used.","'SearchBoxSmallExample' is defined but never used.","'EventCard' is defined but never used.","'expanded' is assigned a value but never used.","'setExpanded' is assigned a value but never used.","'NextEventCard' is defined but never used.","'todayStr' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'useIntervals' is defined but never used.","'useLink' is defined but never used.","'useSchedulingLink' is defined but never used.","'Dayjs' is defined but never used.","'error' is assigned a value but never used.","'selectedDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'date', 'datetime', 'fetchEventTypeByUrl', 'fetchSchedule', 'fetchUserProfile', 'month', 'type', 'updateSelectedDate', 'updateSelectedMonth', 'updateSelectedTime', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["530"],"React Hook useEffect has missing dependencies: 'eventTypes', 'fetchEventTypes', 'fetchUserProfile', 'user', and 'userProfileBySlug'. Either include them or remove the dependency array.",["531"],"React Hook useEffect has missing dependencies: 'date', 'fetchEventTypeByUrl', 'fetchSchedule', 'fetchUserProfile', 'month', 'type', 'updateSelectedDate', 'updateSelectedMonth', and 'user'. Either include them or remove the dependency array.",["532"],"React Hook useEffect has a missing dependency: 'handleDatetimeSpotsFetch'. Either include it or remove the dependency array.",["533"],"'useHistory' is defined but never used.","no-useless-rename","Import fetchDatetimeSpotsByRange unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"534","text":"535"},"'useSWR' is defined but never used.","'getAccessToken' is defined but never used.","'fetchWithToken' is defined but never used.","'_updateUserSettings' is assigned a value but never used.","'_revalidateUserSettings' is assigned a value but never used.","'removeSchedule' is assigned a value but never used.","'Card' is defined but never used.","'ICardTokens' is defined but never used.","'ICardSectionStyles' is defined but never used.","'footerCardSectionTokens' is assigned a value but never used.","'CalendarBindingSection' is defined but never used.","React Hook useEffect has a missing dependency: 'getAvailabilityPresetsById'. Either include it or remove the dependency array.",["536"],"'handleWeekendsToggle' is assigned a value but never used.","'title' is assigned a value but never used.","'handleEventClick' is assigned a value but never used.","'handleEvents' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"537","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},[290,344],"fetchDatetimeSpotsByRange",{"desc":"545","fix":"546"},"Update the dependencies array to be: [date, datetime, fetchEventTypeByUrl, fetchSchedule, fetchUserProfile, month, type, updateSelectedDate, updateSelectedMonth, updateSelectedTime, user]",{"range":"547","text":"548"},"Update the dependencies array to be: [eventTypes, fetchEventTypes, fetchUserProfile, user, userProfileBySlug]",{"range":"549","text":"550"},"Update the dependencies array to be: [date, fetchEventTypeByUrl, fetchSchedule, fetchUserProfile, month, type, updateSelectedDate, updateSelectedMonth, user]",{"range":"551","text":"552"},"Update the dependencies array to be: [eventType, handleDatetimeSpotsFetch, selectedMonth]",{"range":"553","text":"554"},"Update the dependencies array to be: [settings, link, getAvailabilityPresetsById]",{"range":"555","text":"556"},[3394,3396],"[date, datetime, fetchEventTypeByUrl, fetchSchedule, fetchUserProfile, month, type, updateSelectedDate, updateSelectedMonth, updateSelectedTime, user]",[487,489],"[eventTypes, fetchEventTypes, fetchUserProfile, user, userProfileBySlug]",[4869,4871],"[date, fetchEventTypeByUrl, fetchSchedule, fetchUserProfile, month, type, updateSelectedDate, updateSelectedMonth, user]",[5005,5031],"[eventType, handleDatetimeSpotsFetch, selectedMonth]",[2610,2626],"[settings, link, getAvailabilityPresetsById]"]