[{"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/index.tsx":"1","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/serviceWorker.ts":"2","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/App.tsx":"3","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/config.ts":"4","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/storage.ts":"5","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/logger.tsx":"6","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/hooks/ScheduledEventProvider.tsx":"7","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/hooks/AppDataProvider.tsx":"8","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/hooks/ScheduledEventsProvider.tsx":"9","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/hooks/SchedulingLinkProvider.tsx":"10","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/hooks/utils.ts":"11","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/const.ts":"12","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/auth/AuthProvider.tsx":"13","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/auth/Login.tsx":"14","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/auth/Register.tsx":"15","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/auth/PasswordReset.tsx":"16","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/auth/EmailVerification.tsx":"17","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/auth/RequestPasswordReset.tsx":"18","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/auth/PasswordResetRequested.tsx":"19","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/Dashboard.tsx":"20","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/booking/BookingPage.tsx":"21","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/landing/LandingPage.tsx":"22","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/AppSettings.tsx":"23","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/event-utils.tsx":"24","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/booking/BookingProvider.tsx":"25","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/constants.ts":"26","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/common/EventLocationSelect.tsx":"27","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/events/ScheduledEvent.tsx":"28","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/events/ScheduledEvents.tsx":"29","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/links/SchedulingLinksBoard.tsx":"30","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/links/SchedulingLink.tsx":"31","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/availability/Availability.tsx":"32","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/common/NavSidebar.tsx":"33","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/links/SchedulingLinkSettings.tsx":"34","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/common/Calendar.tsx":"35","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/api/api.ts":"36","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/utils/utils.ts":"37","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/hooks/api-hooks.tsx":"38"},{"size":534,"mtime":1620186404569,"results":"39","hashOfConfig":"40"},{"size":5296,"mtime":1607220770508,"results":"41","hashOfConfig":"40"},{"size":2915,"mtime":1620186105100,"results":"42","hashOfConfig":"40"},{"size":898,"mtime":1608873579256,"results":"43","hashOfConfig":"40"},{"size":1088,"mtime":1607220770508,"results":"44","hashOfConfig":"40"},{"size":3579,"mtime":1619934884536,"results":"45","hashOfConfig":"40"},{"size":917,"mtime":1620186224519,"results":"46","hashOfConfig":"40"},{"size":5211,"mtime":1620186224523,"results":"47","hashOfConfig":"40"},{"size":646,"mtime":1620186224556,"results":"48","hashOfConfig":"40"},{"size":6838,"mtime":1620186224563,"results":"49","hashOfConfig":"40"},{"size":293,"mtime":1611664159522,"results":"50","hashOfConfig":"40"},{"size":122,"mtime":1618642705075,"results":"51","hashOfConfig":"40"},{"size":3607,"mtime":1620186224527,"results":"52","hashOfConfig":"40"},{"size":4123,"mtime":1619934631490,"results":"53","hashOfConfig":"40"},{"size":5768,"mtime":1619934979468,"results":"54","hashOfConfig":"40"},{"size":294,"mtime":1619934979399,"results":"55","hashOfConfig":"40"},{"size":961,"mtime":1620186224516,"results":"56","hashOfConfig":"40"},{"size":149,"mtime":1619934979481,"results":"57","hashOfConfig":"40"},{"size":163,"mtime":1619934979409,"results":"58","hashOfConfig":"40"},{"size":1771,"mtime":1619936298557,"results":"59","hashOfConfig":"40"},{"size":13198,"mtime":1620186754145,"results":"60","hashOfConfig":"40"},{"size":21821,"mtime":1619934631539,"results":"61","hashOfConfig":"40"},{"size":9988,"mtime":1620186224570,"results":"62","hashOfConfig":"40"},{"size":1720,"mtime":1612157529828,"results":"63","hashOfConfig":"40"},{"size":4576,"mtime":1620186224535,"results":"64","hashOfConfig":"40"},{"size":1358,"mtime":1620186754141,"results":"65","hashOfConfig":"40"},{"size":777,"mtime":1620186754138,"results":"66","hashOfConfig":"40"},{"size":6975,"mtime":1619936298528,"results":"67","hashOfConfig":"40"},{"size":4179,"mtime":1619936298532,"results":"68","hashOfConfig":"40"},{"size":2093,"mtime":1619936298539,"results":"69","hashOfConfig":"40"},{"size":14758,"mtime":1619936513491,"results":"70","hashOfConfig":"40"},{"size":10082,"mtime":1620186224553,"results":"71","hashOfConfig":"40"},{"size":1953,"mtime":1619936298553,"results":"72","hashOfConfig":"40"},{"size":10785,"mtime":1619936298543,"results":"73","hashOfConfig":"40"},{"size":14235,"mtime":1620186224532,"results":"74","hashOfConfig":"40"},{"size":25087,"mtime":1620186224548,"results":"75","hashOfConfig":"40"},{"size":4237,"mtime":1612269403083,"results":"76","hashOfConfig":"40"},{"size":3460,"mtime":1620186224566,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wwb8a3",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/index.tsx",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/serviceWorker.ts",[],["164","165"],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/App.tsx",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/config.ts",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/storage.ts",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/logger.tsx",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/hooks/ScheduledEventProvider.tsx",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/hooks/AppDataProvider.tsx",["166","167","168","169","170"],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/hooks/ScheduledEventsProvider.tsx",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/hooks/SchedulingLinkProvider.tsx",["171","172"],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/hooks/utils.ts",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/const.ts",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/auth/AuthProvider.tsx",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/auth/Login.tsx",["173","174"],"import React, {useEffect, useState} from 'react';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport {\n  TextField,\n  Label,\n  ITextFieldStyles,\n  PrimaryButton,\n  MessageBar,\n  MessageBarType,\n} from '@fluentui/react';\nimport {useAuth} from './AuthProvider';\nimport logger from '../../logger';\n\nconst Login2 = (props: any) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [redirect, setRedirect] = useState('/');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState<boolean | null>(null);\n\n  useEffect(() => {}, []);\n\n  const handleChangeEmail = (e: any) => {\n    setEmail(e.target.value);\n    setError(null);\n    setLoading(null);\n  };\n\n  const handleChangePassword = (e: any) => {\n    setPassword(e.target.value);\n    setError(null);\n    setLoading(null);\n  };\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    setError(null);\n    setLoading(null);\n\n    // TODO: handle login through API\n    props\n      .onSubmit({email, password})\n      .then(() => props.history.push(redirect))\n      .catch((err: any) => {\n        logger.error('Error!', err);\n        const error =\n          err.response?.body?.error?.message || 'Invalid credentials';\n        setError(error);\n        setLoading(false);\n      });\n  };\n\n  const textFieldStyles: Partial<ITextFieldStyles> = {\n    field: {height: 50, fontSize: '1rem', color: 'black', padding: '12px 16px'},\n    fieldGroup: {height: 52, border: '1px black solid'},\n    revealButton: {height: 50},\n  };\n\n  return (\n    <div className=\"h-screen gentle-flex\">\n      <div\n        className=\"border-true-gray-200 border-2 border-solid flex flex-col rounded\"\n        style={{\n          width: '464px',\n          // height: '554px',\n        }}\n      >\n        <div\n          className=\"w-full\"\n          style={{\n            padding: '64px',\n          }}\n        >\n          <div\n            className=\"font-medium\"\n            style={{fontSize: '36px', marginBottom: '24px'}}\n          >\n            Sign in\n          </div>\n          <form onSubmit={handleSubmit}>\n            <div style={{paddingBottom: '24px'}}>\n              <Label>Email</Label>\n              <TextField\n                type=\"email\"\n                styles={textFieldStyles}\n                onChange={handleChangeEmail}\n                value={email}\n                id={'email'}\n              />\n            </div>\n            <div style={{paddingBottom: '24px'}}>\n              <Label>Password</Label>\n              <TextField\n                id=\"password\"\n                type=\"password\"\n                styles={textFieldStyles}\n                onChange={handleChangePassword}\n                value={password}\n                canRevealPassword\n              />\n            </div>\n            <PrimaryButton\n              className=\"login-button\"\n              text=\"Submit\"\n              type=\"submit\"\n            />\n\n            {error && (\n              <MessageBar\n                messageBarType={MessageBarType.error}\n                isMultiline={false}\n                // onDismiss={p.resetChoice}\n                dismissButtonAriaLabel=\"Close\"\n                className=\"mt-5\"\n              >\n                {error}\n              </MessageBar>\n            )}\n          </form>\n\n          {/*<DefaultButton text=\"使用微信登录\"/>*/}\n          {/*<DefaultButton text=\"使用飞书登录\"/>*/}\n        </div>\n        <div\n          className=\"\"\n          style={{\n            paddingRight: '64px',\n            paddingLeft: '64px',\n            paddingBottom: '64px',\n          }}\n        >\n          <Link to=\"/register\">\n            <span\n              className=\"border-b-2 border-solid\"\n              style={{\n                color: '#2251ff',\n                borderColor: '#2251ff',\n              }}\n            >\n              注册账号\n            </span>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst LoginPage = (props: RouteComponentProps) => {\n  const auth = useAuth();\n\n  return <Login2 {...props} onSubmit={auth.login} />;\n};\n\nexport default LoginPage;\n","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/auth/Register.tsx",["175","176"],"import React, {useEffect, useState} from 'react';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport {useAuth} from './AuthProvider';\nimport logger from '../../logger';\nimport {\n  ITextFieldStyles,\n  Label,\n  MessageBar,\n  MessageBarType,\n  PrimaryButton,\n  TextField,\n} from '@fluentui/react';\n\nconst Register2 = (props: any) => {\n  const [email, setEmail] = useState<string | undefined>(undefined);\n  const [password, setPassword] = useState<string | undefined>(undefined);\n  const [passwordConfirmation, setPasswordConfirmation] = useState();\n  const [submitted, setSubmitted] = useState<boolean>(false);\n  const [redirect, setRedirect] = useState('/');\n  const [error, setError] = useState<any>(null);\n  const [loading, setLoading] = useState<boolean | null>(null);\n\n  useEffect(() => {}, []);\n\n  const handleChangeEmail = (e: any) => {\n    setEmail(e.target.value);\n    setError(null);\n    setLoading(null);\n  };\n\n  const handleChangePassword = (e: any) => {\n    setPassword(e.target.value);\n    setError(null);\n    setLoading(null);\n  };\n\n  const handleChangePasswordConfirmation = (e: any) => {\n    setPasswordConfirmation(e.target.value);\n  };\n\n  const getValidationError = () => {\n    if (!email) {\n      return 'Email is required';\n    } else if (!password) {\n      return 'Password is required';\n    } else if (password.length < 8) {\n      return 'Password must be at least 8 characters';\n    } else if (password !== passwordConfirmation) {\n      return 'Password confirmation does not match';\n    } else {\n      return null;\n    }\n  };\n  const handleInputBlur = () => {\n    if (!submitted) {\n      return;\n    }\n\n    setError(getValidationError());\n  };\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    const error = getValidationError();\n\n    if (error) {\n      setError(error);\n      setSubmitted(false);\n      return;\n    }\n\n    setLoading(true);\n    setSubmitted(true);\n    setError(null);\n\n    props\n      .onSubmit({\n        companyName: 'x',\n        // inviteToken: '',\n        email,\n        password,\n        passwordConfirmation,\n      })\n      .then(() => props.history.push(redirect))\n      .catch((err: any) => {\n        logger.error('Error!', err);\n        // TODO: provide more granular error messages?\n        const error =\n          err.response?.body?.error?.message || 'Invalid credentials';\n\n        setError(error);\n        setLoading(false);\n      });\n  };\n  const textFieldStyles: Partial<ITextFieldStyles> = {\n    field: {height: 50, fontSize: '1rem', color: 'black', padding: '12px 16px'},\n    fieldGroup: {height: 52, border: '1px black solid'},\n    revealButton: {height: 50},\n  };\n\n  return (\n    <div className=\"h-screen gentle-flex\">\n      <div\n        className=\"border-true-gray-200 border-2 border-solid flex flex-col rounded\"\n        style={{\n          width: '464px',\n          // height: '554px',\n        }}\n      >\n        <div\n          className=\"w-full\"\n          style={{\n            padding: '64px',\n          }}\n        >\n          <div\n            className=\"font-medium\"\n            style={{fontSize: '36px', marginBottom: '24px'}}\n          >\n            Sign up\n          </div>\n          <form onSubmit={handleSubmit}>\n            <div style={{paddingBottom: '24px'}}>\n              <Label>Email</Label>\n              <TextField\n                type=\"email\"\n                styles={textFieldStyles}\n                onChange={handleChangeEmail}\n                value={email}\n                id={'email'}\n                onBlur={handleInputBlur}\n              />\n            </div>\n            <div style={{paddingBottom: '24px'}}>\n              <Label>Password</Label>\n              <TextField\n                id=\"password\"\n                type=\"password\"\n                styles={textFieldStyles}\n                onChange={handleChangePassword}\n                value={password}\n                canRevealPassword\n                onBlur={handleInputBlur}\n              />\n            </div>\n            <div style={{paddingBottom: '24px'}}>\n              <Label>Confirm Password</Label>\n              <TextField\n                id=\"confirm_password\"\n                type=\"password\"\n                styles={textFieldStyles}\n                onChange={handleChangePasswordConfirmation}\n                value={passwordConfirmation}\n                canRevealPassword\n                onBlur={handleInputBlur}\n              />\n            </div>\n\n            <PrimaryButton\n              className=\"login-button\"\n              text=\"Submit\"\n              type=\"submit\"\n            />\n\n            {error && (\n              <MessageBar\n                messageBarType={MessageBarType.error}\n                isMultiline={false}\n                // onDismiss={p.resetChoice}\n                dismissButtonAriaLabel=\"Close\"\n                className=\"mt-5\"\n              >\n                {error}\n              </MessageBar>\n            )}\n          </form>\n\n          {/*<DefaultButton text=\"使用微信登录\"/>*/}\n          {/*<DefaultButton text=\"使用飞书登录\"/>*/}\n        </div>\n        <div\n          className=\"\"\n          style={{\n            paddingRight: '64px',\n            paddingLeft: '64px',\n            paddingBottom: '64px',\n          }}\n        >\n          <Link to=\"/login\">\n            <span\n              className=\"border-b-2 border-solid\"\n              style={{\n                color: '#2251ff',\n                borderColor: '#2251ff',\n              }}\n            >\n              登录已有账号\n            </span>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst RegisterPage = (props: RouteComponentProps) => {\n  const auth = useAuth();\n\n  return <Register2 {...props} onSubmit={auth.register} />;\n};\n\nexport default RegisterPage;\n","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/auth/PasswordReset.tsx",["177","178"],"import React from 'react';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport {useAuth} from './AuthProvider';\n\nconst PasswordResetPage = (props: RouteComponentProps) => {\n  const auth = useAuth();\n\n  return <div>password reset TODO</div>;\n};\n\nexport default PasswordResetPage;\n","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/auth/EmailVerification.tsx",["179"],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/auth/RequestPasswordReset.tsx",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/auth/PasswordResetRequested.tsx",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/Dashboard.tsx",["180"],"import React, {useEffect} from 'react';\nimport {Switch, Redirect, Route, RouteComponentProps} from 'react-router-dom';\nimport ScheduledEvents from './events/ScheduledEvents';\nimport SchedulingLink from './links/SchedulingLink';\nimport AppDataProvider from '../hooks/AppDataProvider';\nimport {SchedulingLinksBoard} from './links/SchedulingLinksBoard';\nimport {AppSettings} from './AppSettings';\nimport {Availability} from './availability/Availability';\nimport BookingPage from './booking/BookingPage';\n\nfunction Dashboard(props: RouteComponentProps) {\n  return (\n    <div\n      className=\"flex flex-col md:flex-row h-full w-screen\"\n      style={{\n        minHeight: '100vh',\n      }}\n    >\n      <div className=\"flex flex-row w-full\">\n        <Switch>\n          <Route exact path=\"/\" component={() => <Redirect to={'/links'} />} />\n          <Route exact path=\"/links\" component={SchedulingLinksBoard} />\n          <Route\n            path=\"/links/:id\"\n            component={() => (\n              <div className=\"w-full border-l border-gray-200 border-solid\">\n                <SchedulingLink />\n              </div>\n            )}\n          />\n          <Route path=\"/events\" component={ScheduledEvents} />\n          <Route path=\"/settings\" component={AppSettings} />\n          <Route path=\"/availabilities/:id/edit\" component={Availability} />\n          {/*<Route path=\"/apps\" component={() => <div>apps</div>} />*/}\n          <Route\n            path=\"/:userSlug/:schedulingLinkSlug\"\n            component={BookingPage}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nconst DashboardWrapper = (props: RouteComponentProps) => {\n  return (\n    <AppDataProvider>\n      <Dashboard {...props} />\n    </AppDataProvider>\n  );\n};\n\nexport default DashboardWrapper;\n","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/booking/BookingPage.tsx",["181","182","183","184","185","186","187","188"],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/landing/LandingPage.tsx",["189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209"],"import React, {useEffect, useState} from 'react';\nimport {\n  useLocation,\n  Switch,\n  Redirect,\n  Route,\n  Link,\n  RouteComponentProps,\n} from 'react-router-dom';\n\nexport default function LandingPage() {\n  return (\n    <div className=\"flex flex-col\">\n      <header className=\"text-gray-600 body-font\">\n        <div className=\"container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center\">\n          <a className=\"flex title-font font-medium items-center text-gray-900 mb-4 md:mb-0\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              className=\"w-10 h-10 text-white p-2 bg-blue-500 rounded-full\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5\" />\n            </svg>\n            <span className=\"ml-3 text-xl\">有期</span>\n          </a>\n          <nav className=\"md:ml-auto flex flex-wrap items-center text-base justify-center\">\n            <a className=\"mr-5 hover:text-gray-900 cursor-pointer\">产品</a>\n            <a className=\"mr-5 hover:text-gray-900 cursor-pointer\">价格</a>\n            <a className=\"mr-5 hover:text-gray-900 cursor-pointer\">集成</a>\n            <a className=\"mr-5 hover:text-gray-900 cursor-pointer\">解决方案</a>\n            <a className=\"mr-5 hover:text-gray-900 cursor-pointer\">团队版</a>\n          </nav>\n          <Link to=\"/login\">\n            <span className=\"mr-5 inline-flex items-center  border-0 py-1 px-3 focus:outline-none hover:bg-gray-200 rounded text-base mt-4 md:mt-0 cursor-pointer\">\n              登录\n            </span>\n          </Link>\n          <Link to=\"/register\">\n            <span className=\"inline-flex items-center bg-blue-500 border-0 py-1 px-3 focus:outline-none hover:bg-blue-600 rounded text-white mt-4 md:mt-0 cursor-pointer\">\n              注册\n            </span>\n          </Link>\n        </div>\n      </header>\n      <section className=\"text-gray-600 body-font\">\n        <div className=\"container mx-auto flex px-5 py-24 md:flex-row flex-col items-center\">\n          <div className=\"lg:flex-grow md:w-1/2 lg:pr-24 md:pr-16 flex flex-col md:items-start md:text-left mb-16 md:mb-0 items-center text-center\">\n            <h1 className=\"title-font sm:text-4xl text-3xl mb-4 font-medium text-gray-900\">\n              简单高效安排会面\n            </h1>\n            <p className=\"mb-8 leading-relaxed\">让您的时间井井有条</p>\n            <div className=\"flex justify-center\">\n              <Link to=\"/register\">\n                <span className=\"inline-flex text-white bg-blue-500 border-0 py-2 px-6 focus:outline-none hover:bg-blue-600 rounded text-lg\">\n                  开始免费使用\n                </span>\n              </Link>\n              {/* <button\n                        class=\"ml-4 inline-flex text-gray-700 bg-gray-100 border-0 py-2 px-6 focus:outline-none hover:bg-gray-200 rounded text-lg\">Button</button>\n                    */}\n            </div>\n          </div>\n          <div className=\"lg:max-w-lg lg:w-full md:w-1/2 w-5/6\">\n            <img\n              className=\"object-cover object-center rounded\"\n              alt=\"hero\"\n              src=\"https://dummyimage.com/720x600\"\n            />\n          </div>\n        </div>\n      </section>\n      <section className=\"text-gray-600 body-font\">\n        <div className=\"container px-5 py-24 mx-auto flex flex-wrap\">\n          <div className=\"flex flex-wrap w-full\">\n            <div className=\"lg:w-2/5 md:w-1/2 md:pr-10 md:py-6\">\n              <div className=\"flex relative pb-12\">\n                <div className=\"h-full w-10 absolute inset-0 flex items-center justify-center\">\n                  <div className=\"h-full w-1 bg-gray-200 pointer-events-none\" />\n                </div>\n                <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-blue-500 inline-flex items-center justify-center text-white relative z-10\">\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-5 h-5\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\" />\n                  </svg>\n                </div>\n                <div className=\"flex-grow pl-4\">\n                  <h2 className=\"font-medium title-font text-sm text-gray-900 mb-1 tracking-wider\">\n                    STEP 1\n                  </h2>\n                  <p className=\"leading-relaxed\">\n                    VHS cornhole pop-up, try-hard 8-bit iceland helvetica.\n                    Kinfolk bespoke try-hard cliche palo santo offal.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex relative pb-12\">\n                <div className=\"h-full w-10 absolute inset-0 flex items-center justify-center\">\n                  <div className=\"h-full w-1 bg-gray-200 pointer-events-none\" />\n                </div>\n                <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-blue-500 inline-flex items-center justify-center text-white relative z-10\">\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-5 h-5\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M22 12h-4l-3 9L9 3l-3 9H2\" />\n                  </svg>\n                </div>\n                <div className=\"flex-grow pl-4\">\n                  <h2 className=\"font-medium title-font text-sm text-gray-900 mb-1 tracking-wider\">\n                    STEP 2\n                  </h2>\n                  <p className=\"leading-relaxed\">\n                    Vice migas literally kitsch +1 pok pok. Truffaut hot chicken\n                    slow-carb health goth, vape typewriter.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex relative pb-12\">\n                <div className=\"h-full w-10 absolute inset-0 flex items-center justify-center\">\n                  <div className=\"h-full w-1 bg-gray-200 pointer-events-none\" />\n                </div>\n                <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-blue-500 inline-flex items-center justify-center text-white relative z-10\">\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-5 h-5\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <circle cx={12} cy={5} r={3} />\n                    <path d=\"M12 22V8M5 12H2a10 10 0 0020 0h-3\" />\n                  </svg>\n                </div>\n                <div className=\"flex-grow pl-4\">\n                  <h2 className=\"font-medium title-font text-sm text-gray-900 mb-1 tracking-wider\">\n                    STEP 3\n                  </h2>\n                  <p className=\"leading-relaxed\">\n                    Coloring book nar whal glossier master cleanse umami. Salvia\n                    +1 master cleanse blog taiyaki.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex relative pb-12\">\n                <div className=\"h-full w-10 absolute inset-0 flex items-center justify-center\">\n                  <div className=\"h-full w-1 bg-gray-200 pointer-events-none\" />\n                </div>\n                <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-blue-500 inline-flex items-center justify-center text-white relative z-10\">\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-5 h-5\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M20 21v-2a4 4 0 00-4-4H8a4 4 0 00-4 4v2\" />\n                    <circle cx={12} cy={7} r={4} />\n                  </svg>\n                </div>\n                <div className=\"flex-grow pl-4\">\n                  <h2 className=\"font-medium title-font text-sm text-gray-900 mb-1 tracking-wider\">\n                    STEP 4\n                  </h2>\n                  <p className=\"leading-relaxed\">\n                    VHS cornhole pop-up, try-hard 8-bit iceland helvetica.\n                    Kinfolk bespoke try-hard cliche palo santo offal.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex relative\">\n                <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-blue-500 inline-flex items-center justify-center text-white relative z-10\">\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-5 h-5\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M22 11.08V12a10 10 0 11-5.93-9.14\" />\n                    <path d=\"M22 4L12 14.01l-3-3\" />\n                  </svg>\n                </div>\n                <div className=\"flex-grow pl-4\">\n                  <h2 className=\"font-medium title-font text-sm text-gray-900 mb-1 tracking-wider\">\n                    FINISH\n                  </h2>\n                  <p className=\"leading-relaxed\">\n                    Pitchfork ugh tattooed scenester echo park gastropub\n                    whatever cold-pressed retro.\n                  </p>\n                </div>\n              </div>\n            </div>\n            <img\n              className=\"lg:w-3/5 md:w-1/2 object-cover object-center rounded-lg md:mt-0 mt-12\"\n              src=\"https://dummyimage.com/1200x500\"\n              alt=\"step\"\n            />\n          </div>\n        </div>\n      </section>\n      <section className=\"text-gray-600 body-font\">\n        <div className=\"container px-5 py-24 mx-auto\">\n          <h1 className=\"sm:text-3xl text-2xl font-medium title-font text-center text-gray-900 mb-20\">\n            Raw Denim Heirloom Man Braid <br className=\"hidden sm:block\" />\n            Selfies Wayfarers\n          </h1>\n          <div className=\"flex flex-wrap sm:-m-4 -mx-4 -mb-10 -mt-4 md:space-y-0 space-y-6\">\n            <div className=\"p-4 md:w-1/3 flex\">\n              <div className=\"w-12 h-12 inline-flex items-center justify-center rounded-full bg-blue-100 text-blue-500 mb-4 flex-shrink-0\">\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  className=\"w-6 h-6\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M22 12h-4l-3 9L9 3l-3 9H2\" />\n                </svg>\n              </div>\n              <div className=\"flex-grow pl-6\">\n                <h2 className=\"text-gray-900 text-lg title-font font-medium mb-2\">\n                  Shooting Stars\n                </h2>\n                <p className=\"leading-relaxed text-base\">\n                  Blue bottle crucifix vinyl post-ironic four dollar toast vegan\n                  taxidermy. Gastropub indxgo juice poutine, ramps microdosing\n                  banh mi pug VHS try-hard ugh iceland kickstarter tumblr\n                  live-edge tilde.\n                </p>\n                <a className=\"mt-3 text-blue-500 inline-flex items-center\">\n                  Learn More\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-4 h-4 ml-2\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M5 12h14M12 5l7 7-7 7\" />\n                  </svg>\n                </a>\n              </div>\n            </div>\n            <div className=\"p-4 md:w-1/3 flex\">\n              <div className=\"w-12 h-12 inline-flex items-center justify-center rounded-full bg-blue-100 text-blue-500 mb-4 flex-shrink-0\">\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  className=\"w-6 h-6\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle cx={6} cy={6} r={3} />\n                  <circle cx={6} cy={18} r={3} />\n                  <path d=\"M20 4L8.12 15.88M14.47 14.48L20 20M8.12 8.12L12 12\" />\n                </svg>\n              </div>\n              <div className=\"flex-grow pl-6\">\n                <h2 className=\"text-gray-900 text-lg title-font font-medium mb-2\">\n                  The Catalyzer\n                </h2>\n                <p className=\"leading-relaxed text-base\">\n                  Blue bottle crucifix vinyl post-ironic four dollar toast vegan\n                  taxidermy. Gastropub indxgo juice poutine, ramps microdosing\n                  banh mi pug VHS try-hard ugh iceland kickstarter tumblr\n                  live-edge tilde.\n                </p>\n                <a className=\"mt-3 text-blue-500 inline-flex items-center\">\n                  Learn More\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-4 h-4 ml-2\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M5 12h14M12 5l7 7-7 7\" />\n                  </svg>\n                </a>\n              </div>\n            </div>\n            <div className=\"p-4 md:w-1/3 flex\">\n              <div className=\"w-12 h-12 inline-flex items-center justify-center rounded-full bg-blue-100 text-blue-500 mb-4 flex-shrink-0\">\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  className=\"w-6 h-6\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M20 21v-2a4 4 0 00-4-4H8a4 4 0 00-4 4v2\" />\n                  <circle cx={12} cy={7} r={4} />\n                </svg>\n              </div>\n              <div className=\"flex-grow pl-6\">\n                <h2 className=\"text-gray-900 text-lg title-font font-medium mb-2\">\n                  Neptune\n                </h2>\n                <p className=\"leading-relaxed text-base\">\n                  Blue bottle crucifix vinyl post-ironic four dollar toast vegan\n                  taxidermy. Gastropub indxgo juice poutine, ramps microdosing\n                  banh mi pug VHS try-hard ugh iceland kickstarter tumblr\n                  live-edge tilde.\n                </p>\n                <a className=\"mt-3 text-blue-500 inline-flex items-center\">\n                  Learn More\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-4 h-4 ml-2\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M5 12h14M12 5l7 7-7 7\" />\n                  </svg>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"text-gray-600 body-font\">\n        <div className=\"container px-5 py-24 mx-auto\">\n          <div className=\"flex flex-col text-center w-full mb-12\">\n            <h1 className=\"sm:text-3xl text-2xl font-medium title-font mb-4 text-gray-900\">\n              Master Cleanse Reliac Heirloom\n            </h1>\n            <p className=\"lg:w-2/3 mx-auto leading-relaxed text-base\">\n              Whatever cardigan tote bag tumblr hexagon brooklyn asymmetrical\n              gentrify, subway tile poke farm-to-table. Franzen you probably\n              haven't heard of them man bun deep.\n            </p>\n          </div>\n          <div className=\"flex lg:w-2/3 w-full sm:flex-row flex-col mx-auto px-8 sm:space-x-4 sm:space-y-0 space-y-4 sm:px-0 items-end\">\n            <div className=\"relative flex-grow w-full\">\n              <label\n                htmlFor=\"full-name\"\n                className=\"leading-7 text-sm text-gray-600\"\n              >\n                Full Name\n              </label>\n              <input\n                type=\"text\"\n                id=\"full-name\"\n                name=\"full-name\"\n                className=\"w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-blue-500 focus:bg-transparent focus:ring-2 focus:ring-blue-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\n              />\n            </div>\n            <div className=\"relative flex-grow w-full\">\n              <label\n                htmlFor=\"email\"\n                className=\"leading-7 text-sm text-gray-600\"\n              >\n                Email\n              </label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                className=\"w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-blue-500 focus:bg-transparent focus:ring-2 focus:ring-blue-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\n              />\n            </div>\n            <button className=\"text-white bg-blue-500 border-0 py-2 px-8 focus:outline-none hover:bg-blue-600 rounded text-lg\">\n              Button\n            </button>\n          </div>\n        </div>\n      </section>\n      <footer className=\"text-gray-600 body-font\">\n        <div className=\"container px-5 py-8 mx-auto flex items-center sm:flex-row flex-col\">\n          <a className=\"flex title-font font-medium items-center md:justify-start justify-center text-gray-900\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              className=\"w-10 h-10 text-white p-2 bg-blue-500 rounded-full\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5\" />\n            </svg>\n            <span className=\"ml-3 text-xl\">tailblocks</span>\n          </a>\n          <p className=\"text-sm text-gray-500 sm:ml-4 sm:pl-4 sm:border-l-2 sm:border-gray-200 sm:py-2 sm:mt-0 mt-4\">\n            © 2020 tailblocks —\n            <a\n              href=\"https://twitter.com/knyttneve\"\n              className=\"text-gray-600 ml-1\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              @knyttneve\n            </a>\n          </p>\n          <span className=\"inline-flex sm:ml-auto sm:mt-0 mt-4 justify-center sm:justify-start\">\n            <a className=\"text-gray-500\">\n              <svg\n                fill=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                className=\"w-5 h-5\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z\" />\n              </svg>\n            </a>\n            <a className=\"ml-3 text-gray-500\">\n              <svg\n                fill=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                className=\"w-5 h-5\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z\" />\n              </svg>\n            </a>\n            <a className=\"ml-3 text-gray-500\">\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                className=\"w-5 h-5\"\n                viewBox=\"0 0 24 24\"\n              >\n                <rect width={20} height={20} x={2} y={2} rx={5} ry={5} />\n                <path d=\"M16 11.37A4 4 0 1112.63 8 4 4 0 0116 11.37zm1.5-4.87h.01\" />\n              </svg>\n            </a>\n            <a className=\"ml-3 text-gray-500\">\n              <svg\n                fill=\"currentColor\"\n                stroke=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={0}\n                className=\"w-5 h-5\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  stroke=\"none\"\n                  d=\"M16 8a6 6 0 016 6v7h-4v-7a2 2 0 00-2-2 2 2 0 00-2 2v7h-4v-7a6 6 0 016-6zM2 9h4v12H2z\"\n                />\n                <circle cx={4} cy={4} r={2} stroke=\"none\" />\n              </svg>\n            </a>\n          </span>\n        </div>\n      </footer>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/AppSettings.tsx",["210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/event-utils.tsx",["230","231","232"],"import {EventInput} from '@fullcalendar/react';\nimport {Dayjs} from 'dayjs';\n\nlet eventGuid = 0;\nlet todayStr = new Date().toISOString().replace(/T.*$/, ''); // YYYY-MM-DD of today\n\nexport const INITIAL_EVENTS: EventInput[] = [\n  {\n    id: createEventId(),\n    start: '2021-01-22' + 'T12:00:00',\n    end: '2021-01-22' + 'T14:00:00',\n  },\n];\n\nexport function createEventId() {\n  return String(eventGuid++);\n}\n\nexport function complementIntervals(\n  start: Dayjs,\n  end: Dayjs,\n  intervals: Dayjs[][]\n) {\n  const res: Dayjs[][] = [];\n  if (intervals.length === 0) {\n    res.push([start, end]);\n    return res;\n  }\n\n  if (start.isBefore(intervals[0][0])) {\n    res.push([start, intervals[0][0]]);\n  }\n\n  for (let index = 0; index < intervals.length - 1; index++) {\n    res.push([intervals[index][1], intervals[index + 1][0]]);\n  }\n\n  if (end.isAfter(intervals[intervals.length - 1][1])) {\n    res.push([intervals[intervals.length - 1][1], end]);\n  }\n  return res;\n}\n\nfunction max(a: Dayjs, b: Dayjs) {\n  return a.isAfter(b) ? a : b;\n}\n\nexport function eliminateIntervals(intervals: Dayjs[][]) {\n  const res: Dayjs[][] = [];\n  if (intervals.length === 0) {\n    return res;\n  }\n  let currentStart = intervals[0][0];\n  let currentEnd = intervals[0][1];\n  for (let index = 1; index < intervals.length; index++) {\n    const element = intervals[index];\n    if (currentEnd.isAfter(element[0]) || currentEnd.isSame(element[0])) {\n      currentEnd = max(element[1], currentEnd);\n    } else {\n      res.push([currentStart, currentEnd]);\n      // next\n      currentStart = element[0];\n      currentEnd = element[1];\n    }\n    if (index === intervals.length - 1) {\n      res.push([currentStart, currentEnd]);\n    }\n  }\n  return res;\n}\n","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/booking/BookingProvider.tsx",["233","234","235","236","237"],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/constants.ts",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/common/EventLocationSelect.tsx",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/events/ScheduledEvent.tsx",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/events/ScheduledEvents.tsx",["238","239"],"import React, {useEffect, useState} from 'react';\nimport {Switch, Route, Link, useLocation, Redirect} from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport ScheduledEventsProvider, {\n  useScheduledEvents,\n} from '../../hooks/ScheduledEventsProvider';\nimport NavSidebar from '../common/NavSidebar';\n\nconst weekOfYear = require('dayjs/plugin/weekOfYear');\ndayjs.extend(weekOfYear);\n\nfunction UpcomingScheduledEvents() {\n  const {scheduledEvents} = useScheduledEvents();\n  console.log('scheduledEvents', scheduledEvents);\n\n  return (\n    <div className=\"w-full flex flex-col\">\n      <ul>\n        <li className=\"px-6 py-3 border-b grid grid-cols-10 gap-4 hover:bg-gray-50 transition ease-in-out duration-150 text-sm\">\n          <div className=\"text-gray-700 col-span-2 lg:col-span-1\">\n            Thu, Feb 11\n          </div>\n          <div className=\"text-gray-700 col-span-4 lg:col-span-2\">\n            12:00 pm – 2:00 pm\n          </div>\n          <div className=\"col-span-4 lg:col-span-6 text-sm leading-5\">\n            <div className=\"pb-1 flex items-center\">\n              <div className=\"pr-2\">\n                <span className=\"inline-flex flex-shrink-0 items-center justify-center h-5 w-5  rounded-full text-white ring-2 ring-white bg-gray-500 select-none\">\n                  <span className=\"text-xxs font-medium leading-none\">YZ</span>\n                </span>\n              </div>\n              <a\n                href=\"/events/b3a6b143-5493-48d2-aefd-689570e22b5a\"\n                className=\"text-gray-900 font-bold mr-2 leading-5 hover:underline truncate transition ease-in-out duration-150\"\n              >\n                Chat with Yuanyuan\n              </a>\n            </div>\n            <div className=\"ml-7 text-gray-600 truncate\">\n              Yuanyuan Zhang and Yuanyuan Zhang\n            </div>\n          </div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default function ScheduledEvents() {\n  const {pathname} = useLocation();\n\n  return (\n    <div className=\"w-full flex flex-row\">\n      <NavSidebar />\n\n      <ScheduledEventsProvider>\n        <div className=\"h-full w-full flex flex-col\">\n          <div className=\"Header bg-gray-100\">\n            <div className=\"flex flex-row\">\n              <div className=\"gentle-flex py-1 w-24\">\n                <div className=\"font-bold\">日程</div>\n              </div>\n\n              {[\n                {url: '/events/upcoming', name: '待完成'},\n                {url: '/events/past', name: '已完成'},\n                {url: '/events/canceled', name: '已取消'},\n                // {url: '/events/all', name: '全部'},\n              ].map(({url, name}) => {\n                return (\n                  <div className=\"px-2 cursor-pointer\" key={url}>\n                    {pathname === url ? (\n                      <div className=\"gentle-flex py-1 w-24\">\n                        <span>{name}</span>\n                      </div>\n                    ) : (\n                      <Link to={url}>\n                        <span className=\"gentle-flex w-24 py-1 opacity-25 hover:opacity-100\">\n                          {name}\n                        </span>\n                      </Link>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n            <div className=\"flex flex-row\">\n              <div className=\"gentle-flex py-1 w-24 opacity-25 hover:opacity-100 cursor-pointer\">\n                日历\n              </div>\n            </div>\n          </div>\n          <div className=\"h-full\">\n            <Switch>\n              <Route\n                path=\"/events/upcoming\"\n                component={UpcomingScheduledEvents}\n              />\n              <Route path=\"/events/past\" component={() => <div>past</div>} />\n              <Route\n                path=\"/events/canceled\"\n                component={() => <div>canceled</div>}\n              />\n              <Route path=\"/events/all\" component={() => <div>all</div>} />\n              <Route path=\"/events\">\n                <Redirect to=\"/events/upcoming\" />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </ScheduledEventsProvider>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/links/SchedulingLinksBoard.tsx",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/links/SchedulingLink.tsx",["240","241","242"],"import * as React from 'react';\nimport {Link, Route, Switch, useParams} from 'react-router-dom';\nimport 'tui-calendar/dist/tui-calendar.css';\nimport SchedulingLinkProvider, {\n  useSchedulingLink,\n} from '../../hooks/SchedulingLinkProvider';\nimport SingleSelect from '../common/EventLocationSelect';\nimport Select, {components} from 'react-select';\nimport Calendar from '../common/Calendar';\nimport SchedulingLinkSettings from './SchedulingLinkSettings';\nimport {useAppData} from '../../hooks/AppDataProvider';\nimport {useState, Fragment, useEffect} from 'react';\nimport {X} from '@geist-ui/react-icons';\nimport {Button, Input, Toggle, Tooltip} from '@geist-ui/react';\n\nconst URL = 'http://localhost:3000';\n\nfunction Header() {\n  const {profile} = useAppData();\n  const {slug: schedulingLinkSlug, updateSlug} = useSchedulingLink();\n  const userSlug = profile?.slug;\n\n  const [slug, setSlug] = useState<string>('');\n  const [editing, setEditing] = useState(false);\n\n  useEffect(() => {\n    setSlug(schedulingLinkSlug);\n  }, [schedulingLinkSlug]);\n\n  const onSave = () => {\n    console.log('on save', slug);\n    updateSlug(slug);\n    setEditing(false);\n  };\n\n  return (\n    <div className=\"Header\">\n      <div className=\"flex flex-row w-full\">\n        <Link\n          to=\"/links\"\n          className=\"hover:bg-gray-100 text-gray-600 focus:outline-none hover:text-black gentle-flex w-10 h-10 rounded-full \"\n        >\n          <X />\n        </Link>\n        <div className=\"flex flex-row justify-between w-full px-10\">\n          <div className=\"gentle-flex\">\n            <span>编辑</span>\n          </div>\n          <div className=\"flex flex-row\">\n            <div className=\"gentle-flex mr-4\">\n              <div className=\"bg-green-100 text-green-700 px-2 py-1\">\n                <i className=\"fas fa-check\" />\n                <span className=\"px-1\">已保存</span>\n              </div>\n            </div>\n            {/*<Button onClick={() => {}}>测试保存</Button>*/}\n            <div className=\"gentle-flex mr-3\">\n              <Toggle initialChecked={true} size=\"medium\" onChange={() => {}} />\n            </div>\n            <div className=\"gentle-flex px-1\">\n              {editing ? (\n                <div>\n                  <Input\n                    label={URL + '/@' + userSlug + '/'}\n                    placeholder=\"必填\"\n                    initialValue={slug}\n                    autoFocus={true}\n                    onChange={(e) => {\n                      setSlug(e.target.value);\n                    }}\n                  />\n                </div>\n              ) : (\n                <Tooltip text={'点击复制链接'} type={'dark'} placement=\"bottom\">\n                  <span className=\"cursor-pointer text-gray-600 hover:text-blue-500 hover:bg-blue-100 py-2 px-2 rounded\">\n                    {URL + '/@' + userSlug + '/' + slug}\n                  </span>\n                </Tooltip>\n              )}\n            </div>\n            <div className=\"gentle-flex\">\n              {editing ? (\n                <div className=\"flex flex-row\">\n                  <div className=\"ml-1\">\n                    <Button\n                      size={'small'}\n                      type={'success'}\n                      auto\n                      onClick={onSave}\n                    >\n                      保存\n                    </Button>\n                  </div>\n                  <div className=\"ml-1\">\n                    <Button\n                      size={'small'}\n                      auto\n                      onClick={() => setEditing(false)}\n                    >\n                      取消\n                    </Button>\n                  </div>\n                </div>\n              ) : (\n                <Button size={'small'} auto onClick={() => setEditing(true)}>\n                  编辑\n                </Button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst DurationOptions = [\n  ['10 分钟', 10],\n  ['15 分钟', 15],\n  ['30 分钟', 30],\n  ['45 分钟', 45],\n  ['60 分钟', 60],\n  ['90 分钟', 90],\n  ['2 小时', 120],\n];\n\nconst DurationOptionsMap = DurationOptions.map((opt) => ({\n  value: opt[1],\n  label: opt[0],\n}));\n\nconst MenuList = (props: any) => {\n  return (\n    <components.MenuList {...props}>\n      <div className=\"flex flex-row justify-end px-2 items-center \">\n        <Link to=\"/settings/links\" className=\"text-gray-400 hover:text-black\">\n          <i className=\"fas fa-external-link-alt\" />\n          <span className=\"px-2\">编辑</span>\n        </Link>\n      </div>\n      {props.children}\n    </components.MenuList>\n  );\n};\n\nconst NoOptionsMessage = (props: any) => {\n  return (\n    <components.NoOptionsMessage {...props}>\n      没有更多选项\n    </components.NoOptionsMessage>\n  );\n};\n\nfunction AvailabilitySelect() {\n  const {availabilityPresets} = useAppData();\n  const {\n    availabilityPresets: organizerAvailabilityPresets,\n    updateAvailabilityPresets,\n  } = useSchedulingLink();\n\n  const options = availabilityPresets\n    ? availabilityPresets.map((preset) => ({\n        value: preset.id,\n        label: preset.name,\n      }))\n    : [];\n\n  const defaultValue = organizerAvailabilityPresets\n    ? organizerAvailabilityPresets.map((scheduleId) => {\n        return options.find((opt) => opt.value === scheduleId);\n      })\n    : null;\n\n  const updatePresets = async (value: string[] | null) => {\n    return updateAvailabilityPresets(value);\n    // updateSchedulingLink()\n  };\n\n  return (\n    <Select\n      className=\"w-full\"\n      options={options}\n      defaultValue={defaultValue}\n      isMulti\n      components={{\n        ClearIndicator: null,\n        IndicatorSeparator: null,\n        MenuList,\n        NoOptionsMessage,\n      }}\n      onChange={(value) => {\n        // update organizer\n        updatePresets(value ? value.map((opt) => opt.value) : null);\n      }}\n    />\n  );\n}\n\nfunction GeneralSection() {\n  let {id} = useParams();\n  const {\n    name,\n    description,\n    durations,\n    location,\n    organizer,\n\n    updateLocation,\n    updateName,\n    updateDescription,\n    updateDurations,\n  } = useSchedulingLink();\n\n  return (\n    <div date-section=\"general\" className=\"flex flex-col\">\n      <div className=\"px-4 pt-8\">\n        <textarea\n          className=\"-mx-2 px-2 py-2 rounded-lg text-2xl leading-6 font-bold border-transparent focus:outline-none focus:border-gray-300 focus:ring focus:ring-black focus:ring-opacity-50 text-gray-800 resize-none w-full placeholder-gray-600\"\n          placeholder=\"未命名\"\n          spellCheck=\"false\"\n          style={{minHeight: '42px !important'}}\n          defaultValue={name}\n          rows={1}\n          onKeyPress={(e) => {\n            if (e.key === 'Enter') {\n              e.preventDefault();\n            }\n          }}\n          onChange={(e) => {\n            updateName(e.target.value);\n          }}\n        />\n        <textarea\n          className=\"-mx-2 mt-2 px-2 py-2 rounded-md block border-transparent focus:outline-none focus:border focus:border-gray-300 focus:ring focus:ring-black  focus:ring-opacity-50 w-full text-gray-600 resize-none leading-5 placeholder-gray-600\"\n          placeholder=\"描述\"\n          spellCheck=\"false\"\n          style={{minHeight: '24px !important'}}\n          defaultValue={description}\n          onKeyPress={(e) => {\n            if (e.key === 'Enter') {\n              e.preventDefault();\n            }\n          }}\n          onChange={(e) => {\n            updateDescription(e.target.value);\n          }}\n        />\n      </div>\n      <div\n        className=\"px-2 pr-4 py-2 grid gap-x-1 gap-y-6\"\n        style={{gridTemplateColumns: '30px auto'}}\n      >\n        <Fragment>\n          <span className=\"w-full gentle-flex\">\n            <Tooltip text=\"时间\" type=\"dark\" placement={'top'}>\n              <i className=\"fas fa-clock\" />\n            </Tooltip>\n          </span>\n          <Select\n            className=\"w-full\"\n            options={DurationOptionsMap}\n            components={{\n              ClearIndicator: null,\n              IndicatorSeparator: null,\n            }}\n            defaultValue={\n              durations\n                ? durations.map((d) => {\n                    const opt = DurationOptions.find((opt) => opt[1] === d);\n                    if (opt) {\n                      return {\n                        value: opt[1],\n                        label: opt[0],\n                      };\n                    }\n                  })\n                : []\n            }\n            isMulti\n            onChange={(value: any) => {\n              updateDurations(value.map((opt: any) => opt.value));\n            }}\n          />\n        </Fragment>\n        <Fragment>\n          <span className=\"w-full gentle-flex\">\n            <Tooltip text=\"可选时间\" type=\"dark\" placement={'top'}>\n              <i className=\"fas fa-calendar-check\" />\n            </Tooltip>\n          </span>\n          <AvailabilitySelect />\n        </Fragment>\n        <Fragment>\n          <span className=\"w-full gentle-flex\">\n            <Tooltip text=\"方式\" type=\"dark\" placement={'top'}>\n              <i className=\"fas fa-video\" />\n            </Tooltip>\n          </span>\n          <SingleSelect\n            defaultValue={location}\n            onChange={(v: any) => {\n              updateLocation(v.value);\n            }}\n          />\n        </Fragment>\n        <Fragment>\n          <Switch>\n            <Route\n              exact\n              path=\"/links/:id\"\n              component={() => (\n                // <div className=\"hover:bg-gray-200 w-full px-2 py-2 rounded\">\n                <>\n                  <span className=\"w-full gentle-flex\">\n                    <Tooltip text=\"更多设置\" type=\"dark\" placement={'top'}>\n                      <i className=\"fas fa-cog\" />\n                    </Tooltip>\n                  </span>\n                  <Link\n                    to={`/links/${id}/more-settings`}\n                    className=\"w-full px-2 py-2 hover:bg-blue-100 rounded\"\n                  >\n                    设置\n                  </Link>\n                </>\n                // </div>\n              )}\n            />\n            <Route\n              exact\n              path=\"/links/:id/more-settings\"\n              component={() => (\n                <>\n                  <span className=\"w-full gentle-flex\">\n                    <Tooltip text=\"更多设置\" type=\"dark\" placement={'top'}>\n                      <i className=\"fas fa-cog\" />\n                    </Tooltip>\n                  </span>\n                  <span className=\"bg-blue-100 w-full px-2 py-2 rounded\">\n                    设置\n                  </span>\n                </>\n                // <div className=\"bg-gray-200 w-full px-2 py-2 rounded\">\n                //   <div className=\"w-full\">\n                //   </div>\n                // </div>\n              )}\n            />\n          </Switch>\n        </Fragment>\n      </div>\n    </div>\n  );\n}\n\nfunction ControlSection() {\n  const {profile} = useAppData();\n  const {slug: schedulingLinkSlug} = useSchedulingLink();\n  const userSlug = profile?.slug;\n  const bookingUrl = '/@' + userSlug + '/' + schedulingLinkSlug;\n  return (\n    <div className=\"border-primary border-t border-solid mt-8\">\n      <div\n        className=\"px-2 pt-8 grid gap-x-1 gap-y-6\"\n        style={{gridTemplateColumns: '30px auto'}}\n      >\n        <Fragment>\n          <span className=\"w-full gentle-flex\">\n            <Tooltip text=\"在新页面打开预览\" type=\"dark\" placement={'top'}>\n              <i className=\"fas fa-external-link-alt \" />\n            </Tooltip>\n          </span>\n          <Link to={bookingUrl} className=\"w-full px-2 py-2 hover:underline\">\n            预览\n          </Link>\n        </Fragment>\n\n        <Fragment>\n          <span className=\"w-full gentle-flex\">\n            <Tooltip text=\"复制链接地址到剪贴板\" type=\"dark\" placement={'top'}>\n              <i className=\"fas fa-link\" />\n            </Tooltip>\n          </span>\n          <div className=\"cursor-pointer w-full px-2 py-2 hover:bg-blue-100 rounded\">\n            <span>复制链接</span>\n          </div>\n        </Fragment>\n        {/*<Fragment>*/}\n        {/*  <span className=\"w-full gentle-flex\">*/}\n        {/*    <i className=\"far fa-clone \" />*/}\n        {/*  </span>*/}\n        {/*  <div className=\"cursor-pointer w-full px-2 py-2 hover:bg-blue-100 rounded\">*/}\n        {/*    <span>另存为</span>*/}\n        {/*  </div>*/}\n        {/*</Fragment>*/}\n        {/*<Fragment>*/}\n        {/*  <span className=\"w-full gentle-flex\">*/}\n        {/*    <i className=\"fas fa-code \" />*/}\n        {/*  </span>*/}\n        {/*  <span>嵌入</span>*/}\n        {/*</Fragment>*/}\n        <Fragment>\n          <span className=\"w-full gentle-flex\">\n            <Tooltip text=\"删除此链接\" type=\"dark\" placement={'top'}>\n              <i className=\"far fa-trash-alt\" />\n            </Tooltip>\n          </span>\n          <div className=\"cursor-pointer w-full px-2 py-2 hover:bg-blue-100 hover:text-red-600 rounded\">\n            <span>删除</span>\n          </div>\n        </Fragment>\n      </div>\n    </div>\n  );\n}\n\nfunction CalendarSection() {}\n\n/**\n * Manage scheduling link\n *\n * context:\n *  LinkContext\n *  useLink()\n *\n * LinkContext:\n *  link\n *  updateName\n *  updateDescription\n *  updateDuration\n *  updateAvailability\n *  updateLocation\n *  updateBuffer\n *  updateLimit\n *  updateCalendar\n *  ...\n *\n * Link:\n *  name\n *  description\n *  duration\n *  availability\n *  location\n *  ...\n *\n * Components:\n *   Header\n *      ViewControl\n *      Title\n *      LinkControl\n *   GeneralSection\n *   SettingSection\n *      Buffer&Limit Subsection\n *      ...\n *   ControlSection\n *   CalendarSection\n */\nfunction SchedulingLink() {\n  let {id} = useParams();\n\n  return (\n    <SchedulingLinkProvider linkId={id}>\n      <div className=\"flex flex-col h-full\">\n        <Header />\n\n        <div className=\"flex flex-row h-full\">\n          <div className=\"w-112  h-full flex flex-col\">\n            <GeneralSection />\n            <ControlSection />\n          </div>\n\n          <div className=\"w-full h-full\">\n            <Switch>\n              <Route\n                exact\n                path=\"/links/:id/more-settings\"\n                component={SchedulingLinkSettings}\n              />\n              <Route\n                exact\n                path=\"/links/:id\"\n                component={() => (\n                  <div className=\"w-full h-full flex flex-col bg-white pt-8\">\n                    <Calendar />\n                  </div>\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </SchedulingLinkProvider>\n  );\n}\n\nexport default SchedulingLink;\n","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/availability/Availability.tsx",["243","244","245","246","247"],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/common/NavSidebar.tsx",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/links/SchedulingLinkSettings.tsx",["248"],"import React from 'react';\nimport {Link, useParams} from 'react-router-dom';\nimport _ from 'lodash';\nimport {useSchedulingLink} from '../../hooks/SchedulingLinkProvider';\nimport Select from 'react-select';\nimport {nanoid} from 'nanoid';\nimport {X} from '@geist-ui/react-icons';\nimport {Button, Input, Toggle} from '@geist-ui/react';\n\nfunction SettingSection(props: any) {\n  return (\n    <div className=\"border-primary border-b border-solid py-8\">\n      <div className=\"mx-auto w-128\">{props.children}</div>\n    </div>\n  );\n}\n\ninterface SectionTitleProps extends React.PropsWithChildren<any> {\n  title: string;\n}\n\nfunction SectionTitle(props: SectionTitleProps) {\n  return <div className=\"text-xl py-2\">{props.title}</div>;\n}\n\nfunction CalendarBindingSection() {\n  // const {calendars} = useAppData()\n  // const {calendar} = useSchedulingLink()\n\n  return (\n    <SettingSection>\n      <h2>日历</h2>\n      <div>新日程将同步到选择的日历</div>\n    </SettingSection>\n  );\n}\n\ninterface SchedulingLinkFieldConfiguration {\n  label: string;\n  required: boolean;\n  type: string;\n}\n\ninterface SchedulingLinkField extends SchedulingLinkFieldConfiguration {\n  id: string;\n}\n\nfunction FieldSection() {\n  const {fields, updateSchedulingLink} = useSchedulingLink();\n\n  const updateLabel = (id: string, value: string) => {\n    const clone: SchedulingLinkField[] = _.cloneDeep(fields);\n    const field = clone.find((field) => field.id === id);\n    if (field) {\n      field.label = value;\n      updateSchedulingLink({\n        fields: clone,\n      });\n    }\n  };\n\n  const updateRequired = (id: string, value: boolean) => {\n    const clone: SchedulingLinkField[] = _.cloneDeep(fields);\n    const field = clone.find((field) => field.id === id);\n    if (field) {\n      field.required = value;\n      updateSchedulingLink({\n        fields: clone,\n      });\n    }\n  };\n\n  const addField = () => {\n    const clone: SchedulingLinkField[] = _.cloneDeep(fields);\n    clone.push({\n      id: 'f' + String(_.random(100)),\n      label: 'new question',\n      required: false,\n      type: 'long_text',\n    });\n    updateSchedulingLink({\n      fields: clone,\n    });\n  };\n\n  const removeField = (id: string) => {\n    if (fields) {\n      updateSchedulingLink({\n        fields: fields.filter((field) => field.id !== id),\n      });\n    }\n  };\n\n  return (\n    <SettingSection>\n      <SectionTitle title={'问题'} />\n      <div className=\"flex flex-col\">\n        {fields ? (\n          fields.map((field) => {\n            return (\n              <div\n                key={field.id}\n                className=\"flex flex-row py-2 justify-between \"\n              >\n                <Input\n                  size=\"large\"\n                  // className=\"border-primary border-solid border-2 rounded\"\n                  initialValue={field.label}\n                  onChange={(e) => {\n                    updateLabel(field.id, e.target.value);\n                  }}\n                />\n                <div className=\"flex flex-row\">\n                  <div className=\"mx-1\">\n                    <Button\n                      size={'small'}\n                      auto\n                      onClick={() => {\n                        updateRequired(field.id, !field.required);\n                      }}\n                    >\n                      {field.required ? '必填' : '可选'}\n                    </Button>\n                  </div>\n                  <div className=\"mx-1\">\n                    <Button\n                      size={'small'}\n                      auto\n                      onClick={() => {\n                        removeField(field.id);\n                      }}\n                    >\n                      删除\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            );\n          })\n        ) : (\n          <div>template</div>\n        )}\n        <div className=\"w-24 pt-4\">\n          <Button onClick={addField} size={'small'}>\n            添加\n          </Button>\n        </div>\n      </div>\n    </SettingSection>\n  );\n}\n\nfunction BufferLimitSection() {\n  const {\n    bufferBefore,\n    bufferAfter,\n    limitBookingTime,\n    updateSchedulingLink,\n  } = useSchedulingLink();\n\n  const updateBufferBefore = (value: number) => {\n    updateSchedulingLink({\n      before_buffer_time: value,\n    });\n  };\n\n  const updateBufferAfter = (value: number) => {\n    updateSchedulingLink({\n      after_buffer_time: value,\n    });\n  };\n\n  const updateLimitBookingTime = (value: number) => {\n    updateSchedulingLink({\n      max_booking_time: value,\n    });\n  };\n\n  // const {bufferBefore, bufferAfter, updateBufferBefore, updateBufferAfter, limitBookingTime, updateLimitBookingTime, limitBookingFrequency, updateLimitBookingFrequency} = useSchedulingLink()\n\n  return (\n    <SettingSection>\n      <SectionTitle title={'缓冲时间及限制'} />\n      <div className=\"flex flex-row pt-4\">\n        <div className=\"flex flex-col\">\n          <label>约见前</label>\n          <div className=\"flex flex-row items-center mt-2 py-1 pr-2\">\n            <input\n              className=\"border-primary border-solid border-2 rounded px-2 mr-2 w-16 focus:outline-none\"\n              defaultValue={bufferBefore}\n              type=\"number\"\n              onChange={(e) => {\n                updateBufferBefore(parseInt(e.target.value));\n              }}\n            />\n            <span>分钟</span>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col ml-4\">\n          <label>约见后</label>\n          <div className=\"flex flex-row items-center mt-2 py-1 pr-2\">\n            <input\n              className=\"border-primary border-solid border-2 rounded px-2 mr-2 w-16 focus:outline-none\"\n              defaultValue={bufferAfter}\n              type=\"number\"\n              onChange={(e) => {\n                updateBufferAfter(parseInt(e.target.value));\n              }}\n            />\n            <span className=\"\">分钟</span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex flex-row pt-6\">\n        <div className=\"gentle-flex mr-2\">\n          <Toggle initialChecked={true} onChange={() => {}} />\n        </div>\n        <label>限制多少天内可以预约</label>\n      </div>\n      <div className=\"flex flex-row pt-4\">\n        <input\n          className=\"border-primary border-solid border-2 rounded py-1 px-2 w-16 focus:outline-none\"\n          defaultValue={limitBookingTime / 24 / 60}\n          type=\"number\"\n          onChange={(e) => {\n            updateLimitBookingTime(parseInt(e.target.value) * 24 * 60);\n          }}\n        />\n        <span className=\"gentle-flex ml-2\">\n          <label>天</label>\n        </span>\n      </div>\n    </SettingSection>\n  );\n}\n\nconst ReminderSection = React.memo(() => {\n  const {emailReminders, updateSchedulingLink} = useSchedulingLink();\n\n  const updateEmailReminderQuantity = (id: string, value: number) => {\n    const clone = _.cloneDeep(emailReminders);\n    const reminder = clone.find((r) => r.id === id);\n    if (reminder) {\n      reminder.quantity = value;\n      updateSchedulingLink({\n        email_reminders: clone,\n      });\n    }\n  };\n\n  const updateEmailReminderUnit = (id: string, value: string) => {\n    const clone = _.cloneDeep(emailReminders);\n    const reminder = clone.find((r) => r.id === id);\n    if (reminder) {\n      reminder.units = value;\n      updateSchedulingLink({\n        email_reminders: clone,\n      });\n    }\n  };\n\n  const add = () => {\n    if (emailReminders) {\n      const clone = _.cloneDeep(emailReminders);\n      clone.push({\n        id: nanoid(),\n        quantity: 30,\n        units: 'min',\n      });\n      updateSchedulingLink({\n        email_reminders: clone,\n      });\n    }\n  };\n\n  const remove = (id: string) => {\n    if (emailReminders) {\n      updateSchedulingLink({\n        email_reminders: emailReminders.filter((r) => r.id !== id),\n      });\n    }\n  };\n\n  console.log('reminder', emailReminders);\n\n  return (\n    <SettingSection>\n      <SectionTitle title={'提醒'} />\n      <div>\n        {emailReminders &&\n          emailReminders.map(({quantity, units, id}) => {\n            return (\n              <div className=\"flex flex-row justify-between py-2\">\n                <div key={id} className=\"flex flex-row \">\n                  <input\n                    className=\"border-primary border-solid border-2 rounded py-1 px-2 w-16 focus:outline-none\"\n                    defaultValue={quantity}\n                    type=\"number\"\n                    onChange={(e) => {\n                      updateEmailReminderQuantity(id, parseInt(e.target.value));\n                    }}\n                  />\n\n                  <Select\n                    className=\"ml-2 w-32\"\n                    options={[\n                      {\n                        label: 'minutes',\n                        value: 'min',\n                      },\n                      {\n                        label: 'hours',\n                        value: 'hour',\n                      },\n                      {\n                        label: 'days',\n                        value: 'day',\n                      },\n                    ]}\n                    defaultValue={{\n                      label: 'minutes',\n                      value: 'min',\n                    }}\n                    components={{\n                      IndicatorSeparator: null,\n                    }}\n                    onChange={(option) => {\n                      if (option) {\n                        updateEmailReminderUnit(id, option.value);\n                      }\n                    }}\n                  />\n                </div>\n                <div className=\"gentle-flex\">\n                  <Button\n                    size={'small'}\n                    auto\n                    onClick={() => {\n                      remove(id);\n                    }}\n                  >\n                    删除\n                  </Button>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n      <div className=\"w-24 pt-4\">\n        <Button onClick={add} size={'small'}>\n          添加\n        </Button>\n      </div>\n    </SettingSection>\n  );\n});\n\nexport default function SchedulingLinkSettings() {\n  let {id} = useParams();\n  return (\n    <div className=\"border-primary border-l border-solid w-full h-full\">\n      <div className=\"Header\">\n        <Link\n          to={`/links/${id}`}\n          className=\"hover:bg-gray-100 focus:outline-none text-gray-600 hover:text-black gentle-flex w-10 h-10  rounded-full\"\n        >\n          <X />\n        </Link>\n      </div>\n\n      <div className=\"w-full flex flex-col\">\n        {/*<CalendarBindingSection />*/}\n        <FieldSection />\n        <BufferLimitSection />\n        <ReminderSection />\n      </div>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/components/common/Calendar.tsx",["249","250","251","252","253","254"],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/api/api.ts",["255","256"],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/utils/utils.ts",[],"/Users/guanghui/guanghui.io/dev/scheduling/app/assets/src/hooks/api-hooks.tsx",[],{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":1,"column":28,"nodeType":"263","messageId":"264","endLine":1,"endColumn":37},{"ruleId":"261","severity":1,"message":"265","line":3,"column":8,"nodeType":"263","messageId":"264","endLine":3,"endColumn":14},{"ruleId":"261","severity":1,"message":"266","line":123,"column":9,"nodeType":"263","messageId":"264","endLine":123,"endColumn":28},{"ruleId":"261","severity":1,"message":"267","line":131,"column":9,"nodeType":"263","messageId":"264","endLine":131,"endColumn":32},{"ruleId":"261","severity":1,"message":"268","line":180,"column":9,"nodeType":"263","messageId":"264","endLine":180,"endColumn":23},{"ruleId":"261","severity":1,"message":"265","line":2,"column":8,"nodeType":"263","messageId":"264","endLine":2,"endColumn":14},{"ruleId":"269","severity":1,"message":"270","line":81,"column":6,"nodeType":"271","endLine":81,"endColumn":22,"suggestions":"272"},{"ruleId":"261","severity":1,"message":"273","line":17,"column":20,"nodeType":"263","messageId":"264","endLine":17,"endColumn":31},{"ruleId":"261","severity":1,"message":"274","line":19,"column":10,"nodeType":"263","messageId":"264","endLine":19,"endColumn":17},{"ruleId":"261","severity":1,"message":"273","line":19,"column":20,"nodeType":"263","messageId":"264","endLine":19,"endColumn":31},{"ruleId":"261","severity":1,"message":"274","line":21,"column":10,"nodeType":"263","messageId":"264","endLine":21,"endColumn":17},{"ruleId":"261","severity":1,"message":"275","line":2,"column":30,"nodeType":"263","messageId":"264","endLine":2,"endColumn":34},{"ruleId":"261","severity":1,"message":"276","line":6,"column":9,"nodeType":"263","messageId":"264","endLine":6,"endColumn":13},{"ruleId":"261","severity":1,"message":"277","line":11,"column":10,"nodeType":"263","messageId":"264","endLine":11,"endColumn":20},{"ruleId":"261","severity":1,"message":"262","line":1,"column":16,"nodeType":"263","messageId":"264","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"278","line":1,"column":36,"nodeType":"263","messageId":"264","endLine":1,"endColumn":45},{"ruleId":"261","severity":1,"message":"279","line":13,"column":24,"nodeType":"263","messageId":"264","endLine":13,"endColumn":28},{"ruleId":"261","severity":1,"message":"280","line":93,"column":10,"nodeType":"263","messageId":"264","endLine":93,"endColumn":22},{"ruleId":"261","severity":1,"message":"281","line":95,"column":5,"nodeType":"263","messageId":"264","endLine":95,"endColumn":9},{"ruleId":"261","severity":1,"message":"282","line":96,"column":5,"nodeType":"263","messageId":"264","endLine":96,"endColumn":17},{"ruleId":"261","severity":1,"message":"283","line":99,"column":5,"nodeType":"263","messageId":"264","endLine":99,"endColumn":17},{"ruleId":"261","severity":1,"message":"284","line":101,"column":5,"nodeType":"263","messageId":"264","endLine":101,"endColumn":15},{"ruleId":"261","severity":1,"message":"285","line":294,"column":9,"nodeType":"263","messageId":"264","endLine":294,"endColumn":20},{"ruleId":"261","severity":1,"message":"262","line":1,"column":16,"nodeType":"263","messageId":"264","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"286","line":1,"column":27,"nodeType":"263","messageId":"264","endLine":1,"endColumn":35},{"ruleId":"261","severity":1,"message":"287","line":3,"column":3,"nodeType":"263","messageId":"264","endLine":3,"endColumn":14},{"ruleId":"261","severity":1,"message":"288","line":4,"column":3,"nodeType":"263","messageId":"264","endLine":4,"endColumn":9},{"ruleId":"261","severity":1,"message":"289","line":5,"column":3,"nodeType":"263","messageId":"264","endLine":5,"endColumn":11},{"ruleId":"261","severity":1,"message":"290","line":6,"column":3,"nodeType":"263","messageId":"264","endLine":6,"endColumn":8},{"ruleId":"261","severity":1,"message":"291","line":8,"column":3,"nodeType":"263","messageId":"264","endLine":8,"endColumn":22},{"ruleId":"292","severity":1,"message":"293","line":16,"column":11,"nodeType":"294","endLine":16,"endColumn":94},{"ruleId":"292","severity":1,"message":"293","line":32,"column":13,"nodeType":"294","endLine":32,"endColumn":68},{"ruleId":"292","severity":1,"message":"293","line":33,"column":13,"nodeType":"294","endLine":33,"endColumn":68},{"ruleId":"292","severity":1,"message":"293","line":34,"column":13,"nodeType":"294","endLine":34,"endColumn":68},{"ruleId":"292","severity":1,"message":"293","line":35,"column":13,"nodeType":"294","endLine":35,"endColumn":68},{"ruleId":"292","severity":1,"message":"293","line":36,"column":13,"nodeType":"294","endLine":36,"endColumn":68},{"ruleId":"292","severity":1,"message":"293","line":256,"column":17,"nodeType":"294","endLine":256,"endColumn":76},{"ruleId":"292","severity":1,"message":"293","line":298,"column":17,"nodeType":"294","endLine":298,"endColumn":76},{"ruleId":"292","severity":1,"message":"293","line":339,"column":17,"nodeType":"294","endLine":339,"endColumn":76},{"ruleId":"292","severity":1,"message":"293","line":407,"column":11,"nodeType":"294","endLine":407,"endColumn":113},{"ruleId":"292","severity":1,"message":"293","line":434,"column":13,"nodeType":"294","endLine":434,"endColumn":42},{"ruleId":"292","severity":1,"message":"293","line":446,"column":13,"nodeType":"294","endLine":446,"endColumn":47},{"ruleId":"292","severity":1,"message":"293","line":458,"column":13,"nodeType":"294","endLine":458,"endColumn":47},{"ruleId":"292","severity":1,"message":"293","line":472,"column":13,"nodeType":"294","endLine":472,"endColumn":47},{"ruleId":"261","severity":1,"message":"295","line":6,"column":3,"nodeType":"263","messageId":"264","endLine":6,"endColumn":21},{"ruleId":"261","severity":1,"message":"296","line":10,"column":8,"nodeType":"263","messageId":"264","endLine":10,"endColumn":13},{"ruleId":"261","severity":1,"message":"297","line":224,"column":10,"nodeType":"263","messageId":"264","endLine":224,"endColumn":24},{"ruleId":"261","severity":1,"message":"298","line":225,"column":10,"nodeType":"263","messageId":"264","endLine":225,"endColumn":17},{"ruleId":"261","severity":1,"message":"299","line":225,"column":19,"nodeType":"263","messageId":"264","endLine":225,"endColumn":27},{"ruleId":"261","severity":1,"message":"300","line":225,"column":29,"nodeType":"263","messageId":"264","endLine":225,"endColumn":46},{"ruleId":"261","severity":1,"message":"301","line":225,"column":48,"nodeType":"263","messageId":"264","endLine":225,"endColumn":58},{"ruleId":"261","severity":1,"message":"302","line":227,"column":10,"nodeType":"263","messageId":"264","endLine":227,"endColumn":17},{"ruleId":"261","severity":1,"message":"303","line":227,"column":19,"nodeType":"263","messageId":"264","endLine":227,"endColumn":29},{"ruleId":"261","severity":1,"message":"299","line":231,"column":19,"nodeType":"263","messageId":"264","endLine":231,"endColumn":27},{"ruleId":"261","severity":1,"message":"300","line":231,"column":29,"nodeType":"263","messageId":"264","endLine":231,"endColumn":46},{"ruleId":"261","severity":1,"message":"301","line":231,"column":48,"nodeType":"263","messageId":"264","endLine":231,"endColumn":58},{"ruleId":"261","severity":1,"message":"302","line":233,"column":10,"nodeType":"263","messageId":"264","endLine":233,"endColumn":17},{"ruleId":"261","severity":1,"message":"303","line":233,"column":19,"nodeType":"263","messageId":"264","endLine":233,"endColumn":29},{"ruleId":"261","severity":1,"message":"299","line":244,"column":19,"nodeType":"263","messageId":"264","endLine":244,"endColumn":27},{"ruleId":"261","severity":1,"message":"301","line":244,"column":48,"nodeType":"263","messageId":"264","endLine":244,"endColumn":58},{"ruleId":"261","severity":1,"message":"298","line":263,"column":10,"nodeType":"263","messageId":"264","endLine":263,"endColumn":17},{"ruleId":"261","severity":1,"message":"299","line":263,"column":19,"nodeType":"263","messageId":"264","endLine":263,"endColumn":27},{"ruleId":"261","severity":1,"message":"300","line":263,"column":29,"nodeType":"263","messageId":"264","endLine":263,"endColumn":46},{"ruleId":"261","severity":1,"message":"301","line":263,"column":48,"nodeType":"263","messageId":"264","endLine":263,"endColumn":58},{"ruleId":"261","severity":1,"message":"304","line":5,"column":5,"nodeType":"263","messageId":"264","endLine":5,"endColumn":13},{"ruleId":"305","severity":1,"message":"306","line":10,"column":25,"nodeType":"307","messageId":"308","endLine":10,"endColumn":26},{"ruleId":"305","severity":1,"message":"306","line":11,"column":23,"nodeType":"307","messageId":"308","endLine":11,"endColumn":24},{"ruleId":"261","severity":1,"message":"309","line":2,"column":9,"nodeType":"263","messageId":"264","endLine":2,"endColumn":16},{"ruleId":"261","severity":1,"message":"310","line":4,"column":3,"nodeType":"263","messageId":"264","endLine":4,"endColumn":15},{"ruleId":"261","severity":1,"message":"311","line":5,"column":3,"nodeType":"263","messageId":"264","endLine":5,"endColumn":10},{"ruleId":"261","severity":1,"message":"312","line":10,"column":9,"nodeType":"263","messageId":"264","endLine":10,"endColumn":26},{"ruleId":"261","severity":1,"message":"313","line":11,"column":16,"nodeType":"263","messageId":"264","endLine":11,"endColumn":21},{"ruleId":"261","severity":1,"message":"262","line":1,"column":16,"nodeType":"263","messageId":"264","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"286","line":1,"column":27,"nodeType":"263","messageId":"264","endLine":1,"endColumn":35},{"ruleId":"261","severity":1,"message":"314","line":206,"column":5,"nodeType":"263","messageId":"264","endLine":206,"endColumn":14},{"ruleId":"315","severity":1,"message":"316","line":268,"column":37,"nodeType":"317","messageId":"318","endLine":268,"endColumn":39},{"ruleId":"261","severity":1,"message":"319","line":417,"column":10,"nodeType":"263","messageId":"264","endLine":417,"endColumn":25},{"ruleId":"261","severity":1,"message":"320","line":16,"column":17,"nodeType":"263","messageId":"264","endLine":16,"endColumn":25},{"ruleId":"261","severity":1,"message":"321","line":16,"column":27,"nodeType":"263","messageId":"264","endLine":16,"endColumn":32},{"ruleId":"261","severity":1,"message":"322","line":26,"column":7,"nodeType":"263","messageId":"264","endLine":26,"endColumn":18},{"ruleId":"323","severity":1,"message":"324","line":140,"column":44,"nodeType":"317","messageId":"325","endLine":146,"endColumn":8},{"ruleId":"326","severity":1,"message":"327","line":181,"column":57,"nodeType":"307","messageId":"328","endLine":181,"endColumn":59},{"ruleId":"261","severity":1,"message":"329","line":26,"column":10,"nodeType":"263","messageId":"264","endLine":26,"endColumn":32},{"ruleId":"261","severity":1,"message":"330","line":182,"column":9,"nodeType":"263","messageId":"264","endLine":182,"endColumn":29},{"ruleId":"261","severity":1,"message":"331","line":216,"column":9,"nodeType":"263","messageId":"264","endLine":216,"endColumn":14},{"ruleId":"261","severity":1,"message":"285","line":217,"column":9,"nodeType":"263","messageId":"264","endLine":217,"endColumn":20},{"ruleId":"261","severity":1,"message":"332","line":239,"column":9,"nodeType":"263","messageId":"264","endLine":239,"endColumn":25},{"ruleId":"261","severity":1,"message":"333","line":245,"column":9,"nodeType":"263","messageId":"264","endLine":245,"endColumn":21},{"ruleId":"323","severity":1,"message":"324","line":314,"column":44,"nodeType":"317","messageId":"325","endLine":320,"endColumn":8},{"ruleId":"261","severity":1,"message":"334","line":6,"column":9,"nodeType":"263","messageId":"264","endLine":6,"endColumn":15},{"ruleId":"261","severity":1,"message":"335","line":1167,"column":9,"nodeType":"263","messageId":"264","endLine":1167,"endColumn":12},"no-native-reassign",["336"],"no-negated-in-lhs",["337"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSWR' is defined but never used.","'_updateUserSettings' is assigned a value but never used.","'_revalidateUserSettings' is assigned a value but never used.","'removeSchedule' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAvailabilityPresetsById'. Either include it or remove the dependency array.","ArrayExpression",["338"],"'setRedirect' is assigned a value but never used.","'loading' is assigned a value but never used.","'Link' is defined but never used.","'auth' is assigned a value but never used.","'isVerified' is assigned a value but never used.","'RefObject' is defined but never used.","'Text' is defined but never used.","'EventSection' is defined but never used.","'user' is assigned a value but never used.","'timeSelected' is assigned a value but never used.","'setEventTime' is assigned a value but never used.","'setEventId' is assigned a value but never used.","'calendarApi' is assigned a value but never used.","'useState' is defined but never used.","'useLocation' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","'RouteComponentProps' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'convertMinToHrsMin' is defined but never used.","'dayjs' is defined but never used.","'LinkUrlSection' is defined but never used.","'profile' is assigned a value but never used.","'settings' is assigned a value but never used.","'updateDisplayName' is assigned a value but never used.","'updateSlug' is assigned a value but never used.","'editing' is assigned a value but never used.","'setEditing' is assigned a value but never used.","'todayStr' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'useAuth' is defined but never used.","'useIntervals' is defined but never used.","'useLink' is defined but never used.","'useSchedulingLink' is defined but never used.","'Dayjs' is defined but never used.","'organizer' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'CalendarSection' is defined but never used.","'Checkbox' is defined but never used.","'Input' is defined but never used.","'sliceOfTime' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'date', 'date'.","unsafeRefs","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'CalendarBindingSection' is defined but never used.","'handleWeekendsToggle' is assigned a value but never used.","'title' is assigned a value but never used.","'handleEventClick' is assigned a value but never used.","'handleEvents' is assigned a value but never used.","'nanoid' is defined but never used.","'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"339","fix":"340"},"Update the dependencies array to be: [settings, link, getAvailabilityPresetsById]",{"range":"341","text":"342"},[2613,2629],"[settings, link, getAvailabilityPresetsById]"]