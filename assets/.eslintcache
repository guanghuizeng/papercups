[{"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/index.tsx":"1","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/analytics.ts":"2","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/serviceWorker.ts":"3","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/App.tsx":"4","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/AuthProvider.tsx":"5","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/config.ts":"6","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/Login.tsx":"7","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/Register.tsx":"8","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/api.ts":"9","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/storage.ts":"10","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/EmailVerification.tsx":"11","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/RequestPasswordReset.tsx":"12","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/PasswordResetRequested.tsx":"13","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/PasswordReset.tsx":"14","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/Dashboard.tsx":"15","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/Sandbox.tsx":"16","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/demo/Demo.tsx":"17","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/demo/BotDemo.tsx":"18","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/PricingOverview.tsx":"19","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/SharedConversation.tsx":"20","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/landing/LadingPage.tsx":"21","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/logger.tsx":"22","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/utils.ts":"23","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/common.tsx":"24","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/icons.tsx":"25","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/AllConversations.tsx":"26","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationsProvider.tsx":"27","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/PriorityConversations.tsx":"28","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/MyConversations.tsx":"29","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ClosedConversations.tsx":"30","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/BillingOverview.tsx":"31","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/AccountOverview.tsx":"32","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/UserProfile.tsx":"33","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/integrations/IntegrationsOverview.tsx":"34","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/GettingStartedOverview.tsx":"35","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/customers/CustomersPage.tsx":"36","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/InstallingStorytime.tsx":"37","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/LiveSessionViewer.tsx":"38","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/SessionsOverview.tsx":"39","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/ReportingDashboard.tsx":"40","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationMessages.tsx":"41","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/socket.ts":"42","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/DatePicker.tsx":"43","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationsContainer.tsx":"44","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ChatMessage.tsx":"45","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/Spinner.tsx":"46","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/CustomerBreakdownChart.tsx":"47","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/MessagesSentVsReceivedChart.tsx":"48","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/MessagesByDayOfWeekChart.tsx":"49","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/MessagesPerUserChart.tsx":"50","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/MessagesPerDayChart.tsx":"51","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/SessionsTable.tsx":"52","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/ConversationSidebar.tsx":"53","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationDetailsSidebar.tsx":"54","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/customers/CustomersTable.tsx":"55","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/integrations/NewWebhookModal.tsx":"56","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/support.ts":"57","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/integrations/WebhooksTable.tsx":"58","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/integrations/IntegrationsTable.tsx":"59","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/WorkingHoursSelector.tsx":"60","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/types.ts":"61","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/DisabledUsersTable.tsx":"62","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/AccountUsersTable.tsx":"63","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/PaymentForm.tsx":"64","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/support.ts":"65","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/support.ts":"66","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationFooter.tsx":"67","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationClosing.tsx":"68","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ChatMessageBox.tsx":"69","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/SidebarCustomerNotes.tsx":"70","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/customers/CustomerDetailsModal.tsx":"71","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/support.ts":"72","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/SidebarTagSection.tsx":"73","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationItem.tsx":"74","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationHeader.tsx":"75","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/CardInputSection.tsx":"76","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/Dashboard.tsx":"77","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/Header.tsx":"78","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/store/init.ts":"79","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/store/index.tsx":"80","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/store/schema.ts":"81","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventType.tsx":"82","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventTypeEdit.tsx":"83","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventInviteeQuestionsSection.tsx":"84","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventAvailabilitySection.tsx":"85","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventGeneralSection.tsx":"86","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventNotifyPolicy.tsx":"87","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/constants.ts":"88","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/CancelButton.tsx":"89","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/BookingRangeContainer.tsx":"90","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventLocationSelect.tsx":"91","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/ScheduleContainer.tsx":"92","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/Editor.tsx":"93","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/BufferSelector.tsx":"94","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/DurationSelector.tsx":"95","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/hooks/EditingContext.tsx":"96","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/data.ts":"97","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/DatePicker.tsx":"98","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/CheckboxStateless.tsx":"99","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/EditorCore.tsx":"100","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/CircleCheckboxStateless.tsx":"101","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/BookCalendar.tsx":"102","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/Live.tsx":"103","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/Book.tsx":"104","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventsProvider.tsx":"105","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/CreateEventTypeModal.tsx":"106","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/NewEventType.tsx":"107","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/Header.tsx":"108","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/GeneralSectionExpand.tsx":"109","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/GeneralSectionCollapsed.tsx":"110","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/AvailabilitySectionExpand.tsx":"111","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/AvailabilitySectionCollapsed.tsx":"112","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/InviteeQuestionsSection.tsx":"113","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/NotifyPolicySection.tsx":"114","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/NavSection.tsx":"115","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/ScheduledEvents.tsx":"116","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventTypes.tsx":"117","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventTypeCard.tsx":"118","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/BookProvider.tsx":"119"},{"size":615,"mtime":1609244306905,"results":"120","hashOfConfig":"121"},{"size":1226,"mtime":1607220770491,"results":"122","hashOfConfig":"121"},{"size":5296,"mtime":1607220770508,"results":"123","hashOfConfig":"121"},{"size":3606,"mtime":1609833785811,"results":"124","hashOfConfig":"121"},{"size":3603,"mtime":1607220770494,"results":"125","hashOfConfig":"121"},{"size":898,"mtime":1608873579256,"results":"126","hashOfConfig":"121"},{"size":7378,"mtime":1609813521023,"results":"127","hashOfConfig":"121"},{"size":11691,"mtime":1609813521127,"results":"128","hashOfConfig":"121"},{"size":22727,"mtime":1610016626857,"results":"129","hashOfConfig":"121"},{"size":1088,"mtime":1607220770508,"results":"130","hashOfConfig":"121"},{"size":1262,"mtime":1607220770494,"results":"131","hashOfConfig":"121"},{"size":2756,"mtime":1607220770495,"results":"132","hashOfConfig":"121"},{"size":913,"mtime":1607220770495,"results":"133","hashOfConfig":"121"},{"size":4766,"mtime":1607220770495,"results":"134","hashOfConfig":"121"},{"size":12353,"mtime":1608873579249,"results":"135","hashOfConfig":"136"},{"size":279,"mtime":1607220770492,"results":"137","hashOfConfig":"121"},{"size":5588,"mtime":1608873579254,"results":"138","hashOfConfig":"121"},{"size":8333,"mtime":1607220770503,"results":"139","hashOfConfig":"121"},{"size":8039,"mtime":1608873579251,"results":"140","hashOfConfig":"121"},{"size":2386,"mtime":1608873579253,"results":"141","hashOfConfig":"121"},{"size":21820,"mtime":1609250206793,"results":"142","hashOfConfig":"121"},{"size":3667,"mtime":1607220770507,"results":"143","hashOfConfig":"121"},{"size":3102,"mtime":1609247432386,"results":"144","hashOfConfig":"121"},{"size":2262,"mtime":1608873579252,"results":"145","hashOfConfig":"121"},{"size":2455,"mtime":1607220770503,"results":"146","hashOfConfig":"121"},{"size":1162,"mtime":1607220770498,"results":"147","hashOfConfig":"136"},{"size":21310,"mtime":1609380308491,"results":"148","hashOfConfig":"136"},{"size":1186,"mtime":1607220770501,"results":"149","hashOfConfig":"136"},{"size":1157,"mtime":1607220770501,"results":"150","hashOfConfig":"136"},{"size":1464,"mtime":1607220770498,"results":"151","hashOfConfig":"136"},{"size":12141,"mtime":1608873579250,"results":"152","hashOfConfig":"136"},{"size":10054,"mtime":1608873579250,"results":"153","hashOfConfig":"136"},{"size":6949,"mtime":1607220770493,"results":"154","hashOfConfig":"136"},{"size":7835,"mtime":1608873579254,"results":"155","hashOfConfig":"136"},{"size":10528,"mtime":1608873579250,"results":"156","hashOfConfig":"136"},{"size":2957,"mtime":1607220770502,"results":"157","hashOfConfig":"136"},{"size":5601,"mtime":1607220770506,"results":"158","hashOfConfig":"136"},{"size":13042,"mtime":1608873579255,"results":"159","hashOfConfig":"136"},{"size":5293,"mtime":1607220770506,"results":"160","hashOfConfig":"136"},{"size":8738,"mtime":1607220770505,"results":"161","hashOfConfig":"136"},{"size":3401,"mtime":1608873579252,"results":"162","hashOfConfig":"121"},{"size":121,"mtime":1607220770508,"results":"163","hashOfConfig":"136"},{"size":389,"mtime":1607220770492,"results":"164","hashOfConfig":"121"},{"size":13632,"mtime":1608873579253,"results":"165","hashOfConfig":"136"},{"size":4108,"mtime":1607220770498,"results":"166","hashOfConfig":"121"},{"size":278,"mtime":1607220770492,"results":"167","hashOfConfig":"121"},{"size":1935,"mtime":1607220770504,"results":"168","hashOfConfig":"136"},{"size":843,"mtime":1607220770505,"results":"169","hashOfConfig":"136"},{"size":788,"mtime":1607220770504,"results":"170","hashOfConfig":"136"},{"size":1993,"mtime":1607220770505,"results":"171","hashOfConfig":"136"},{"size":919,"mtime":1607220770505,"results":"172","hashOfConfig":"136"},{"size":3292,"mtime":1607220770507,"results":"173","hashOfConfig":"136"},{"size":3058,"mtime":1607220770505,"results":"174","hashOfConfig":"136"},{"size":9451,"mtime":1608873579252,"results":"175","hashOfConfig":"136"},{"size":3497,"mtime":1607220770502,"results":"176","hashOfConfig":"136"},{"size":4171,"mtime":1607220770504,"results":"177","hashOfConfig":"136"},{"size":4537,"mtime":1608873579251,"results":"178","hashOfConfig":"136"},{"size":2224,"mtime":1607220770504,"results":"179","hashOfConfig":"136"},{"size":3542,"mtime":1608873579255,"results":"180","hashOfConfig":"136"},{"size":7571,"mtime":1607220770493,"results":"181","hashOfConfig":"136"},{"size":1713,"mtime":1608873579256,"results":"182","hashOfConfig":"136"},{"size":1828,"mtime":1607220770493,"results":"183","hashOfConfig":"136"},{"size":2617,"mtime":1607220770492,"results":"184","hashOfConfig":"136"},{"size":2946,"mtime":1607220770496,"results":"185","hashOfConfig":"136"},{"size":325,"mtime":1607220770501,"results":"186","hashOfConfig":"121"},{"size":1301,"mtime":1607220770505,"results":"187","hashOfConfig":"136"},{"size":1768,"mtime":1607220770499,"results":"188","hashOfConfig":"136"},{"size":1169,"mtime":1607220770498,"results":"189","hashOfConfig":"136"},{"size":958,"mtime":1607220770498,"results":"190","hashOfConfig":"121"},{"size":3351,"mtime":1608873579254,"results":"191","hashOfConfig":"136"},{"size":8202,"mtime":1607220770502,"results":"192","hashOfConfig":"136"},{"size":25723,"mtime":1607220770494,"results":"193","hashOfConfig":"136"},{"size":10534,"mtime":1607220770501,"results":"194","hashOfConfig":"136"},{"size":2970,"mtime":1607220770500,"results":"195","hashOfConfig":"136"},{"size":8028,"mtime":1607220770499,"results":"196","hashOfConfig":"136"},{"size":654,"mtime":1607220770496,"results":"197","hashOfConfig":"136"},{"size":2700,"mtime":1609815649702,"results":"198","hashOfConfig":"121"},{"size":2441,"mtime":1609325833373,"results":"199","hashOfConfig":"121"},{"size":4998,"mtime":1609291256437,"results":"200","hashOfConfig":"136"},{"size":3109,"mtime":1609291256416,"results":"201","hashOfConfig":"121"},{"size":616,"mtime":1609291256451,"results":"202","hashOfConfig":"136"},{"size":3781,"mtime":1609752628452,"results":"203","hashOfConfig":"121"},{"size":2550,"mtime":1609406368551,"results":"204","hashOfConfig":"136"},{"size":3159,"mtime":1609291254293,"results":"205","hashOfConfig":"136"},{"size":13536,"mtime":1609291293216,"results":"206","hashOfConfig":"136"},{"size":7407,"mtime":1609383208995,"results":"207","hashOfConfig":"136"},{"size":3546,"mtime":1609291254316,"results":"208","hashOfConfig":"136"},{"size":786,"mtime":1609933022286,"results":"209","hashOfConfig":"121"},{"size":1806,"mtime":1609291254116,"results":"210","hashOfConfig":"121"},{"size":6287,"mtime":1609470140864,"results":"211","hashOfConfig":"121"},{"size":745,"mtime":1609291254301,"results":"212","hashOfConfig":"121"},{"size":18710,"mtime":1609291254385,"results":"213","hashOfConfig":"121"},{"size":211,"mtime":1609291253987,"results":"214","hashOfConfig":"121"},{"size":2711,"mtime":1609574636627,"results":"215","hashOfConfig":"121"},{"size":4215,"mtime":1609477888363,"results":"216","hashOfConfig":"121"},{"size":92,"mtime":1609291256294,"results":"217","hashOfConfig":"121"},{"size":4018,"mtime":1609995663108,"results":"218","hashOfConfig":"121"},{"size":1274,"mtime":1609291254169,"results":"219","hashOfConfig":"121"},{"size":269,"mtime":1609291253951,"results":"220","hashOfConfig":"121"},{"size":335,"mtime":1609464606651,"results":"221","hashOfConfig":"121"},{"size":267,"mtime":1609291253960,"results":"222","hashOfConfig":"121"},{"size":365,"mtime":1609291253908,"results":"223","hashOfConfig":"121"},{"size":249,"mtime":1609304887015,"results":"224","hashOfConfig":"121"},{"size":21464,"mtime":1610097184022,"results":"225","hashOfConfig":"121"},{"size":4345,"mtime":1609849553859,"results":"226","hashOfConfig":"121"},{"size":1259,"mtime":1609384383839,"results":"227","hashOfConfig":"136"},{"size":3660,"mtime":1609753644158,"results":"228","hashOfConfig":"121"},{"size":757,"mtime":1609406368401,"results":"229","hashOfConfig":"121"},{"size":6551,"mtime":1609467540418,"results":"230","hashOfConfig":"121"},{"size":786,"mtime":1609415985172,"results":"231","hashOfConfig":"121"},{"size":10219,"mtime":1609576450867,"results":"232","hashOfConfig":"121"},{"size":1545,"mtime":1609415985063,"results":"233","hashOfConfig":"121"},{"size":2983,"mtime":1609580993298,"results":"234","hashOfConfig":"121"},{"size":3293,"mtime":1609580993310,"results":"235","hashOfConfig":"121"},{"size":1740,"mtime":1609592216629,"results":"236","hashOfConfig":"121"},{"size":1898,"mtime":1609767069793,"results":"237","hashOfConfig":"121"},{"size":3375,"mtime":1609751145756,"results":"238","hashOfConfig":"121"},{"size":2245,"mtime":1609750592164,"results":"239","hashOfConfig":"121"},{"size":3718,"mtime":1610016627127,"results":"240","hashOfConfig":"121"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},"179wsum",{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"243"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"243"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"243"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},"1omwm79",{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"243"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"243"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"406"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"243"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"406"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"243"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"419"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"419"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"419"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"419"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"243"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"243"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"243"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"243"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"243"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"243"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474","usedDeprecatedRules":"243"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"477"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"243"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"243"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"494"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"243"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"243"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"243"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"243"},"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/index.tsx",[],["506","507"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/analytics.ts",["508"],"import * as Sentry from '@sentry/react';\nimport LogRocket from 'logrocket';\nimport posthog from 'posthog-js';\nimport {isDev} from './config';\n\nconst {\n  REACT_APP_SENTRY_DSN,\n  REACT_APP_LOGROCKET_ID,\n  REACT_APP_POSTHOG_TOKEN = 'cQo4wipp5ipWWXhTN8kTacBItgqo457yDRtzCMOr-Tw',\n  REACT_APP_POSTHOG_API_HOST = 'https://app.posthog.com',\n} = process.env;\n\nexport const isSentryEnabled = REACT_APP_SENTRY_DSN && !isDev;\nexport const isLogRocketEnabled = REACT_APP_LOGROCKET_ID && !isDev;\nexport const isPostHogEnabled = REACT_APP_POSTHOG_TOKEN && !isDev;\n\nexport const init = () => {\n  if (isSentryEnabled) {\n    Sentry.init({dsn: REACT_APP_SENTRY_DSN});\n  }\n\n  if (isLogRocketEnabled && REACT_APP_LOGROCKET_ID) {\n    LogRocket.init(REACT_APP_LOGROCKET_ID);\n  }\n\n  if (isPostHogEnabled) {\n    posthog.init(REACT_APP_POSTHOG_TOKEN, {\n      api_host: REACT_APP_POSTHOG_API_HOST,\n    });\n  }\n};\n\nexport const identify = (id: any, email: string) => {\n  if (isSentryEnabled) {\n    Sentry.setUser({id, email});\n  }\n\n  if (isLogRocketEnabled) {\n    LogRocket.identify(id, {email});\n  }\n\n  if (isPostHogEnabled) {\n    posthog.identify(id);\n    posthog.people && posthog.people.set({email});\n  }\n};\n\nexport default {\n  init,\n  identify,\n};\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/serviceWorker.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/App.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/AuthProvider.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/config.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/Login.tsx",["509","510","511","512"],"import React, {useEffect, useState} from 'react';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport {Box, Flex} from 'theme-ui';\nimport qs from 'query-string';\nimport {\n  TextField,\n  Label,\n  ITextFieldStyles,\n  PrimaryButton,\n  MessageBar,\n  MessageBarType,\n  DefaultButton,\n} from '@fluentui/react';\nimport {Button, Input, Text, Title} from '../common';\nimport {useAuth} from './AuthProvider';\nimport logger from '../../logger';\n\ntype Props = RouteComponentProps & {\n  onSubmit: (params: any) => Promise<void>;\n};\ntype State = {\n  loading: boolean;\n  email: string;\n  password: string;\n  error: any;\n  redirect: string;\n};\n\nclass Login extends React.Component<Props, State> {\n  state: State = {\n    loading: false,\n    email: '',\n    password: '',\n    error: null,\n    redirect: '/',\n  };\n\n  componentDidMount() {\n    const {redirect = '/'} = qs.parse(this.props.location.search);\n\n    this.setState({redirect: String(redirect)});\n  }\n\n  handleChangeEmail = (e: any) => {\n    this.setState({email: e.target.value});\n  };\n\n  handleChangePassword = (e: any) => {\n    this.setState({password: e.target.value});\n  };\n\n  handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    this.setState({loading: true, error: null});\n    const {email, password, redirect} = this.state;\n\n    // TODO: handle login through API\n    this.props\n      .onSubmit({email, password})\n      .then(() => this.props.history.push(redirect))\n      .catch((err) => {\n        logger.error('Error!', err);\n        const error =\n          err.response?.body?.error?.message || 'Invalid credentials';\n\n        this.setState({error, loading: false});\n      });\n  };\n\n  render() {\n    const {location} = this.props;\n    const {loading, email, password, error} = this.state;\n\n    return (\n      <Flex\n        px={[2, 5]}\n        py={5}\n        sx={{\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Box sx={{width: '100%', maxWidth: 320}}>\n          <Title level={1}>Welcome back</Title>\n\n          <form onSubmit={this.handleSubmit}>\n            <Box mb={2}>\n              <label htmlFor=\"email\">Email</label>\n              <Input\n                id=\"email\"\n                size=\"large\"\n                type=\"email\"\n                autoComplete=\"username\"\n                value={email}\n                onChange={this.handleChangeEmail}\n              />\n            </Box>\n\n            <Box mb={2}>\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                id=\"password\"\n                size=\"large\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={this.handleChangePassword}\n              />\n            </Box>\n\n            <Box mt={3}>\n              <Button\n                block\n                size=\"large\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                loading={loading}\n              >\n                Log in\n              </Button>\n            </Box>\n\n            {error && (\n              <Box mt={2}>\n                <Text type=\"danger\">{error}</Text>\n              </Box>\n            )}\n\n            <Box mt={error ? 3 : 4}>\n              Don't have an account?{' '}\n              <Link to={`/register${location.search}`}>Sign up!</Link>\n            </Box>\n            <Box my={3}>\n              <Link to=\"/reset-password\">Forgot your password?</Link>\n            </Box>\n          </form>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nconst Login2 = (props: any) => {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [redirect, setRedirect] = useState('/');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState<boolean | null>(null);\n\n  useEffect(() => {}, []);\n\n  const handleChangeEmail = (e: any) => {\n    setEmail(e.target.value);\n    setError(null);\n    setLoading(null);\n  };\n\n  const handleChangePassword = (e: any) => {\n    setPassword(e.target.value);\n    setError(null);\n    setLoading(null);\n  };\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    setError(null);\n    setLoading(null);\n\n    // TODO: handle login through API\n    props\n      .onSubmit({email, password})\n      .then(() => props.history.push(redirect))\n      .catch((err: any) => {\n        logger.error('Error!', err);\n        const error =\n          err.response?.body?.error?.message || 'Invalid credentials';\n        setError(error);\n        setLoading(false);\n      });\n  };\n\n  const textFieldStyles: Partial<ITextFieldStyles> = {\n    field: {height: 50, fontSize: '1rem', color: 'black', padding: '12px 16px'},\n    fieldGroup: {height: 52, border: '1px black solid'},\n    revealButton: {height: 50},\n  };\n\n  return (\n    <div className=\"h-screen gentle-flex\">\n      <div\n        className=\"border-true-gray-200 border-2 border-solid flex flex-col rounded\"\n        style={{\n          width: '464px',\n          // height: '554px',\n        }}\n      >\n        <div\n          className=\"w-full\"\n          style={{\n            padding: '64px',\n          }}\n        >\n          <div\n            className=\"font-medium\"\n            style={{fontSize: '36px', marginBottom: '24px'}}\n          >\n            Sign in\n          </div>\n          <form onSubmit={handleSubmit}>\n            <div style={{paddingBottom: '24px'}}>\n              <Label>Email</Label>\n              <TextField\n                type=\"email\"\n                styles={textFieldStyles}\n                onChange={handleChangeEmail}\n                value={email}\n                id={'email'}\n              />\n            </div>\n            <div style={{paddingBottom: '24px'}}>\n              <Label>Password</Label>\n              <TextField\n                id=\"password\"\n                type=\"password\"\n                styles={textFieldStyles}\n                onChange={handleChangePassword}\n                value={password}\n                canRevealPassword\n              />\n            </div>\n            <PrimaryButton\n              className=\"login-button\"\n              text=\"Submit\"\n              type=\"submit\"\n            />\n\n            {error && (\n              <MessageBar\n                messageBarType={MessageBarType.error}\n                isMultiline={false}\n                // onDismiss={p.resetChoice}\n                dismissButtonAriaLabel=\"Close\"\n                className=\"mt-5\"\n              >\n                {error}\n              </MessageBar>\n            )}\n          </form>\n\n          {/*<DefaultButton text=\"使用微信登录\"/>*/}\n          {/*<DefaultButton text=\"使用飞书登录\"/>*/}\n        </div>\n        <div\n          className=\"\"\n          style={{\n            paddingRight: '64px',\n            paddingLeft: '64px',\n            paddingBottom: '64px',\n          }}\n        >\n          <Link to=\"/register\">\n            <span\n              className=\"border-b-2 border-solid\"\n              style={{\n                color: '#2251ff',\n                borderColor: '#2251ff',\n              }}\n            >\n              注册账号\n            </span>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst LoginPage = (props: RouteComponentProps) => {\n  const auth = useAuth();\n\n  return <Login2 {...props} onSubmit={auth.login} />;\n};\n\nexport default LoginPage;\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/Register.tsx",["513","514","515"],"import React, {useEffect, useState} from 'react';\nimport {RouteComponentProps, Link} from 'react-router-dom';\nimport {Box, Flex} from 'theme-ui';\nimport qs from 'query-string';\nimport {Button, Input, Text, Title} from '../common';\nimport {useAuth} from './AuthProvider';\nimport logger from '../../logger';\nimport {\n  ITextFieldStyles,\n  Label,\n  MessageBar,\n  MessageBarType,\n  PrimaryButton,\n  TextField,\n} from '@fluentui/react';\n\ntype Props = RouteComponentProps<{invite?: string}> & {\n  onSubmit: (params: any) => Promise<void>;\n};\ntype State = {\n  loading: boolean;\n  submitted: boolean;\n  companyName: string;\n  email: string;\n  password: string;\n  passwordConfirmation: string;\n  inviteToken?: string;\n  redirect: string;\n  error: any;\n};\n\nclass Register extends React.Component<Props, State> {\n  state: State = {\n    loading: false,\n    submitted: false,\n    companyName: '',\n    email: '',\n    password: '',\n    passwordConfirmation: '',\n    inviteToken: '',\n    redirect: '/account/getting-started',\n    error: null,\n  };\n\n  componentDidMount() {\n    const {redirect = '/account/getting-started'} = qs.parse(\n      this.props.location.search\n    );\n    const {invite: inviteToken} = this.props.match.params;\n\n    this.setState({inviteToken, redirect: String(redirect)});\n  }\n\n  handleChangeCompanyName = (e: any) => {\n    this.setState({companyName: e.target.value});\n  };\n\n  handleChangeEmail = (e: any) => {\n    this.setState({email: e.target.value});\n  };\n\n  handleChangePassword = (e: any) => {\n    this.setState({password: e.target.value});\n  };\n\n  handleChangePasswordConfirmation = (e: any) => {\n    this.setState({passwordConfirmation: e.target.value});\n  };\n\n  getValidationError = () => {\n    const {\n      companyName,\n      email,\n      password,\n      passwordConfirmation,\n      inviteToken,\n    } = this.state;\n\n    if (!companyName && !inviteToken) {\n      return 'Company name is required';\n    } else if (!email) {\n      return 'Email is required';\n    } else if (!password) {\n      return 'Password is required';\n    } else if (password.length < 8) {\n      return 'Password must be at least 8 characters';\n    } else if (password !== passwordConfirmation) {\n      return 'Password confirmation does not match';\n    } else {\n      return null;\n    }\n  };\n\n  handleInputBlur = () => {\n    if (!this.state.submitted) {\n      return;\n    }\n\n    this.setState({error: this.getValidationError()});\n  };\n\n  handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    const error = this.getValidationError();\n\n    if (error) {\n      this.setState({error, submitted: true});\n\n      return;\n    }\n\n    this.setState({loading: true, submitted: true, error: null});\n    const {\n      companyName,\n      inviteToken,\n      email,\n      password,\n      passwordConfirmation,\n      redirect,\n    } = this.state;\n\n    this.props\n      .onSubmit({\n        companyName,\n        inviteToken,\n        email,\n        password,\n        passwordConfirmation,\n      })\n      .then(() => this.props.history.push(redirect))\n      .catch((err) => {\n        logger.error('Error!', err);\n        // TODO: provide more granular error messages?\n        const error =\n          err.response?.body?.error?.message || 'Invalid credentials';\n\n        this.setState({error, loading: false});\n      });\n  };\n\n  render() {\n    const {location} = this.props;\n    const {\n      loading,\n      inviteToken,\n      companyName,\n      email,\n      password,\n      passwordConfirmation,\n      error,\n    } = this.state;\n\n    return (\n      <Flex\n        px={[2, 5]}\n        py={5}\n        sx={{\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Box sx={{width: '100%', maxWidth: 320}}>\n          <Title level={1}>Get started</Title>\n          <form onSubmit={this.handleSubmit}>\n            {!inviteToken && (\n              <Box mb={2}>\n                <label htmlFor=\"companyName\">Company Name</label>\n                <Input\n                  id=\"companyName\"\n                  size=\"large\"\n                  type=\"text\"\n                  autoComplete=\"company-name\"\n                  value={companyName}\n                  onChange={this.handleChangeCompanyName}\n                  onBlur={this.handleInputBlur}\n                />\n              </Box>\n            )}\n\n            <Box mb={2}>\n              <label htmlFor=\"email\">Email</label>\n              <Input\n                id=\"email\"\n                size=\"large\"\n                type=\"email\"\n                autoComplete=\"username\"\n                value={email}\n                onChange={this.handleChangeEmail}\n                onBlur={this.handleInputBlur}\n              />\n            </Box>\n\n            <Box mb={2}>\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                id=\"password\"\n                size=\"large\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                onChange={this.handleChangePassword}\n                onBlur={this.handleInputBlur}\n              />\n            </Box>\n\n            <Box mb={2}>\n              <label htmlFor=\"confirm_password\">Confirm password</label>\n              <Input\n                id=\"confirm_password\"\n                size=\"large\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                value={passwordConfirmation}\n                onChange={this.handleChangePasswordConfirmation}\n                onBlur={this.handleInputBlur}\n              />\n            </Box>\n\n            <Box mt={3}>\n              <Button\n                block\n                size=\"large\"\n                type=\"primary\"\n                htmlType=\"submit\"\n                loading={loading}\n              >\n                Register\n              </Button>\n            </Box>\n\n            {error && (\n              <Box mt={2}>\n                <Text type=\"danger\">{error}</Text>\n              </Box>\n            )}\n\n            <Box mt={error ? 3 : 4}>\n              Already have an account?{' '}\n              <Link to={`/login${location.search}`}>Log in!</Link>\n            </Box>\n          </form>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nconst Register2 = (props: any) => {\n  const [email, setEmail] = useState<string | undefined>(undefined);\n  const [password, setPassword] = useState<string | undefined>(undefined);\n  const [passwordConfirmation, setPasswordConfirmation] = useState();\n  const [submitted, setSubmitted] = useState<boolean>(false);\n  const [redirect, setRedirect] = useState('/');\n  const [error, setError] = useState<any>(null);\n  const [loading, setLoading] = useState<boolean | null>(null);\n\n  useEffect(() => {}, []);\n\n  const handleChangeEmail = (e: any) => {\n    setEmail(e.target.value);\n    setError(null);\n    setLoading(null);\n  };\n\n  const handleChangePassword = (e: any) => {\n    setPassword(e.target.value);\n    setError(null);\n    setLoading(null);\n  };\n\n  const handleChangePasswordConfirmation = (e: any) => {\n    setPasswordConfirmation(e.target.value);\n  };\n\n  const getValidationError = () => {\n    if (!email) {\n      return 'Email is required';\n    } else if (!password) {\n      return 'Password is required';\n    } else if (password.length < 8) {\n      return 'Password must be at least 8 characters';\n    } else if (password !== passwordConfirmation) {\n      return 'Password confirmation does not match';\n    } else {\n      return null;\n    }\n  };\n  const handleInputBlur = () => {\n    if (!submitted) {\n      return;\n    }\n\n    setError(getValidationError());\n  };\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n\n    const error = getValidationError();\n\n    if (error) {\n      setError(error);\n      setSubmitted(false);\n      return;\n    }\n\n    setLoading(true);\n    setSubmitted(true);\n    setError(null);\n\n    props\n      .onSubmit({\n        companyName: 'x',\n        // inviteToken: '',\n        email,\n        password,\n        passwordConfirmation,\n      })\n      .then(() => props.history.push(redirect))\n      .catch((err: any) => {\n        logger.error('Error!', err);\n        // TODO: provide more granular error messages?\n        const error =\n          err.response?.body?.error?.message || 'Invalid credentials';\n\n        setError(error);\n        setLoading(false);\n      });\n  };\n  const textFieldStyles: Partial<ITextFieldStyles> = {\n    field: {height: 50, fontSize: '1rem', color: 'black', padding: '12px 16px'},\n    fieldGroup: {height: 52, border: '1px black solid'},\n    revealButton: {height: 50},\n  };\n\n  return (\n    <div className=\"h-screen gentle-flex\">\n      <div\n        className=\"border-true-gray-200 border-2 border-solid flex flex-col rounded\"\n        style={{\n          width: '464px',\n          // height: '554px',\n        }}\n      >\n        <div\n          className=\"w-full\"\n          style={{\n            padding: '64px',\n          }}\n        >\n          <div\n            className=\"font-medium\"\n            style={{fontSize: '36px', marginBottom: '24px'}}\n          >\n            Sign up\n          </div>\n          <form onSubmit={handleSubmit}>\n            <div style={{paddingBottom: '24px'}}>\n              <Label>Email</Label>\n              <TextField\n                type=\"email\"\n                styles={textFieldStyles}\n                onChange={handleChangeEmail}\n                value={email}\n                id={'email'}\n                onBlur={handleInputBlur}\n              />\n            </div>\n            <div style={{paddingBottom: '24px'}}>\n              <Label>Password</Label>\n              <TextField\n                id=\"password\"\n                type=\"password\"\n                styles={textFieldStyles}\n                onChange={handleChangePassword}\n                value={password}\n                canRevealPassword\n                onBlur={handleInputBlur}\n              />\n            </div>\n            <div style={{paddingBottom: '24px'}}>\n              <Label>Confirm Password</Label>\n              <TextField\n                id=\"confirm_password\"\n                type=\"password\"\n                styles={textFieldStyles}\n                onChange={handleChangePasswordConfirmation}\n                value={passwordConfirmation}\n                canRevealPassword\n                onBlur={handleInputBlur}\n              />\n            </div>\n\n            <PrimaryButton\n              className=\"login-button\"\n              text=\"Submit\"\n              type=\"submit\"\n            />\n\n            {error && (\n              <MessageBar\n                messageBarType={MessageBarType.error}\n                isMultiline={false}\n                // onDismiss={p.resetChoice}\n                dismissButtonAriaLabel=\"Close\"\n                className=\"mt-5\"\n              >\n                {error}\n              </MessageBar>\n            )}\n          </form>\n\n          {/*<DefaultButton text=\"使用微信登录\"/>*/}\n          {/*<DefaultButton text=\"使用飞书登录\"/>*/}\n        </div>\n        <div\n          className=\"\"\n          style={{\n            paddingRight: '64px',\n            paddingLeft: '64px',\n            paddingBottom: '64px',\n          }}\n        >\n          <Link to=\"/login\">\n            <span\n              className=\"border-b-2 border-solid\"\n              style={{\n                color: '#2251ff',\n                borderColor: '#2251ff',\n              }}\n            >\n              登录已有账号\n            </span>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst RegisterPage = (props: RouteComponentProps) => {\n  const auth = useAuth();\n\n  return <Register2 {...props} onSubmit={auth.register} />;\n};\n\nexport default RegisterPage;\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/api.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/storage.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/EmailVerification.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/RequestPasswordReset.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/PasswordResetRequested.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/auth/PasswordReset.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/Dashboard.tsx",[],["516","517"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/Sandbox.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/demo/Demo.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/demo/BotDemo.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/PricingOverview.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/SharedConversation.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/landing/LadingPage.tsx",["518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538"],"import React, {useEffect, useState} from 'react';\nimport {\n  useLocation,\n  Switch,\n  Redirect,\n  Route,\n  Link,\n  RouteComponentProps,\n} from 'react-router-dom';\n\nexport default function LadingPage() {\n  return (\n    <div className=\"flex flex-col\">\n      <header className=\"text-gray-600 body-font\">\n        <div className=\"container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center\">\n          <a className=\"flex title-font font-medium items-center text-gray-900 mb-4 md:mb-0\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              className=\"w-10 h-10 text-white p-2 bg-blue-500 rounded-full\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5\" />\n            </svg>\n            <span className=\"ml-3 text-xl\">有期</span>\n          </a>\n          <nav className=\"md:ml-auto flex flex-wrap items-center text-base justify-center\">\n            <a className=\"mr-5 hover:text-gray-900 cursor-pointer\">产品</a>\n            <a className=\"mr-5 hover:text-gray-900 cursor-pointer\">价格</a>\n            <a className=\"mr-5 hover:text-gray-900 cursor-pointer\">集成</a>\n            <a className=\"mr-5 hover:text-gray-900 cursor-pointer\">解决方案</a>\n            <a className=\"mr-5 hover:text-gray-900 cursor-pointer\">团队版</a>\n          </nav>\n          <Link to=\"/login\">\n            <span className=\"mr-5 inline-flex items-center  border-0 py-1 px-3 focus:outline-none hover:bg-gray-200 rounded text-base mt-4 md:mt-0 cursor-pointer\">\n              登录\n            </span>\n          </Link>\n          <Link to=\"/register\">\n            <span className=\"inline-flex items-center bg-blue-500 border-0 py-1 px-3 focus:outline-none hover:bg-blue-600 rounded text-white mt-4 md:mt-0 cursor-pointer\">\n              注册\n            </span>\n          </Link>\n        </div>\n      </header>\n      <section className=\"text-gray-600 body-font\">\n        <div className=\"container mx-auto flex px-5 py-24 md:flex-row flex-col items-center\">\n          <div className=\"lg:flex-grow md:w-1/2 lg:pr-24 md:pr-16 flex flex-col md:items-start md:text-left mb-16 md:mb-0 items-center text-center\">\n            <h1 className=\"title-font sm:text-4xl text-3xl mb-4 font-medium text-gray-900\">\n              简单高效安排会面\n            </h1>\n            <p className=\"mb-8 leading-relaxed\">让您的时间井井有条</p>\n            <div className=\"flex justify-center\">\n              <Link to=\"/register\">\n                <span className=\"inline-flex text-white bg-blue-500 border-0 py-2 px-6 focus:outline-none hover:bg-blue-600 rounded text-lg\">\n                  开始免费使用\n                </span>\n              </Link>\n              {/* <button\n                        class=\"ml-4 inline-flex text-gray-700 bg-gray-100 border-0 py-2 px-6 focus:outline-none hover:bg-gray-200 rounded text-lg\">Button</button>\n                    */}\n            </div>\n          </div>\n          <div className=\"lg:max-w-lg lg:w-full md:w-1/2 w-5/6\">\n            <img\n              className=\"object-cover object-center rounded\"\n              alt=\"hero\"\n              src=\"https://dummyimage.com/720x600\"\n            />\n          </div>\n        </div>\n      </section>\n      <section className=\"text-gray-600 body-font\">\n        <div className=\"container px-5 py-24 mx-auto flex flex-wrap\">\n          <div className=\"flex flex-wrap w-full\">\n            <div className=\"lg:w-2/5 md:w-1/2 md:pr-10 md:py-6\">\n              <div className=\"flex relative pb-12\">\n                <div className=\"h-full w-10 absolute inset-0 flex items-center justify-center\">\n                  <div className=\"h-full w-1 bg-gray-200 pointer-events-none\" />\n                </div>\n                <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-blue-500 inline-flex items-center justify-center text-white relative z-10\">\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-5 h-5\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z\" />\n                  </svg>\n                </div>\n                <div className=\"flex-grow pl-4\">\n                  <h2 className=\"font-medium title-font text-sm text-gray-900 mb-1 tracking-wider\">\n                    STEP 1\n                  </h2>\n                  <p className=\"leading-relaxed\">\n                    VHS cornhole pop-up, try-hard 8-bit iceland helvetica.\n                    Kinfolk bespoke try-hard cliche palo santo offal.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex relative pb-12\">\n                <div className=\"h-full w-10 absolute inset-0 flex items-center justify-center\">\n                  <div className=\"h-full w-1 bg-gray-200 pointer-events-none\" />\n                </div>\n                <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-blue-500 inline-flex items-center justify-center text-white relative z-10\">\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-5 h-5\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M22 12h-4l-3 9L9 3l-3 9H2\" />\n                  </svg>\n                </div>\n                <div className=\"flex-grow pl-4\">\n                  <h2 className=\"font-medium title-font text-sm text-gray-900 mb-1 tracking-wider\">\n                    STEP 2\n                  </h2>\n                  <p className=\"leading-relaxed\">\n                    Vice migas literally kitsch +1 pok pok. Truffaut hot chicken\n                    slow-carb health goth, vape typewriter.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex relative pb-12\">\n                <div className=\"h-full w-10 absolute inset-0 flex items-center justify-center\">\n                  <div className=\"h-full w-1 bg-gray-200 pointer-events-none\" />\n                </div>\n                <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-blue-500 inline-flex items-center justify-center text-white relative z-10\">\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-5 h-5\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <circle cx={12} cy={5} r={3} />\n                    <path d=\"M12 22V8M5 12H2a10 10 0 0020 0h-3\" />\n                  </svg>\n                </div>\n                <div className=\"flex-grow pl-4\">\n                  <h2 className=\"font-medium title-font text-sm text-gray-900 mb-1 tracking-wider\">\n                    STEP 3\n                  </h2>\n                  <p className=\"leading-relaxed\">\n                    Coloring book nar whal glossier master cleanse umami. Salvia\n                    +1 master cleanse blog taiyaki.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex relative pb-12\">\n                <div className=\"h-full w-10 absolute inset-0 flex items-center justify-center\">\n                  <div className=\"h-full w-1 bg-gray-200 pointer-events-none\" />\n                </div>\n                <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-blue-500 inline-flex items-center justify-center text-white relative z-10\">\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-5 h-5\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M20 21v-2a4 4 0 00-4-4H8a4 4 0 00-4 4v2\" />\n                    <circle cx={12} cy={7} r={4} />\n                  </svg>\n                </div>\n                <div className=\"flex-grow pl-4\">\n                  <h2 className=\"font-medium title-font text-sm text-gray-900 mb-1 tracking-wider\">\n                    STEP 4\n                  </h2>\n                  <p className=\"leading-relaxed\">\n                    VHS cornhole pop-up, try-hard 8-bit iceland helvetica.\n                    Kinfolk bespoke try-hard cliche palo santo offal.\n                  </p>\n                </div>\n              </div>\n              <div className=\"flex relative\">\n                <div className=\"flex-shrink-0 w-10 h-10 rounded-full bg-blue-500 inline-flex items-center justify-center text-white relative z-10\">\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-5 h-5\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M22 11.08V12a10 10 0 11-5.93-9.14\" />\n                    <path d=\"M22 4L12 14.01l-3-3\" />\n                  </svg>\n                </div>\n                <div className=\"flex-grow pl-4\">\n                  <h2 className=\"font-medium title-font text-sm text-gray-900 mb-1 tracking-wider\">\n                    FINISH\n                  </h2>\n                  <p className=\"leading-relaxed\">\n                    Pitchfork ugh tattooed scenester echo park gastropub\n                    whatever cold-pressed retro.\n                  </p>\n                </div>\n              </div>\n            </div>\n            <img\n              className=\"lg:w-3/5 md:w-1/2 object-cover object-center rounded-lg md:mt-0 mt-12\"\n              src=\"https://dummyimage.com/1200x500\"\n              alt=\"step\"\n            />\n          </div>\n        </div>\n      </section>\n      <section className=\"text-gray-600 body-font\">\n        <div className=\"container px-5 py-24 mx-auto\">\n          <h1 className=\"sm:text-3xl text-2xl font-medium title-font text-center text-gray-900 mb-20\">\n            Raw Denim Heirloom Man Braid <br className=\"hidden sm:block\" />\n            Selfies Wayfarers\n          </h1>\n          <div className=\"flex flex-wrap sm:-m-4 -mx-4 -mb-10 -mt-4 md:space-y-0 space-y-6\">\n            <div className=\"p-4 md:w-1/3 flex\">\n              <div className=\"w-12 h-12 inline-flex items-center justify-center rounded-full bg-blue-100 text-blue-500 mb-4 flex-shrink-0\">\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  className=\"w-6 h-6\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M22 12h-4l-3 9L9 3l-3 9H2\" />\n                </svg>\n              </div>\n              <div className=\"flex-grow pl-6\">\n                <h2 className=\"text-gray-900 text-lg title-font font-medium mb-2\">\n                  Shooting Stars\n                </h2>\n                <p className=\"leading-relaxed text-base\">\n                  Blue bottle crucifix vinyl post-ironic four dollar toast vegan\n                  taxidermy. Gastropub indxgo juice poutine, ramps microdosing\n                  banh mi pug VHS try-hard ugh iceland kickstarter tumblr\n                  live-edge tilde.\n                </p>\n                <a className=\"mt-3 text-blue-500 inline-flex items-center\">\n                  Learn More\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-4 h-4 ml-2\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M5 12h14M12 5l7 7-7 7\" />\n                  </svg>\n                </a>\n              </div>\n            </div>\n            <div className=\"p-4 md:w-1/3 flex\">\n              <div className=\"w-12 h-12 inline-flex items-center justify-center rounded-full bg-blue-100 text-blue-500 mb-4 flex-shrink-0\">\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  className=\"w-6 h-6\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <circle cx={6} cy={6} r={3} />\n                  <circle cx={6} cy={18} r={3} />\n                  <path d=\"M20 4L8.12 15.88M14.47 14.48L20 20M8.12 8.12L12 12\" />\n                </svg>\n              </div>\n              <div className=\"flex-grow pl-6\">\n                <h2 className=\"text-gray-900 text-lg title-font font-medium mb-2\">\n                  The Catalyzer\n                </h2>\n                <p className=\"leading-relaxed text-base\">\n                  Blue bottle crucifix vinyl post-ironic four dollar toast vegan\n                  taxidermy. Gastropub indxgo juice poutine, ramps microdosing\n                  banh mi pug VHS try-hard ugh iceland kickstarter tumblr\n                  live-edge tilde.\n                </p>\n                <a className=\"mt-3 text-blue-500 inline-flex items-center\">\n                  Learn More\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-4 h-4 ml-2\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M5 12h14M12 5l7 7-7 7\" />\n                  </svg>\n                </a>\n              </div>\n            </div>\n            <div className=\"p-4 md:w-1/3 flex\">\n              <div className=\"w-12 h-12 inline-flex items-center justify-center rounded-full bg-blue-100 text-blue-500 mb-4 flex-shrink-0\">\n                <svg\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  className=\"w-6 h-6\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path d=\"M20 21v-2a4 4 0 00-4-4H8a4 4 0 00-4 4v2\" />\n                  <circle cx={12} cy={7} r={4} />\n                </svg>\n              </div>\n              <div className=\"flex-grow pl-6\">\n                <h2 className=\"text-gray-900 text-lg title-font font-medium mb-2\">\n                  Neptune\n                </h2>\n                <p className=\"leading-relaxed text-base\">\n                  Blue bottle crucifix vinyl post-ironic four dollar toast vegan\n                  taxidermy. Gastropub indxgo juice poutine, ramps microdosing\n                  banh mi pug VHS try-hard ugh iceland kickstarter tumblr\n                  live-edge tilde.\n                </p>\n                <a className=\"mt-3 text-blue-500 inline-flex items-center\">\n                  Learn More\n                  <svg\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    className=\"w-4 h-4 ml-2\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M5 12h14M12 5l7 7-7 7\" />\n                  </svg>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"text-gray-600 body-font\">\n        <div className=\"container px-5 py-24 mx-auto\">\n          <div className=\"flex flex-col text-center w-full mb-12\">\n            <h1 className=\"sm:text-3xl text-2xl font-medium title-font mb-4 text-gray-900\">\n              Master Cleanse Reliac Heirloom\n            </h1>\n            <p className=\"lg:w-2/3 mx-auto leading-relaxed text-base\">\n              Whatever cardigan tote bag tumblr hexagon brooklyn asymmetrical\n              gentrify, subway tile poke farm-to-table. Franzen you probably\n              haven't heard of them man bun deep.\n            </p>\n          </div>\n          <div className=\"flex lg:w-2/3 w-full sm:flex-row flex-col mx-auto px-8 sm:space-x-4 sm:space-y-0 space-y-4 sm:px-0 items-end\">\n            <div className=\"relative flex-grow w-full\">\n              <label\n                htmlFor=\"full-name\"\n                className=\"leading-7 text-sm text-gray-600\"\n              >\n                Full Name\n              </label>\n              <input\n                type=\"text\"\n                id=\"full-name\"\n                name=\"full-name\"\n                className=\"w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-blue-500 focus:bg-transparent focus:ring-2 focus:ring-blue-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\n              />\n            </div>\n            <div className=\"relative flex-grow w-full\">\n              <label\n                htmlFor=\"email\"\n                className=\"leading-7 text-sm text-gray-600\"\n              >\n                Email\n              </label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                className=\"w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-blue-500 focus:bg-transparent focus:ring-2 focus:ring-blue-200 text-base outline-none text-gray-700 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\n              />\n            </div>\n            <button className=\"text-white bg-blue-500 border-0 py-2 px-8 focus:outline-none hover:bg-blue-600 rounded text-lg\">\n              Button\n            </button>\n          </div>\n        </div>\n      </section>\n      <footer className=\"text-gray-600 body-font\">\n        <div className=\"container px-5 py-8 mx-auto flex items-center sm:flex-row flex-col\">\n          <a className=\"flex title-font font-medium items-center md:justify-start justify-center text-gray-900\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              className=\"w-10 h-10 text-white p-2 bg-blue-500 rounded-full\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5\" />\n            </svg>\n            <span className=\"ml-3 text-xl\">tailblocks</span>\n          </a>\n          <p className=\"text-sm text-gray-500 sm:ml-4 sm:pl-4 sm:border-l-2 sm:border-gray-200 sm:py-2 sm:mt-0 mt-4\">\n            © 2020 tailblocks —\n            <a\n              href=\"https://twitter.com/knyttneve\"\n              className=\"text-gray-600 ml-1\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              @knyttneve\n            </a>\n          </p>\n          <span className=\"inline-flex sm:ml-auto sm:mt-0 mt-4 justify-center sm:justify-start\">\n            <a className=\"text-gray-500\">\n              <svg\n                fill=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                className=\"w-5 h-5\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z\" />\n              </svg>\n            </a>\n            <a className=\"ml-3 text-gray-500\">\n              <svg\n                fill=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                className=\"w-5 h-5\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M23 3a10.9 10.9 0 01-3.14 1.53 4.48 4.48 0 00-7.86 3v1A10.66 10.66 0 013 4s-4 9 5 13a11.64 11.64 0 01-7 2c9 5 20 0 20-11.5a4.5 4.5 0 00-.08-.83A7.72 7.72 0 0023 3z\" />\n              </svg>\n            </a>\n            <a className=\"ml-3 text-gray-500\">\n              <svg\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                className=\"w-5 h-5\"\n                viewBox=\"0 0 24 24\"\n              >\n                <rect width={20} height={20} x={2} y={2} rx={5} ry={5} />\n                <path d=\"M16 11.37A4 4 0 1112.63 8 4 4 0 0116 11.37zm1.5-4.87h.01\" />\n              </svg>\n            </a>\n            <a className=\"ml-3 text-gray-500\">\n              <svg\n                fill=\"currentColor\"\n                stroke=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={0}\n                className=\"w-5 h-5\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  stroke=\"none\"\n                  d=\"M16 8a6 6 0 016 6v7h-4v-7a2 2 0 00-2-2 2 2 0 00-2 2v7h-4v-7a6 6 0 016-6zM2 9h4v12H2z\"\n                />\n                <circle cx={4} cy={4} r={2} stroke=\"none\" />\n              </svg>\n            </a>\n          </span>\n        </div>\n      </footer>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/logger.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/utils.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/common.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/icons.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/AllConversations.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationsProvider.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/PriorityConversations.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/MyConversations.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ClosedConversations.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/BillingOverview.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/AccountOverview.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/UserProfile.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/integrations/IntegrationsOverview.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/GettingStartedOverview.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/customers/CustomersPage.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/InstallingStorytime.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/LiveSessionViewer.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/SessionsOverview.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/ReportingDashboard.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationMessages.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/socket.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/DatePicker.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationsContainer.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ChatMessage.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/Spinner.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/CustomerBreakdownChart.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/MessagesSentVsReceivedChart.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/MessagesByDayOfWeekChart.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/MessagesPerUserChart.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/MessagesPerDayChart.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/SessionsTable.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/sessions/ConversationSidebar.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationDetailsSidebar.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/customers/CustomersTable.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/integrations/NewWebhookModal.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/support.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/integrations/WebhooksTable.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/integrations/IntegrationsTable.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/WorkingHoursSelector.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/types.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/DisabledUsersTable.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/AccountUsersTable.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/PaymentForm.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/support.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/reporting/support.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationFooter.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationClosing.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ChatMessageBox.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/SidebarCustomerNotes.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/customers/CustomerDetailsModal.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/account/support.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/SidebarTagSection.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationItem.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/conversations/ConversationHeader.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components/billing/CardInputSection.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/Dashboard.tsx",["539","540","541","542","543","544","545","546"],"import React, {useEffect} from 'react';\nimport Header from './Header';\nimport {\n  useLocation,\n  Switch,\n  Redirect,\n  Route,\n  Link,\n  RouteComponentProps,\n} from 'react-router-dom';\nimport _ from 'lodash';\nimport EventType from './EventType';\nimport {useAuth} from '../components/auth/AuthProvider';\nimport {EventTypes} from './EventTypes';\nimport {ConversationsProvider} from '../components/conversations/ConversationsProvider';\nimport {EventsProvider, useEvents} from './EventsProvider';\nimport NewEventType from './events/NewEventType';\nimport NavSection from './NavSection';\nimport ScheduledEvents from './events/ScheduledEvents';\n\nfunction Dashboard(props: RouteComponentProps) {\n  const auth = useAuth();\n  const {pathname} = useLocation();\n\n  return (\n    <div\n      className=\"flex flex-row h-full w-screen\"\n      style={{\n        minHeight: '100vh',\n      }}\n    >\n      {/*<Header />*/}\n\n      {/*<NavSection />*/}\n\n      <div\n        className=\"border-r-4 border-solid border-gray-100 pt-5\"\n        style={{width: '200px', backgroundColor: '#f8fafa'}}\n      >\n        <div className=\"flex flex-col\">\n          <div className=\"pt-4 pb-4 pl-4\">\n            <div>张圆圆</div>\n            <div className=\"text-sm text-blue-500\">letsmeet.com/ycy</div>\n          </div>\n          <div>\n            {[\n              {url: '/events', name: '日程'},\n              {url: '/event_types', name: '日程类型'},\n              {url: '/availability', name: '时间管理'},\n              {url: '/workflows', name: '工作流'},\n            ].map(({url, name}) => {\n              return (\n                <Link to={url} key={url}>\n                  <div\n                    className={`${\n                      pathname === url || pathname.startsWith(url)\n                        ? 'bg-white'\n                        : ''\n                    } pl-4 py-2`}\n                  >\n                    {name}\n                  </div>\n                </Link>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"\" style={{width: 'calc(100% - 200px)'}}>\n        <Switch>\n          <Route exact path=\"/event_types\" component={EventTypes} />\n          <Route exact path=\"/event_types/add\" component={NewEventType} />\n          <Route path=\"/event_types/:id\" component={EventType} />\n          <Route path=\"/events\" component={ScheduledEvents} />\n          <Route path=\"/workflows\" component={() => <div>workflows</div>} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nconst DashboardWrapper = (props: RouteComponentProps) => {\n  return (\n    <EventsProvider>\n      <Dashboard {...props} />\n    </EventsProvider>\n  );\n};\n\nexport default DashboardWrapper;\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/Header.tsx",["547","548","549","550","551"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/store/init.ts",[],["552","553"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/store/index.tsx",["554","555"],"import {useEffect, useState} from 'react';\n// @ts-ignore\nimport * as datascript from 'datascript';\nimport _ from 'lodash';\nimport {useDebouncedCallback} from 'use-debounce';\n\nexport type StoreIdentifier = string;\n\nexport interface Store {\n  conn: any;\n  db: any;\n}\n\nclass StoreContext {\n  current: StoreIdentifier = '';\n  store: Map<StoreIdentifier, Store> = new Map<StoreIdentifier, Store>();\n\n  set(key: StoreIdentifier, conn: any, db: any) {\n    this.store.set(key, {conn, db});\n  }\n\n  get(key: StoreIdentifier) {\n    return this.store.get(key);\n  }\n\n  setCurrent(id: StoreIdentifier) {\n    this.current = id;\n  }\n}\n\nexport const storeContext = new StoreContext();\n\nexport function useStore(): any {\n  const [store, _setStore] = useState(storeContext.get(storeContext.current));\n  const setStore = (key: StoreIdentifier, conn: any, db: any) => {\n    storeContext.set(key, conn, db);\n    storeContext.setCurrent(key);\n    _setStore(storeContext.get(key));\n  };\n  return [store, setStore];\n}\n\nexport function useCurrentStore() {\n  const [current, setCurrent] = useState(storeContext.current);\n  useEffect(() => {\n    storeContext.current = current;\n  }, [current]);\n  return {current, setCurrent};\n}\n\nexport function useConn() {\n  const {current} = useCurrentStore();\n  const store = storeContext.get(current);\n  if (!store) {\n    return null;\n  }\n  return store.conn;\n}\n\nexport function useQuery(\n  query: any,\n  args: any,\n  callback?: any,\n  sortBy?: Function[]\n) {\n  const [results, setResults] = useState<any>([]);\n  const conn = useConn();\n\n  useEffect(() => {\n    if (conn) {\n      const subscriptionId = datascript.posh_q(\n        (value: any) => {\n          if (value && callback) {\n            if (sortBy) {\n              setResults(\n                _.sortBy(\n                  value.map((v: any) => callback(v)),\n                  sortBy\n                )\n              );\n            } else {\n              setResults(value.map((v: any) => callback(v)));\n            }\n          } else if (sortBy) {\n            setResults(_.sortBy(value, sortBy));\n          } else {\n            setResults(value);\n          }\n        },\n        query,\n        conn,\n        args\n      );\n      return () => {\n        return datascript.posh_unsubscribe(subscriptionId);\n      };\n    }\n    return () => {};\n  }, [conn, query, JSON.stringify(args)]);\n  return results;\n}\n\nexport function useQueryOne(\n  query: any,\n  args: any,\n  callback?: any,\n  defaultValue?: any\n) {\n  const results = useQuery(query, args, callback);\n  if (results.length === 1) {\n    return results[0];\n  }\n  if (results.length > 1) {\n    console.log('Results more than one');\n    return results[0];\n  }\n  if (callback) {\n    if (defaultValue) return defaultValue;\n    return {};\n  }\n  return results;\n}\n\nexport function useTransact() {\n  const conn = useConn();\n  return (txData: any) => {\n    datascript.posh_transact(conn, txData, txData);\n  };\n}\nexport function useDebouncedTransact(wait = 100) {\n  const conn = useConn();\n  return useDebouncedCallback((txData: any) => {\n    datascript.posh_transact(conn, txData, txData);\n  }, wait);\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/store/schema.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventType.tsx",["556","557","558","559","560"],"import * as React from 'react';\nimport EventTypeEdit from './EventTypeEdit';\nimport {Link, useParams} from 'react-router-dom';\nimport {useEvents} from './EventsProvider';\nimport Header from './events/Header';\nimport {GeneralSectionExpand} from './events/sections/GeneralSectionExpand';\nimport dayjs from 'dayjs';\nimport {useEffect, useState} from 'react';\nimport GeneralSectionCollapsed from './events/sections/GeneralSectionCollapsed';\nimport AvailabilitySectionExpand from './events/sections/AvailabilitySectionExpand';\nimport AvailabilitySectionCollapsed from './events/sections/AvailabilitySectionCollapsed';\nimport {useAuth} from '../components/auth/AuthProvider';\nimport InviteeQuestionsSection from './events/sections/InviteeQuestionsSection';\nimport NotifyPolicySection from './events/sections/NotifyPolicySection';\n\nconst EventType = () => {\n  let {id} = useParams();\n  const {eventTypesById, onUpdateEventType, fetchAllSchedules} = useEvents();\n  const eventType = eventTypesById[id];\n  const [focusStep, setFocusStep] = useState(-1);\n\n  useEffect(() => {\n    fetchAllSchedules().then((r) => {\n      console.log('fetch schedules done', r);\n    });\n  }, []);\n\n  const onSave = (value: any) => {\n    onUpdateEventType(value.id, value).then((r) => {\n      if (r) {\n        console.log('On update event type', r);\n      }\n    });\n  };\n\n  const generalSection = () => {\n    if (focusStep === 0) {\n      return (\n        <GeneralSectionExpand\n          eventType={eventType}\n          onClose={() => {\n            setFocusStep(-1);\n          }}\n          onSave={onSave}\n          saveButtonLabel=\"Save & Close\"\n        />\n      );\n    } else {\n      return (\n        <GeneralSectionCollapsed\n          eventType={eventType}\n          onOpen={() => {\n            setFocusStep(0);\n          }}\n        />\n      );\n    }\n  };\n\n  const availabilitySection = () => {\n    if (focusStep === 1) {\n      return (\n        <AvailabilitySectionExpand\n          user={{\n            active_availability_rule: 1,\n            own_availability_rule: 1,\n          }}\n          eventType={eventType}\n          onClose={() => {\n            setFocusStep(-1);\n          }}\n          onSave={onSave}\n          saveButtonLabel=\"Save & Close\"\n        />\n      );\n    } else {\n      return (\n        <AvailabilitySectionCollapsed\n          eventType={eventType}\n          onOpen={() => setFocusStep(1)}\n        />\n      );\n    }\n  };\n\n  const inviteeQuestionsSection = () => {\n    if (focusStep === 2) {\n    } else {\n    }\n  };\n\n  if (!eventType) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"container lg:px-10 inner-container mx-auto lg:px-8 py-4 flex flex-col\">\n      <div className=\"h-6\">\n        <Link to=\"/event_types\">\n          <span className=\"inline-block hover:underline\">\n            {' '}\n            <i className=\"fas fa-chevron-left mr-2\" />\n            返回所有日程类型\n          </span>\n        </Link>\n      </div>\n      <div className=\"py-4 text-3xl font-medium\">编辑日程类型</div>\n\n      <section className=\"pt-10\">\n        <div className=\"flex flex-row justify-between\">\n          <div className=\"\">Your type is ON</div>\n          <div className=\"text-sm opacity-50\">\n            Last edited {dayjs(eventType.editAt).toString()}.\n          </div>\n          <Link to=\"/live\" className=\"text-blue-400\">\n            <i className=\"fas fa-external-link-alt mr-2\" />\n            view live page\n          </Link>\n        </div>\n      </section>\n      {generalSection()}\n      {availabilitySection()}\n      <div className=\"mt-4\">\n        <div className=\"mb-2\">\n          <strong>Additional Options</strong>\n        </div>\n        <InviteeQuestionsSection />\n        <NotifyPolicySection />\n      </div>\n    </div>\n  );\n};\n\nexport default EventType;\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventTypeEdit.tsx",["561","562"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventInviteeQuestionsSection.tsx",[],["563","564"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventAvailabilitySection.tsx",["565","566","567","568"],"import React, {useEffect, useState} from 'react';\nimport _ from 'lodash';\nimport BookingRangeContainer from './BookingRangeContainer';\nimport DurationSelector from '../common/DurationSelector';\nimport BufferSelector from '../common/BufferSelector';\nimport {useQuery, useQueryOne, useTransact} from '../../store';\nimport CancelButton from './CancelButton';\nimport {\n  PERIOD_TYPE_AVAILABLE_MOVING,\n  PERIOD_TYPE_FIXED,\n  PERIOD_TYPE_MOVING,\n  PERIOD_TYPE_UNLIMITED,\n  WEEKDAYS,\n} from '../constants';\nimport ScheduleContainer from './ScheduleContainer';\nimport {EditingContext} from '../../hooks/EditingContext';\n\n// function BookingRangeContainer({ eventTypeValue }: any) {\n//   return (\n//     <div data-container=\"booking_range_fieldset\">\n//       <div className=\"mb-8 pb56 border-b border-gray-400\">\n//         <div className=\"my-3\">\n//           <div className=\"text-16 font-bold\">Date range</div>\n//           <div className=\"text-light text-sm\">Invitees can schedule...</div>\n//         </div>\n//         <BookingRangeContainer />\n//       </div>\n//     </div>\n//   );\n// }\n\nfunction DateRangeDescription({periodType, maxBookingTime}: any) {\n  switch (periodType) {\n    case PERIOD_TYPE_MOVING:\n    case PERIOD_TYPE_AVAILABLE_MOVING:\n      if (maxBookingTime) {\n        return <span>{maxBookingTime / 60 / 24} rolling days</span>;\n      } else {\n        return <span></span>;\n      }\n    case PERIOD_TYPE_FIXED:\n    case PERIOD_TYPE_UNLIMITED:\n      return <span>in construction</span>;\n  }\n  return <span />;\n}\n\nfunction DurationContainer() {\n  return (\n    <div className=\"pt32 pb56 border-b border-gray-400\">\n      <DurationSelector />\n    </div>\n  );\n}\n\nfunction BuffersContainer() {\n  return (\n    <div className=\"pt32 pb56\">\n      <BufferSelector />\n    </div>\n  );\n}\n\nfunction EventAvailabilityEdit({user, eventType, open, close}: any) {\n  const transact = useTransact();\n  const [userInfo, setUserInfo] = useState(user);\n  const [eventTypeValue, setEventTypeValue] = useState(eventType);\n  const [changed, setChanged] = useState(false);\n  const [forceCancel, setForceCancel] = useState(false);\n\n  const markChanged = () => {\n    if (!changed) {\n      setChanged(true);\n    }\n  };\n\n  const {\n    active_availability_rule: activeAvailabilityRule,\n    own_availability_rule: ownAvailabilityRule,\n  } = userInfo;\n\n  const schedules = useQuery(\n    '[:find ?s ?n ?r :in $ ?u :where [?e \":user/uid\" ?u] [?e \":user/schedules\" ?s] [?se \":schedule/uid\" ?s] [(get-else $ ?se \":schedule/name\" \"\") ?n] [?se \":schedule/rules\" ?r]]',\n    'u1',\n    ([id, name, rules]: any) => ({id, name, rules})\n  );\n\n  const [currentSchedule, setCurrentSchedule] = useState();\n\n  useEffect(() => {\n    setCurrentSchedule(\n      schedules.find((sch: any) => sch.id === activeAvailabilityRule)\n    );\n  }, [schedules]);\n\n  const rules = currentSchedule\n    ? WEEKDAYS.map((day) => {\n        // @ts-ignore\n        const rule = currentSchedule.rules.find(\n          (rule: any) => rule.wday === day\n        );\n        if (rule) {\n          if (rule.available === undefined) {\n            return {...rule, available: true};\n          } else {\n            return rule;\n          }\n        }\n        return {\n          type: 'wday',\n          wday: day,\n          intervals: [],\n          available: false,\n        };\n      })\n    : [];\n\n  const save = (eventTypeValue: any) => {\n    if (changed) {\n      const txs = [];\n\n      const tx: any = {};\n      Object.keys(eventTypeValue).forEach((key) => {\n        tx[`:eventType/${key}`] = eventTypeValue[key];\n      });\n      txs.push(tx);\n\n      txs.push({\n        // @ts-ignore\n        ':schedule/uid': currentSchedule.id,\n        // @ts-ignore\n        ':schedule/rules': currentSchedule.rules,\n      });\n\n      transact(txs);\n    }\n  };\n\n  const setPeriodType = (type: string) => {\n    markChanged();\n    setEventTypeValue({\n      ...eventTypeValue,\n      period_type: type,\n    });\n  };\n  const setMaxBookingTime = (value: number) => {\n    markChanged();\n\n    setEventTypeValue({\n      ...eventTypeValue,\n      max_booking_time: value * 60 * 24,\n    });\n  };\n  const setStartEndDate = (start: string, end: string) => {\n    markChanged();\n\n    setEventTypeValue({\n      ...eventTypeValue,\n      start_date: start,\n      end_date: end,\n    });\n  };\n\n  const setActiveAvailabilityRule = () => {};\n  const setScheduleRuleEnabled = (\n    type: string,\n    date: string,\n    enabled: boolean\n  ) => {\n    const copy = _.cloneDeep(currentSchedule);\n    // @ts-ignore\n    const rule = copy.rules.find((rule: any) => rule.wday === date);\n    rule.available = enabled;\n\n    setCurrentSchedule(copy);\n    markChanged();\n  };\n\n  const setIntervalTime = (\n    date: string,\n    index: number,\n    type: string,\n    value: string\n  ) => {\n    console.log('set from', date, index, value, currentSchedule);\n    if (currentSchedule) {\n      const copy = _.cloneDeep(currentSchedule);\n      // @ts-ignore\n      const rule = copy.rules.find(\n        (rule: any) => rule.wday === date || rule.date === date\n      );\n      if (rule) {\n        if (rule.intervals) {\n          const interval = rule.intervals[index];\n          if (interval) {\n            interval[type] = value;\n            setCurrentSchedule(copy);\n            markChanged();\n            return;\n          }\n        }\n      }\n    }\n    console.log('Err set rule from ');\n  };\n\n  const setRuleFrom = (date: string, index: number, value: string) => {\n    setIntervalTime(date, index, 'from', value);\n  };\n\n  const setRuleTo = (date: string, index: number, value: string) => {\n    setIntervalTime(date, index, 'to', value);\n  };\n  const addInterval = (date: string) => {\n    if (currentSchedule) {\n      const copy = _.cloneDeep(currentSchedule);\n      // @ts-ignore\n      const rule = copy.rules.find(\n        (rule: any) => rule.wday === date || rule.date === date\n      );\n      console.log('add', rule);\n      if (rule) {\n        if (rule.intervals) {\n          rule.intervals.push({\n            from: '09:00',\n            to: '17:00',\n          });\n          rule.available = true;\n          setCurrentSchedule(copy);\n          markChanged();\n          return;\n        }\n      }\n    }\n  };\n\n  const removeInterval = (date: string, index: number) => {\n    if (currentSchedule) {\n      const copy = _.cloneDeep(currentSchedule);\n      // @ts-ignore\n      const rule = copy.rules.find(\n        (rule: any) => rule.wday === date || rule.date === date\n      );\n      if (rule) {\n        if (rule.intervals) {\n          rule.intervals.splice(index, 1);\n\n          if (rule.intervals.length === 0) {\n            rule.available = false;\n          }\n          setCurrentSchedule(copy);\n          markChanged();\n          return;\n        }\n      }\n    }\n  };\n  const duplicateRule = () => {};\n\n  console.log('sec', currentSchedule);\n\n  return (\n    <EditingContext.Provider\n      value={{\n        value: eventTypeValue,\n        activeAvailabilityRule,\n        setActiveAvailabilityRule,\n        ownAvailabilityRule,\n        currentSchedule,\n        rules,\n        setScheduleRuleEnabled,\n        setRuleFrom,\n        setRuleTo,\n        addInterval,\n        removeInterval,\n        setPeriodType,\n        setMaxBookingTime,\n        setStartEndDate,\n        markChanged,\n      }}\n    >\n      <>\n        <div\n          className=\"flex flex-row justify-between cursor-pointer\"\n          onClick={(e) => {\n            if (!changed) {\n              close();\n              e.stopPropagation();\n            }\n          }}\n        >\n          <div className=\"flex flex-row p-2 \">\n            <div className=\"px-3\">\n              <i className=\"far fa-calendar-check\" />\n            </div>\n            <div>\n              <div className=\"text-lg\">When can people book this event?</div>\n              <div className=\"text-gray-700\">\n                {eventTypeValue.duration} min,{' '}\n                <DateRangeDescription\n                  periodType={eventTypeValue.period_type}\n                  maxBookingTime={eventTypeValue.max_booking_time}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row\">\n            <CancelButton changed={changed} close={close} />\n            <div\n              className=\"gentle-flex mx-2 cursor-pointer\"\n              onClick={() => {\n                console.log('Value', eventTypeValue, changed);\n                save(eventTypeValue);\n                close();\n              }}\n            >\n              Save & Close\n            </div>\n          </div>\n        </div>\n        <div className=\"border-t border-b border-gray-200\">\n          <div className=\"px-2 py-1 lg:px-10 lg:py-8\">\n            <div className=\"flex flex-col\">\n              <BookingRangeContainer />\n              <ScheduleContainer\n                user={userInfo}\n                setUser={setUserInfo}\n                eventTypeValue={eventTypeValue}\n                setEventTypeValue={setEventTypeValue}\n              />\n              <DurationContainer />\n              <BuffersContainer />\n            </div>\n          </div>\n          <div className=\"flex flex-row justify-end  border-t border-gray-400 py-4\">\n            <div className=\"mx-2 cursor-pointer\" onClick={close}>\n              Cancel\n            </div>\n            <div className=\"mx-2 cursor-pointer\" onClick={open}>\n              Save & Close\n            </div>\n          </div>\n        </div>\n      </>\n    </EditingContext.Provider>\n  );\n}\n\nfunction EventAvailabilityEditWrapper(props: any) {\n  const {preloadValue, eventTypeId} = props;\n  const user = useQueryOne(\n    '[:find ?aar ?oar ?n ?r :in $ ?u :where [?e \":user/uid\" ?u] [?e \":user/active_availability_rule\" ?aar] [?e \":user/own_availability_rule\" ?oar] [?ae \":schedule/uid\" ?aar] [(get-else $ ?ae \":schedule/name\" \"\") ?n] [?ae \":schedule/rules\" ?r]]',\n    'u1',\n    ([active_availability_rule, own_availability_rule, name, rules]: any) => ({\n      active_availability_rule,\n      own_availability_rule,\n      name,\n      rules,\n    })\n  );\n\n  const eventType = useQueryOne(\n    '[:find ?i ?n ?d ?loc ?url ?c ?dr ?p ?mbt ?sdt ?edt  ?last_edited :in $ ?i :where [?e \":eventType/uid\" ?i] [?e \":eventType/name\" ?n] [?e \":eventType/description\" ?d] [?e \":eventType/location\" ?loc] [?e \":eventType/url\" ?url] [?e \":eventType/color\" ?c] [?e \":eventType/duration\" ?dr] [?e \":eventType/period_type\" ?p] [?e \":eventType/max_booking_time\" ?mbt] [?e \":eventType/start_date\" ?sdt] [?e \":eventType/end_date\" ?edt]  [?e \":eventType/last_edited\" ?last_edited] ]',\n    eventTypeId,\n    ([\n      uid,\n      name,\n      description,\n      location,\n      url,\n      color,\n      duration,\n      period_type,\n      max_booking_time,\n      start_date,\n      end_date,\n      editAt,\n    ]: any) => ({\n      uid,\n      name,\n      description,\n      location,\n      url,\n      color,\n      duration,\n      period_type,\n      max_booking_time,\n      start_date,\n      end_date,\n      editAt,\n    })\n  );\n\n  if (_.isEmpty(eventType)) {\n    return <XX eventType={preloadValue} />;\n  }\n\n  return <EventAvailabilityEdit {...props} user={user} eventType={eventType} />;\n}\n\nfunction XX({editing, setEditing, eventType}: any) {\n  return (\n    <div\n      className=\"flex flex-row justify-between cursor-pointer\"\n      onClick={() => {\n        setEditing(!editing);\n      }}\n    >\n      <div className=\"flex flex-row p-2 \">\n        <div className=\"px-3\">\n          <i className=\"far fa-calendar-check\" />\n        </div>\n        <div>\n          <div className=\"text-lg\">When can people book this event?</div>\n          <div className=\"text-gray-700\">\n            {eventType.duration} min,{' '}\n            <DateRangeDescription\n              periodType={eventType.period_type}\n              maxBookingTime={eventType.max_booking_time}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function EventAvailabilitySection(props: any) {\n  const {eventTypeId: id} = props;\n\n  const eventType = useQueryOne(\n    '[:find ?i ?n ?d ?loc ?url ?c ?dr ?p ?mbt ?sdt ?edt  ?last_edited :in $ ?i :where [?e \":eventType/uid\" ?i] [?e \":eventType/name\" ?n] [?e \":eventType/description\" ?d] [?e \":eventType/location\" ?loc] [?e \":eventType/url\" ?url] [?e \":eventType/color\" ?c] [?e \":eventType/duration\" ?dr] [?e \":eventType/period_type\" ?p] [?e \":eventType/max_booking_time\" ?mbt] [?e \":eventType/start_date\" ?sdt] [?e \":eventType/end_date\" ?edt]  [?e \":eventType/last_edited\" ?last_edited] ]',\n    id,\n    ([\n      uid,\n      name,\n      description,\n      location,\n      url,\n      color,\n      duration,\n      period_type,\n      max_booking_time,\n      start_date,\n      end_date,\n      editAt,\n    ]: any) => ({\n      uid,\n      name,\n      description,\n      location,\n      url,\n      color,\n      duration,\n      period_type,\n      max_booking_time,\n      start_date,\n      end_date,\n      editAt,\n    })\n  );\n\n  const [editing, setEditing] = useState(false);\n  const close = () => {\n    setEditing(false);\n  };\n  const open = () => {\n    setEditing(true);\n  };\n\n  console.log('ava', eventType);\n\n  return (\n    <div data-section=\"availability\">\n      <div\n        className={`mt-2 border-b lg:border  hover:border-blue-500 border-black lg:rounded `}\n      >\n        {editing ? (\n          <EventAvailabilityEditWrapper\n            preloadValue={eventType}\n            eventTypeId={id}\n            open={open}\n            close={close}\n          />\n        ) : (\n          <XX eventType={eventType} editing={editing} setEditing={setEditing} />\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventGeneralSection.tsx",["569","570","571","572","573"],"import React, {useCallback, useEffect, useState} from 'react';\nimport * as Dialog from '@radix-ui/react-dialog';\n\nimport SingleSelect from './EventLocationSelect';\nimport Editor from '../common/Editor';\nimport {useDebouncedTransact, useQueryOne, useTransact} from '../../store';\nimport CancelButton from './CancelButton';\nimport {EditingContext} from '../../hooks/EditingContext';\n\nfunction EventGeneralEdit({eventType, open, close}: any) {\n  const transact = useTransact();\n  const [eventTypeValue, setEventTypeValue] = useState(eventType);\n  const [changed, setChanged] = useState(false);\n\n  const markChanged = () => {\n    if (!changed) {\n      setChanged(true);\n    }\n  };\n\n  const save = (eventTypeValue: any) => {\n    const tx: any = {};\n    Object.keys(eventTypeValue).forEach((key) => {\n      tx[`:eventType/${key}`] = eventTypeValue[key];\n    });\n    console.log('Tx', tx);\n    transact([tx]);\n  };\n\n  return (\n    <>\n      <div\n        className={`flex flex-row justify-between ${\n          changed ? '' : 'cursor-pointer'\n        }`}\n        onClick={(e) => {\n          if (!changed) {\n            close();\n            e.stopPropagation();\n          }\n        }}\n      >\n        <div className=\"flex flex-row p-2\">\n          <div className=\"px-3\">\n            <i className=\"fas fa-circle text-red-500\" />\n          </div>\n          <div>\n            <div className=\"text-lg\">What event is this?</div>\n            <div className=\"text-gray-700\">{eventTypeValue.name}</div>\n          </div>\n        </div>\n        <div className=\"flex flex-row\">\n          <CancelButton changed={changed} close={close} />\n          <div\n            className=\"gentle-flex mx-2 cursor-pointer\"\n            onClick={() => {\n              console.log('Value', eventTypeValue, changed);\n              save(eventTypeValue);\n              close();\n            }}\n          >\n            Save & Close\n          </div>\n        </div>\n      </div>\n      <div className=\"border-t border-b border-gray-300\">\n        <div className=\"px-2 py-1 lg:px-10 lg:py-8\">\n          <div className=\"flex flex-col\">\n            <div className=\"mb-4\">\n              <div className=\"my-3\">Event name *</div>\n              <div className=\"border border-gray-400 cursor-text w-64\">\n                <input\n                  type=\"text\"\n                  className=\"w-full h-full p-3 focus:outline-none focus:shadow-outline focus:border-blue-700\"\n                  value={eventTypeValue.name}\n                  onChange={(e) => {\n                    setEventTypeValue({\n                      ...eventTypeValue,\n                      name: e.target.value,\n                    });\n                    markChanged();\n                  }}\n                />\n              </div>\n            </div>\n\n            <div className=\"mb-4\">\n              <div className=\"my-3\">Location</div>\n              <SingleSelect\n                defaultValue={eventTypeValue.location}\n                onChange={(option: any) => {\n                  setEventTypeValue({\n                    ...eventTypeValue,\n                    location: option.value,\n                  });\n                  markChanged();\n                }}\n              />\n            </div>\n\n            <div className=\"mb-4\">\n              <div className=\"my-3\">Description/Instructions</div>\n              <Editor\n                defaultValue={eventTypeValue.description}\n                onChange={(value: any) => {\n                  setEventTypeValue({\n                    ...eventTypeValue,\n                    description: value,\n                  });\n                  markChanged();\n                }}\n              />\n            </div>\n\n            <div className=\"mb-4\">\n              <div className=\"my-3\">Event link *</div>\n              <div className=\"flex flex-row\">\n                <div className=\"mr-3\">mytime.com/ycy/</div>\n                <div className=\"border border-gray-400 cursor-text \">\n                  <input\n                    type=\"text\"\n                    className=\"w-full lg:w-48 p-1 lg:p-3 focus:outline-none focus:shadow-outline focus:border-blue-700\"\n                    value={eventTypeValue.url}\n                    onChange={(e) => {\n                      setEventTypeValue({\n                        ...eventTypeValue,\n                        url: e.target.value,\n                      });\n                      markChanged();\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"mb-4\">\n              <div className=\"my-3\">Event color</div>\n              <div className=\"flex flex-row\">\n                {['red', 'green', 'blue'].map((color) => {\n                  return (\n                    <div\n                      className=\"mr-2 cursor-pointer\"\n                      key={color}\n                      onClick={() => {\n                        setEventTypeValue({\n                          ...eventTypeValue,\n                          color,\n                        });\n                        markChanged();\n                      }}\n                    >\n                      <i\n                        className={`fas ${\n                          color === eventTypeValue.color\n                            ? 'fa-check-circle'\n                            : 'fa-circle'\n                        }  fa-2x text-${color}-500`}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"flex flex-row justify-end border-t border-gray-300 py-4\">\n          <div className=\"mx-2 cursor-pointer\">Cancel</div>\n          <div className=\"mx-2 cursor-pointer\">Save & Close</div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default function EventGeneralSection(props: any) {\n  const {eventTypeId: id} = props;\n\n  const eventType = useQueryOne(\n    '[:find ?i ?n ?d ?loc ?url ?c ?last_edited :in $ ?i :where [?e \":eventType/uid\" ?i] [?e \":eventType/name\" ?n] [?e \":eventType/description\" ?d] [?e \":eventType/location\" ?loc] [?e \":eventType/url\" ?url] [?e \":eventType/color\" ?c] [?e \":eventType/last_edited\" ?last_edited] ]',\n    id,\n    ([uid, name, description, location, url, color, editAt]: any) => ({\n      uid,\n      name,\n      description,\n      location,\n      url,\n      color,\n      editAt,\n    })\n  );\n\n  const [editing, setEditing] = useState(false);\n  const close = () => {\n    setEditing(false);\n  };\n  const open = () => {\n    setEditing(true);\n  };\n\n  return (\n    <div data-section=\"general\">\n      <div\n        className={`mt-2 border-b lg:border  hover:border-blue-500 border-black lg:rounded `}\n      >\n        {editing ? (\n          <EventGeneralEdit eventType={eventType} open={open} close={close} />\n        ) : (\n          <div\n            className=\"flex flex-row justify-between cursor-pointer\"\n            onClick={() => {\n              setEditing(!editing);\n            }}\n          >\n            <div className=\"flex flex-row p-2 \">\n              <div className=\"px-3\">\n                <i className=\"fas fa-circle text-red-500\" />\n              </div>\n              <div>\n                <div className=\"text-lg\">What event is this?</div>\n                <div className=\"text-gray-700\">{eventType.name}</div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventNotifyPolicy.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/constants.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/CancelButton.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/BookingRangeContainer.tsx",["574"],"import React, {useContext, useState} from 'react';\nimport Select from 'react-select';\nimport {\n  PERIOD_TYPE_AVAILABLE_MOVING,\n  PERIOD_TYPE_FIXED,\n  PERIOD_TYPE_MOVING,\n  PERIOD_TYPE_UNLIMITED,\n} from '../constants';\nimport DatePicker from './DatePicker';\nimport {EditingContext} from '../../hooks/EditingContext';\n\nexport default function BookingRangeContainer(props: any) {\n  const context = useContext(EditingContext);\n  const {value, setPeriodType, setMaxBookingTime, setStartEndDate} = context;\n  const {period_type, max_booking_time, start_date, end_date} = value;\n\n  const setMoving = () => {\n    if (\n      period_type !== PERIOD_TYPE_MOVING &&\n      period_type !== PERIOD_TYPE_AVAILABLE_MOVING\n    ) {\n      setPeriodType(PERIOD_TYPE_MOVING);\n    }\n  };\n\n  return (\n    <div data-container=\"booking_range_fieldset\">\n      <div className=\"mb-8 pb56 border-b border-gray-400\">\n        <div className=\"my-3\">\n          <div className=\"text-16 font-bold\">Date range</div>\n          <div className=\"text-light text-sm\">Invitees can schedule...</div>\n        </div>\n        <div className=\"flex flex-col\">\n          <div className=\"flex flex-row\">\n            <div\n              className=\"gentle-flex pr-4 cursor-pointer\"\n              onClick={setMoving}\n            >\n              {period_type === PERIOD_TYPE_MOVING ||\n              period_type === PERIOD_TYPE_AVAILABLE_MOVING ? (\n                <i className=\"far fa-check-square\" />\n              ) : (\n                <i className=\"far fa-square\" />\n              )}\n            </div>\n            <div\n              className=\"flex flex-row flex-wrap cursor-pointer\"\n              onClick={setMoving}\n            >\n              <div className=\"flex flex-row\">\n                <div className=\"gentle-flex\" style={{height: '46px'}}>\n                  <input\n                    type=\"number\"\n                    className=\"border border-gray-400 cursor-text h-full w-16 px-2 focus:outline-none focus:shadow-outline focus:border-blue-300\"\n                    defaultValue={max_booking_time / 24 / 60}\n                    onChange={(e) => {\n                      setMaxBookingTime(parseInt(e.target.value));\n                    }}\n                  />\n                </div>\n                <div className=\"center-v pr-4\">\n                  <div className=\"w-40 lg:w-48 cursor-pointer focus:outline-none \">\n                    <Select\n                      className=\"\"\n                      classNamePrefix=\"select\"\n                      onChange={(option: any) => {\n                        setPeriodType(option.value);\n                      }}\n                      components={{\n                        DropdownIndicator: () => {\n                          return null;\n                        },\n                        IndicatorSeparator: () => {\n                          return null;\n                        },\n                      }}\n                      styles={{\n                        container: (a) => {\n                          a.height = '46px';\n                          return a;\n                        },\n                        control: (a) => {\n                          a.height = '100%';\n                          a.borderRadius = 0;\n                          return a;\n                        },\n                      }}\n                      defaultValue={\n                        period_type === PERIOD_TYPE_MOVING\n                          ? {\n                              value: PERIOD_TYPE_MOVING,\n                              label: 'Calendar days',\n                              color: '#00B8D9',\n                            }\n                          : {\n                              value: PERIOD_TYPE_AVAILABLE_MOVING,\n                              label: 'Business days',\n                              color: '#00B8D9',\n                            }\n                      }\n                      name=\"color\"\n                      options={[\n                        {\n                          value: PERIOD_TYPE_MOVING,\n                          label: 'Calendar days',\n                          color: '#00B8D9',\n                        },\n                        {\n                          value: PERIOD_TYPE_AVAILABLE_MOVING,\n                          label: 'Business days',\n                          color: '#00B8D9',\n                        },\n                      ]}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"gentle-flex\">\n                <div>into the future</div>\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-6 flex flex-row\">\n            <div\n              className=\"gentle-flex pr-4 cursor-pointer\"\n              onClick={() => setPeriodType(PERIOD_TYPE_FIXED)}\n            >\n              {period_type === PERIOD_TYPE_FIXED ? (\n                <i className=\"far fa-check-square\" />\n              ) : (\n                <i className=\"far fa-square\" />\n              )}\n            </div>\n            <div\n              className=\"flex flex-row flex-wrap cursor-pointer\"\n              onClick={() => setPeriodType(PERIOD_TYPE_FIXED)}\n            >\n              <div className=\"gentle-flex pr-4\">With a date range</div>\n              {period_type === PERIOD_TYPE_FIXED && (\n                <DatePicker\n                  setStartEndDate={setStartEndDate}\n                  defaultStartDate={start_date}\n                  defaultEndDate={end_date}\n                />\n              )}\n            </div>\n          </div>\n          {/* unlimited*/}\n          <div className=\"mt-6 flex flex-row\">\n            <div\n              className=\"gentle-flex pr-4 cursor-pointer\"\n              onClick={() => setPeriodType(PERIOD_TYPE_UNLIMITED)}\n            >\n              {period_type === PERIOD_TYPE_UNLIMITED ? (\n                <i className=\"far fa-check-square\" />\n              ) : (\n                <i className=\"far fa-square\" />\n              )}\n            </div>\n            <div\n              className=\"gentle-flex cursor-pointer\"\n              onClick={() => setPeriodType(PERIOD_TYPE_UNLIMITED)}\n            >\n              <div>Indefinitely into the future</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/EventLocationSelect.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/ScheduleContainer.tsx",["575","576","577","578","579","580","581","582","583","584"],"import React, {\n  useCallback,\n  useRef,\n  useState,\n  Fragment,\n  useContext,\n} from 'react';\nimport CheckboxStateless from '../common/CheckboxStateless';\nimport Select from 'react-select';\nimport * as Popover from '@radix-ui/react-popover';\n\nimport {useQuery} from '../../store';\nimport dayjs from 'dayjs';\nimport {listOfTime, listOfTime24, WEEKDAYS} from '../constants';\nimport {EditingContext} from '../../hooks/EditingContext';\nimport {random} from 'nanoid';\nimport moment, {now} from 'moment';\nimport {number} from 'prop-types';\nimport _ from 'lodash';\nimport * as Dialog from '@radix-ui/react-dialog';\nimport {DayPickerSingleDateController} from 'react-dates';\n\nconst sliceOfTime = listOfTime24.slice(0, 24 * 4);\nconst timeOptions = sliceOfTime.map((slice) => ({\n  value: slice,\n  label: slice,\n}));\n\nfunction RuleCopyToMenu({date}: any) {\n  return (\n    <Popover.Root>\n      <Popover.Trigger className=\"outline-none focus:outline-none\">\n        <i className=\"far fa-copy text-light hover:text-black cursor-pointer\" />\n      </Popover.Trigger>\n      <Popover.Content\n        className=\"outline-none border border-black border-solid p-3\"\n        style={{\n          borderRadius: 3,\n          fontSize: 14,\n          backgroundColor: 'white',\n          color: 'black',\n        }}\n      >\n        <div className=\"flex flex-col\">\n          <div>COPY ITEMS TO...</div>\n          <div className=\"grid grid-cols-2 gap-y-2 py-2\">\n            {WEEKDAYS.map((day) => {\n              return (\n                <Fragment key={day}>\n                  <div className=\"cursor-pointer\">{_.capitalize(day)}</div>\n                  <div className=\"cursor-pointer flex flex-row justify-end\">\n                    <div className=\"gentle-flex\">\n                      <CheckboxStateless value={date === day} />\n                    </div>\n                  </div>\n                </Fragment>\n              );\n            })}\n          </div>\n          <div className=\"mt-2 py-2 rounded cursor-pointer gentle-flex bg-blue-400 text-white\">\n            Apply\n          </div>\n        </div>\n      </Popover.Content>\n    </Popover.Root>\n  );\n}\n\nfunction SelectInput({defaultValue, onChange}: any) {\n  const selectRef = useRef<any>(null);\n  // Feature of focusing selected option when menu is getting opened\n  const onMenuOpen = useCallback(() => {\n    // Calling an initial prop if it has been passed\n    // Getting a selected option\n    const option = selectRef.current?.select?.state?.selectValue?.[0];\n    if (option) {\n      setTimeout(() => {\n        // Setting a focused value as a selected one\n        // References:\n        // - https://github.com/JedWatson/react-select/blob/master/packages/react-select/src/Select.js#L503\n        // - https://github.com/JedWatson/react-select/blob/master/packages/react-select/src/Select.js#L802\n        if (selectRef.current?.select) {\n          const selectedIndex = selectRef.current.select.state.menuOptions.focusable.findIndex(\n            (opt: any) => opt.value === option.value\n          );\n          if (selectedIndex >= 0) {\n            // Focusing selected option only if it exists\n            selectRef.current.select.scrollToFocusedOptionOnUpdate = true;\n            selectRef.current.select.inputIsHiddenAfterUpdate = false;\n            selectRef.current.select.setState({\n              focusedValue: null,\n              focusedOption:\n                selectRef.current.select.state.menuOptions.focusable[\n                  selectedIndex + 3\n                ],\n            });\n          }\n        }\n      });\n    }\n  }, [selectRef.current]);\n\n  return (\n    <Select\n      ref={selectRef}\n      className=\"\"\n      classNamePrefix=\"select\"\n      components={{\n        DropdownIndicator: () => {\n          return null;\n        },\n        IndicatorSeparator: () => {\n          return null;\n        },\n      }}\n      name=\"color\"\n      defaultValue={defaultValue}\n      options={timeOptions}\n      onMenuOpen={onMenuOpen}\n      onChange={onChange}\n    />\n  );\n}\n\nfunction IntervalsContainer({date, durations: intervals, available}: any) {\n  const {\n    setScheduleRuleEnabled,\n    setRuleFrom,\n    setRuleTo,\n    addInterval,\n    removeInterval,\n  } = useContext(EditingContext);\n  const enabled = available !== false;\n  const [checkPass, setCheckPass] = useState(true);\n\n  return (\n    <div className=\"p-4 border-gray-200 border-t\">\n      <div className=\"grid md:grid-cols-3x w-full\">\n        <div className=\"flex flex-row justify-between\">\n          <div className=\"w-16 md:pt-3 flex flex-row cursor-pointer\">\n            <div\n              className=\"pr-3\"\n              onClick={() => setScheduleRuleEnabled('wday', date, !enabled)}\n            >\n              <CheckboxStateless value={enabled} />\n            </div>\n            <div\n              className=\"font-medium\"\n              onClick={() => setScheduleRuleEnabled('wday', date, !enabled)}\n            >\n              {(date as string).substr(0, 3).toUpperCase()}\n            </div>\n          </div>\n          <div className=\"visible md:invisible flex flex-row\">\n            <div\n              className=\"mx-2\"\n              onClick={() => {\n                console.log('add new interval');\n                addInterval(date);\n              }}\n            >\n              <i className=\"fas fa-plus text-light hover:text-black cursor-pointer\" />\n            </div>\n            <div\n              onClick={() => {\n                console.log('copy to another');\n              }}\n            >\n              <i className=\"far fa-copy text-light hover:text-black cursor-pointer\" />\n            </div>\n          </div>\n        </div>\n        {enabled ? (\n          <div className=\"flex-1 flex flex-col h-full\">\n            {intervals.map((interval: any, index: number) => {\n              return (\n                <div key={index} className=\"flex flex-col\">\n                  <div className=\"flex flex-row my-1\">\n                    <div className=\"mx-2 md:mx-3\">\n                      <div className=\"flex flex-row\">\n                        <div className=\"w-20\">\n                          <SelectInput\n                            defaultValue={{\n                              value: interval.from,\n                              label: interval.from,\n                            }}\n                            onChange={({value}: any, {action}: any) => {\n                              if (action === 'select-option') {\n                                console.log('OnChange', value, action);\n                                setRuleFrom(date, index, value);\n                              }\n                            }}\n                          />\n                        </div>\n                        <div>\n                          <div className=\"px-1 center-v\">\n                            <i className=\"fas fa-minus text-light\" />\n                          </div>\n                        </div>\n                        <div className=\"w-20\">\n                          <SelectInput\n                            defaultValue={{\n                              value: interval.to,\n                              label: interval.to,\n                            }}\n                            onChange={({value}: any, {action}: any) => {\n                              if (action === 'select-option') {\n                                console.log('OnChange', value, action);\n                                setRuleTo(date, index, value);\n                              }\n                            }}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div>\n                      <div className=\"center-v\">\n                        <div\n                          className=\"\"\n                          onClick={() => {\n                            console.log('delete', date, index, interval);\n                            removeInterval(date, index);\n                          }}\n                        >\n                          <i className=\"far fa-trash-alt text-light hover:text-black cursor-pointer\" />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {!checkPass && <div className=\"mx-2 md:mx-3\">Info</div>}\n                </div>\n              );\n            })}\n          </div>\n        ) : (\n          <div className=\"flex-1 text-light md:mx-2 md:pt-3\">Unavailable</div>\n        )}\n        <div className=\"invisible md:visible flex flex-row justify-end\">\n          <div\n            className=\"mx-2 md:pt-3\"\n            onClick={() => {\n              console.log('add new interval');\n              addInterval(date);\n            }}\n          >\n            <i className=\"fas fa-plus text-light hover:text-black cursor-pointer\" />\n          </div>\n          <div\n            className=\"md:pt-3\"\n            onClick={() => {\n              console.log('copy to another');\n            }}\n          >\n            <RuleCopyToMenu date={date} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default function ScheduleContainer(props: any) {\n  const {\n    activeAvailabilityRule,\n    ownAvailabilityRule,\n    currentSchedule,\n    rules,\n  } = useContext(EditingContext);\n\n  return (\n    <div className=\"pt32 pb56 border-b border-gray-400\">\n      <div>\n        <div className=\"grid lg:grid-cols-6-4 gap-2\">\n          <div className=\"text-16 font-bold\">\n            How do you want to offer your availability for this event type?\n          </div>\n          <div className=\"text-light\">\n            Select one of your schedules or define custom hours specific to this\n            type of event.\n          </div>\n          <div className=\"flex flex-col\">\n            <div className=\"flex flex-row flex-wrap\">\n              <div\n                className={`mt-4 mr-4 p-2 border-2 ${\n                  activeAvailabilityRule !== ownAvailabilityRule\n                    ? 'border-green-400 cursor-default'\n                    : 'border-gray-400 cursor-pointer'\n                } border-solid rounded gentle-flex`}\n                onClick={() => {}}\n              >\n                Use an existing schedule\n              </div>\n              <div\n                className={`mt-4 p-2 border-2 ${\n                  activeAvailabilityRule === ownAvailabilityRule\n                    ? 'border-green-400 cursor-default'\n                    : 'border-gray-400 cursor-pointer'\n                } border-solid rounded gentle-flex`}\n              >\n                Set custom hours\n              </div>\n            </div>\n            {activeAvailabilityRule !== ownAvailabilityRule && (\n              <div>Use an existing schedule</div>\n            )}\n          </div>\n        </div>\n        <div>\n          <div className=\"flex flex-row justify-end lg:visible invisible\">\n            <Dialog.Root>\n              <Dialog.Trigger className=\"outline-none focus:outline-none\">\n                <div className=\"gentle-flex mx-4 text-green-500 cursor-pointer\">\n                  Save as new schedule\n                </div>\n              </Dialog.Trigger>\n              <Dialog.Overlay\n                style={{\n                  backgroundColor: 'rgba(0, 0, 0, .15)',\n                  position: 'fixed',\n                  top: 0,\n                  right: 0,\n                  bottom: 0,\n                  left: 0,\n                }}\n              />\n              <Dialog.Content\n                className=\"outline-none focus:outline-none p-6\"\n                style={{\n                  position: 'fixed',\n                  top: '50%',\n                  left: '50%',\n                  transform: 'translate(-50%, -50%)',\n                  width: 400,\n                  // maxWidth: \"fit-content\",\n                  // maxHeight: \"85vh\",\n                  marginTop: '-5vh',\n                  backgroundColor: 'white',\n                  borderRadius: 6,\n                }}\n              >\n                <div className=\"font-bold text-xl\">\n                  Want to save this as a new schedule?\n                </div>\n                <div className=\"pt-10\">\n                  Save these hours to reuse with other event types. Manage all\n                  your schedules under availability.\n                </div>\n                <div className=\"w-full my-5\">\n                  <div>New schedule name</div>\n                  <div className=\"w-full mt-2\" style={{height: '46px'}}>\n                    <input\n                      type=\"text\"\n                      className=\"border border-gray-400 cursor-text h-full w-full px-2 focus:outline-none focus:shadow-outline focus:border-blue-300\"\n                      placeholder=\"Working Hours, Exclusive Hours, etc...\"\n                    />\n                  </div>\n                </div>\n                <div className=\"flex flex-row justify-between\">\n                  <Dialog.Close className=\"py-2 rounded focus:outline-none w-1/2 mr-6 text-center border border-black border-solid\">\n                    Cancel\n                  </Dialog.Close>\n                  <div className=\"py-2 rounded w-1/2 text-center bg-blue-400 text-white cursor-pointer\">\n                    Apply\n                  </div>\n                </div>\n              </Dialog.Content>\n            </Dialog.Root>\n\n            {/*<div className=\"flex flex-row border border-gray-300 rounded\">*/}\n            {/*  <div className=\"p-1 border-r border-gray-200 text-white rounded-l bg-gray-600\">*/}\n            {/*    List*/}\n            {/*  </div>*/}\n            {/*  <div className=\"p-1\">Calendar</div>*/}\n            {/*</div>*/}\n          </div>\n          <div className=\"flex flex-row justify-between flex-wrap w-full\">\n            <div className=\"lg:w-3/5 mt-4 w-full\">\n              <div className=\"flex flex-col border rounded-lg mr-2 border-gray-200\">\n                <div className=\"p-4\">\n                  Set the weekly hours you're typically available for events.\n                </div>\n                {rules.map((rule: any) => {\n                  if (rule.type === 'wday') {\n                    return (\n                      <IntervalsContainer\n                        key={rule.wday}\n                        date={rule.wday}\n                        available={rule.available}\n                        durations={rule.intervals}\n                      />\n                    );\n                  }\n                  return <span />;\n                })}\n              </div>\n            </div>\n            <div className=\"flex flex-col mt-4 lg:w-2/5 w-full\">\n              <div className=\"border-gray-200 rounded-lg  border\">\n                <div className=\"flex flex-row justify-between p-4 border-b border-gray-200\">\n                  <div>Add hours for specific dates.</div>\n                  <Dialog.Root>\n                    <Dialog.Trigger className=\"outline-none focus:outline-none\">\n                      <div className=\"px-2 rounded-md text-blue-300 border border-blue-300\">\n                        +\n                      </div>\n                    </Dialog.Trigger>\n                    <Dialog.Overlay\n                      style={{\n                        backgroundColor: 'rgba(0, 0, 0, .15)',\n                        position: 'fixed',\n                        top: 0,\n                        right: 0,\n                        bottom: 0,\n                        left: 0,\n                      }}\n                    />\n                    <Dialog.Content\n                      className=\"outline-none focus:outline-none\"\n                      style={{\n                        position: 'fixed',\n                        top: '50%',\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)',\n                        minWidth: 200,\n                        maxWidth: 'fit-content',\n                        maxHeight: '85vh',\n                        marginTop: '-5vh',\n                        backgroundColor: 'white',\n                        borderRadius: 6,\n                      }}\n                    >\n                      <div className=\"font-bold text-16 p-6\">\n                        Select the date(s) you want to assign specific hours\n                      </div>\n                      <div className=\"py-4 gentle-flex\"></div>\n                      <div className=\"px-6 py-6 border-t border-b border-solid border-gray-400 bg-gray-200 flex flex-col\">\n                        <div>What hours are you available?</div>\n                        <div>intervals</div>\n                        <div>intervals</div>\n                      </div>\n                      <div className=\"flex flex-row justify-between p-6\">\n                        <Dialog.Close className=\"py-2 rounded focus:outline-none w-1/2 mr-6 text-center border border-black border-solid\">\n                          Cancel\n                        </Dialog.Close>\n                        <div className=\"py-2 rounded w-1/2 text-center bg-blue-400 text-white cursor-pointer\">\n                          Apply\n                        </div>\n                      </div>\n                    </Dialog.Content>\n                  </Dialog.Root>\n                </div>\n                <div>\n                  <div className=\"grid grid-cols-3x gap-2 p-4 bg-gray-300\">\n                    <div className=\"w-32\">DATES</div>\n                    <div>AVAILABILITY</div>\n                  </div>\n                  <div className=\"grid grid-cols-3x gap-2 px-4\">\n                    {currentSchedule &&\n                      currentSchedule.rules\n                        .filter((rule: any) => rule.type === 'date')\n                        .map(({date, intervals}: any) => {\n                          return (\n                            <Fragment key={date}>\n                              <div className=\"w-32\">{date}</div>\n                              <div className=\"flex flex-col\">\n                                {intervals.map(\n                                  ({from, to}: any, index: number) => (\n                                    <div key={index} className=\"flex-1\">\n                                      {from} - {to}\n                                    </div>\n                                  )\n                                )}\n                              </div>\n                              <div className=\"px-1\">\n                                <i className=\"far fa-trash-alt text-light hover:text-black cursor-pointer\" />\n                              </div>\n                            </Fragment>\n                          );\n                        })}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/Editor.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/BufferSelector.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/DurationSelector.tsx",["585","586","587","588"],"import React, {useContext, useState} from 'react';\nimport DotCheckStateless from './CircleCheckboxStateless';\nimport Select from 'react-select';\nimport {EditingContext} from '../../hooks/EditingContext';\n\nconst keys = [15, 30, 45, 60];\n\nconst customKey = 'custom';\n\nexport default function DurationSelector() {\n  const {\n    value,\n    setPeriodType,\n    setMaxBookingTime,\n    setStartEndDate,\n    setDuration,\n  } = useContext(EditingContext);\n  const {duration} = value;\n\n  const [durationValue, setDurationValue] = useState(duration);\n  const [custom, setCustom] = useState(\n    keys.findIndex((k) => k === durationValue) < 0\n  );\n\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n      <div className=\"text-lg font-bold\">Duration</div>\n      <div className=\"row-span-2 text-gray-500\">\n        Define how long your event will be. It can be as long as 12 hours.\n      </div>\n      <div>\n        <div className=\"text-sm font-bold\">Choose a duration</div>\n        <div className=\"pt-2\">\n          <div className=\"flex flex-row flex-wrap\">\n            {keys.map((key) => {\n              return (\n                <div\n                  key={key}\n                  className=\"flex flex-row mr-3 cursor-pointer\"\n                  onClick={() => {\n                    setCustom(false);\n                    setDurationValue(key);\n                    setDuration(key);\n                  }}\n                >\n                  <div className=\"center-v mr-1\">\n                    <DotCheckStateless\n                      value={!custom && durationValue === key}\n                    />\n                  </div>\n                  <div>{key} min</div>\n                </div>\n              );\n            })}\n          </div>\n          <div className=\"pt-2\">\n            <div className=\"text-sm font-bold\">\n              ... or choose a custom duration\n            </div>\n            <div className=\"flex flex-row pt-2\">\n              <div\n                className=\"flex flex-row mr-3 cursor-pointer\"\n                onClick={() => {\n                  setCustom(true);\n                }}\n              >\n                <div className=\"center-v mr-2\">\n                  <DotCheckStateless value={custom} />\n                </div>\n                <div className=\"center-v mr-2\">\n                  <input\n                    type=\"number\"\n                    className=\"border border-gray-400 cursor-text p-3  w-16 focus:outline-none focus:shadow-outline focus:border-blue-300\"\n                    defaultValue={custom ? durationValue : undefined}\n                    onChange={(e) => {\n                      console.log('on change', e.target.value);\n                      if (e.target.value) {\n                        setDurationValue(parseInt(e.target.value));\n                        setDuration(parseInt(e.target.value));\n                      } else {\n                        setDuration(null);\n                        setDurationValue(null);\n                      }\n                    }}\n                  />\n                </div>\n                <div className=\"center-v\">\n                  <div className=\"w-40 lg:w-48 cursor-pointer focus:outline-none focus:shadow-outline focus:border-blue-300\">\n                    <Select\n                      className=\"\"\n                      classNamePrefix=\"select\"\n                      components={{\n                        DropdownIndicator: () => {\n                          return null;\n                        },\n                        IndicatorSeparator: () => {\n                          return null;\n                        },\n                      }}\n                      defaultValue={{\n                        value: 'min',\n                        label: 'min',\n                        color: '#00B8D9',\n                      }}\n                      name=\"color\"\n                      options={[\n                        {value: 'min', label: 'min', color: '#00B8D9'},\n                        {value: 'hrs', label: 'hrs', color: '#00B8D9'},\n                      ]}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/hooks/EditingContext.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/data.ts",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/DatePicker.tsx",["589"],"import React, {useEffect, useState} from 'react';\nimport 'react-dates/initialize';\nimport {DateRangePicker} from 'react-dates';\nimport 'react-dates/lib/css/_datepicker.css';\nimport moment from 'moment';\n\nfunction DatePicker({setStartEndDate, defaultStartDate, defaultEndDate}: any) {\n  console.log('Date picker', defaultStartDate, defaultEndDate);\n\n  const [startDate, setStartDate] = useState(\n    defaultStartDate ? moment(defaultStartDate, 'YYYY-MM-DD') : null\n  );\n  const [endDate, setEndDate] = useState(\n    defaultEndDate ? moment(defaultEndDate, 'YYYY-MM-DD') : null\n  );\n  const [focusedInput, setFocusedInput] = useState<any>(null);\n  const handleDatesChange = ({startDate, endDate}: any) => {\n    console.log(startDate, endDate);\n    setStartDate(startDate);\n    setEndDate(endDate);\n\n    setStartEndDate(\n      startDate ? startDate.format('YYYY-MM-DD') : '',\n      endDate ? endDate.format('YYYY-MM-DD') : ''\n    );\n  };\n\n  return (\n    <DateRangePicker\n      startDate={startDate}\n      startDateId=\"tata-start-date\"\n      endDate={endDate}\n      endDateId=\"tata-end-date\"\n      onDatesChange={handleDatesChange}\n      focusedInput={focusedInput}\n      onFocusChange={(focusedInput) => setFocusedInput(focusedInput)}\n    />\n  );\n}\n\nexport default DatePicker;\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/CheckboxStateless.tsx",["590"],"import React, {useState} from 'react';\n\nexport default function CheckboxStateless({value}: any) {\n  return (\n    <>\n      {value ? (\n        <i className=\"fas fa-check-square text-blue-500\" />\n      ) : (\n        <i className=\"far fa-square\" />\n      )}\n    </>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/EditorCore.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/CircleCheckboxStateless.tsx",["591"],"import React, {useState} from 'react';\n\nexport default function DotCheckStateless({value}: any) {\n  return (\n    <>\n      {value ? (\n        <i className=\"fas fa-dot-circle text-blue-500\" />\n      ) : (\n        <i className=\"far fa-circle\" />\n      )}\n    </>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/common/BookCalendar.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/Live.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/Book.tsx",["592","593","594","595","596","597","598","599","600","601","602","603","604"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventsProvider.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/CreateEventTypeModal.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/NewEventType.tsx",["605","606","607","608","609","610","611"],"import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport * as API from '../../api';\nimport {EventGeneralEdit} from './EventGeneralSection';\nimport {GeneralSectionExpand} from './sections/GeneralSectionExpand';\nimport AvailabilitySectionExpand from './sections/AvailabilitySectionExpand';\nimport {\n  PERIOD_TYPE_AVAILABLE_MOVING,\n  PERIOD_TYPE_FIXED,\n  PERIOD_TYPE_MOVING,\n  PERIOD_TYPE_UNLIMITED,\n} from '../constants';\nimport {useEvents} from '../EventsProvider';\nimport AvailabilitySectionCollapsed from './sections/AvailabilitySectionCollapsed';\nimport GeneralSectionCollapsed from './sections/GeneralSectionCollapsed';\n\nfunction Header({eventType}: any) {\n  return (\n    <section className=\"text-gray-700 body-font\">\n      <div className=\"bg-white shadow\">\n        <div\n          className=\"container inner-container mx-auto px-4 sm:px-6 lg:px-8\"\n          style={{paddingTop: '30px', paddingBottom: '30px'}}\n        >\n          <div className=\"flex flex-row justify-between\">\n            <Link to=\"/\">\n              <div className=\"border border-blue-300 p-2 cursor-pointer\">\n                Back\n              </div>\n            </Link>\n            <div>Edit {eventType.typeName} Event Type</div>\n            <span />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default function NewEventType() {\n  const {createEventType} = useEvents();\n  const [created, setCreated] = useState(false);\n  const [focusStep, setFocusStep] = useState(0);\n\n  const saveGeneralSection = (value: any) => {\n    console.log('Do saveGeneralSection', value);\n\n    createEventType(value).then((r) => {\n      // call api\n      setFocusStep(1);\n      setCreated(true);\n      console.log('r');\n    });\n  };\n\n  const generalSection = () => {\n    if (focusStep === 0) {\n      return (\n        <GeneralSectionExpand\n          eventType={{}}\n          onClose={() => {\n            setFocusStep(-1);\n          }}\n          onSave={(value: any) => {\n            saveGeneralSection(value);\n          }}\n          saveButtonLabel=\"Next\"\n        />\n      );\n    } else {\n      return (\n        <GeneralSectionCollapsed\n          eventType={{}}\n          onOpen={() => {\n            setFocusStep(0);\n          }}\n        />\n      );\n    }\n  };\n\n  const availabilitySection = () => {\n    if (created) {\n      if (focusStep === 1) {\n        return (\n          <AvailabilitySectionExpand\n            user={{\n              active_availability_rule: 1,\n              own_availability_rule: 1,\n            }}\n            eventType={{}}\n            onClose={() => {\n              setFocusStep(-1);\n            }}\n            onSave={(value: any) => {\n              console.log('On Save', value);\n            }}\n            saveButtonLabel=\"Next\"\n          />\n        );\n      } else {\n        return (\n          <AvailabilitySectionCollapsed\n            eventType={{}}\n            editing={false}\n            setEditing={() => {\n              setFocusStep(1);\n            }}\n          />\n        );\n      }\n    }\n    return <></>;\n  };\n\n  return (\n    <div className=\"container lg:px-10 inner-container mx-auto lg:px-8 py-4 flex flex-col\">\n      <div className=\"h-6\">\n        <Link to=\"/event_types\">\n          <span className=\"inline-block hover:underline\">\n            {' '}\n            <i className=\"fas fa-chevron-left mr-2\" />\n            返回所有日程类型\n          </span>\n        </Link>\n      </div>\n      <div className=\"py-4 text-3xl font-medium\">新建日程类型</div>\n\n      <section className=\"pt-10 text-gray-700 body-font\">\n        {generalSection()}\n        {availabilitySection()}\n      </section>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/Header.tsx",[],["612","613"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/GeneralSectionExpand.tsx",["614"],"import React, {useState} from 'react';\nimport {useTransact} from '../../../store';\nimport CancelButton from '../CancelButton';\nimport SingleSelect from '../EventLocationSelect';\nimport Editor from '../../common/Editor';\n\nexport function GeneralSectionExpand({\n  eventType,\n  onClose,\n  onSave,\n  saveButtonLabel,\n}: any) {\n  const [eventTypeValue, setEventTypeValue] = useState(eventType);\n  const [changed, setChanged] = useState(false);\n\n  const markChanged = () => {\n    if (!changed) {\n      setChanged(true);\n    }\n  };\n\n  const save = (eventTypeValue: any) => {\n    if (changed) {\n      onSave(eventTypeValue);\n    }\n  };\n\n  return (\n    <div data-section=\"general\">\n      <div\n        className={`mt-2 border-b lg:border  hover:border-blue-500 border-black lg:rounded `}\n      >\n        <div\n          className={`flex flex-row justify-between ${\n            changed ? '' : 'cursor-pointer'\n          }`}\n          onClick={(e) => {\n            if (!changed) {\n              onClose();\n              e.stopPropagation();\n            }\n          }}\n        >\n          <div className=\"flex flex-row p-2\">\n            <div className=\"px-3\">\n              <i className=\"fas fa-circle text-red-500\" />\n            </div>\n            <div>\n              <div className=\"text-lg\">What event is this?</div>\n              <div className=\"text-gray-700\">{eventTypeValue.name}</div>\n            </div>\n          </div>\n          <div className=\"flex flex-row\">\n            <div className=\"gentle-flex mr-2\">\n              <CancelButton changed={changed} close={onClose} />\n            </div>\n            <div className=\"gentle-flex mx-2 \">\n              <div\n                className=\"cursor-pointer border-gray-500 hover:border-black border px-2 bg-blue-400 text-white\"\n                onClick={(e) => {\n                  save(eventTypeValue);\n                  onClose();\n                  e.stopPropagation();\n                }}\n              >\n                {saveButtonLabel}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"border-t border-b border-gray-300\">\n          <div className=\"px-2 py-1 lg:px-10 lg:py-8\">\n            <div className=\"flex flex-col\">\n              <div className=\"mb-4\">\n                <div className=\"my-3\">Event name *</div>\n                <div className=\"border border-gray-400 cursor-text w-64\">\n                  <input\n                    type=\"text\"\n                    className=\"w-full h-full p-3 focus:outline-none focus:shadow-outline focus:border-blue-700\"\n                    value={eventTypeValue.name}\n                    onChange={(e) => {\n                      setEventTypeValue({\n                        ...eventTypeValue,\n                        name: e.target.value,\n                      });\n                      markChanged();\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className=\"mb-4\">\n                <div className=\"my-3\">Location</div>\n                <SingleSelect\n                  defaultValue={eventTypeValue.location}\n                  onChange={(option: any) => {\n                    setEventTypeValue({\n                      ...eventTypeValue,\n                      location: option.value,\n                    });\n                    markChanged();\n                  }}\n                />\n              </div>\n\n              <div className=\"mb-4\">\n                <div className=\"my-3\">Description/Instructions</div>\n                <Editor\n                  defaultValue={eventTypeValue.description}\n                  onChange={(value: any) => {\n                    setEventTypeValue({\n                      ...eventTypeValue,\n                      description: value,\n                    });\n                    markChanged();\n                  }}\n                />\n              </div>\n\n              <div className=\"mb-4\">\n                <div className=\"my-3\">Event link *</div>\n                <div className=\"flex flex-row\">\n                  <div className=\"mr-3\">mytime.com/ycy/</div>\n                  <div className=\"border border-gray-400 cursor-text \">\n                    <input\n                      type=\"text\"\n                      className=\"w-full lg:w-48 p-1 lg:p-3 focus:outline-none focus:shadow-outline focus:border-blue-700\"\n                      value={eventTypeValue.url}\n                      onChange={(e) => {\n                        setEventTypeValue({\n                          ...eventTypeValue,\n                          url: e.target.value,\n                        });\n                        markChanged();\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"mb-4\">\n                <div className=\"my-3\">Event color</div>\n                <div className=\"flex flex-row\">\n                  {['red', 'green', 'blue'].map((color) => {\n                    return (\n                      <div\n                        className=\"mr-2 cursor-pointer\"\n                        key={color}\n                        onClick={() => {\n                          setEventTypeValue({\n                            ...eventTypeValue,\n                            color,\n                          });\n                          markChanged();\n                        }}\n                      >\n                        <i\n                          className={`fas ${\n                            color === eventTypeValue.color\n                              ? 'fa-check-circle'\n                              : 'fa-circle'\n                          }  fa-2x text-${color}-500`}\n                        />\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row justify-end border-t border-gray-300 py-4\">\n            <div className=\"gentle-flex mr-2\">\n              <CancelButton changed={changed} close={onClose} />\n            </div>\n            <div className=\"gentle-flex mx-2 \">\n              <div\n                className=\"cursor-pointer border-gray-500 hover:border-black border px-2 bg-blue-400 text-white\"\n                onClick={(e) => {\n                  save(eventTypeValue);\n                  onClose();\n                  e.stopPropagation();\n                }}\n              >\n                {saveButtonLabel}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/GeneralSectionCollapsed.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/AvailabilitySectionExpand.tsx",["615","616","617","618","619","620"],"import React, {useEffect, useState} from 'react';\nimport {\n  PERIOD_TYPE_AVAILABLE_MOVING,\n  PERIOD_TYPE_FIXED,\n  PERIOD_TYPE_MOVING,\n  PERIOD_TYPE_UNLIMITED,\n  WEEKDAYS,\n} from '../../constants';\nimport {useQuery, useTransact} from '../../../store';\nimport _ from 'lodash';\nimport {EditingContext} from '../../../hooks/EditingContext';\nimport CancelButton from '../CancelButton';\nimport BookingRangeContainer from '../BookingRangeContainer';\nimport ScheduleContainer from '../ScheduleContainer';\nimport DurationSelector from '../../common/DurationSelector';\nimport BufferSelector from '../../common/BufferSelector';\nimport {useEvents} from '../../EventsProvider';\n\nfunction DurationContainer() {\n  return (\n    <div className=\"pt32 pb56 border-b border-gray-400\">\n      <DurationSelector />\n    </div>\n  );\n}\n\nfunction BuffersContainer() {\n  return (\n    <div className=\"pt32 pb56\">\n      <BufferSelector />\n    </div>\n  );\n}\n\nfunction DateRangeDescription({periodType, maxBookingTime}: any) {\n  switch (periodType) {\n    case PERIOD_TYPE_MOVING:\n    case PERIOD_TYPE_AVAILABLE_MOVING:\n      if (maxBookingTime) {\n        return <span>{maxBookingTime / 60 / 24} rolling days</span>;\n      } else {\n        return <span></span>;\n      }\n    case PERIOD_TYPE_FIXED:\n    case PERIOD_TYPE_UNLIMITED:\n      return <span>in construction</span>;\n  }\n  return <span />;\n}\n\nexport default function AvailabilitySectionExpand({\n  user,\n  eventType,\n  onClose,\n  onSave,\n  saveButtonLabel,\n}: any) {\n  const transact = useTransact();\n  const [userInfo, setUserInfo] = useState(user);\n  const [eventTypeValue, setEventTypeValue] = useState(eventType);\n  const [changed, setChanged] = useState(false);\n  const [forceCancel, setForceCancel] = useState(false);\n\n  const {settings} = useEvents();\n  const {schedule_id, default_schedule_id} = settings;\n  console.log('sch', schedule_id, default_schedule_id);\n\n  const {schedules: sch2, schedulesById} = useEvents();\n  const schedules = sch2.map((id: string) => schedulesById[id]);\n  const [currentSchedule, setCurrentSchedule] = useState({\n    ...schedules[0],\n    rules: JSON.parse(schedules[0].rules),\n  });\n\n  const rules = currentSchedule\n    ? WEEKDAYS.map((day) => {\n        // @ts-ignore\n        const rule = currentSchedule.rules.find(\n          (rule: any) => rule.wday === day\n        );\n        if (rule) {\n          if (rule.available === undefined) {\n            return {...rule, available: true};\n          } else {\n            return rule;\n          }\n        }\n        return {\n          type: 'wday',\n          wday: day,\n          intervals: [],\n          available: false,\n        };\n      })\n    : [];\n\n  const save = (eventTypeValue: any) => {\n    if (changed) {\n      console.log('Save time', eventTypeValue);\n      onSave(eventTypeValue);\n      // const txs = [];\n      //\n      // const tx: any = {};\n      // Object.keys(eventTypeValue).forEach((key) => {\n      //   tx[`:eventType/${key}`] = eventTypeValue[key];\n      // });\n      // txs.push(tx);\n      //\n      // txs.push({\n      //   // @ts-ignore\n      //   ':schedule/uid': currentSchedule.id,\n      //   // @ts-ignore\n      //   ':schedule/rules': currentSchedule.rules,\n      // });\n      //\n      // transact(txs);\n    }\n  };\n\n  const setPeriodType = (type: string) => {\n    markChanged();\n    setEventTypeValue({\n      ...eventTypeValue,\n      period_type: type,\n    });\n  };\n  const setMaxBookingTime = (value: number) => {\n    markChanged();\n\n    setEventTypeValue({\n      ...eventTypeValue,\n      max_booking_time: value * 60 * 24,\n    });\n  };\n  const setStartEndDate = (start: string, end: string) => {\n    markChanged();\n\n    setEventTypeValue({\n      ...eventTypeValue,\n      start_date: start,\n      end_date: end,\n    });\n  };\n\n  const setDuration = (duration: number) => {\n    markChanged();\n    setEventTypeValue({\n      ...eventTypeValue,\n      duration,\n    });\n  };\n\n  const setActiveAvailabilityRule = () => {};\n  const setScheduleRuleEnabled = (\n    type: string,\n    date: string,\n    enabled: boolean\n  ) => {\n    const copy = _.cloneDeep(currentSchedule);\n    // @ts-ignore\n    const rule = copy.rules.find((rule: any) => rule.wday === date);\n    rule.available = enabled;\n\n    setCurrentSchedule(copy);\n    markChanged();\n  };\n\n  const setIntervalTime = (\n    date: string,\n    index: number,\n    type: string,\n    value: string\n  ) => {\n    console.log('set from', date, index, value, currentSchedule);\n    if (currentSchedule) {\n      const copy = _.cloneDeep(currentSchedule);\n      // @ts-ignore\n      const rule = copy.rules.find(\n        (rule: any) => rule.wday === date || rule.date === date\n      );\n      if (rule) {\n        if (rule.intervals) {\n          const interval = rule.intervals[index];\n          if (interval) {\n            interval[type] = value;\n            setCurrentSchedule(copy);\n            markChanged();\n            return;\n          }\n        }\n      }\n    }\n    console.log('Err set rule from ');\n  };\n\n  const setRuleFrom = (date: string, index: number, value: string) => {\n    setIntervalTime(date, index, 'from', value);\n  };\n\n  const setRuleTo = (date: string, index: number, value: string) => {\n    setIntervalTime(date, index, 'to', value);\n  };\n  const addInterval = (date: string) => {\n    if (currentSchedule) {\n      const copy = _.cloneDeep(currentSchedule);\n      // @ts-ignore\n      const rule = copy.rules.find(\n        (rule: any) => rule.wday === date || rule.date === date\n      );\n      console.log('add', rule);\n      if (rule) {\n        if (rule.intervals) {\n          rule.intervals.push({\n            from: '09:00',\n            to: '17:00',\n          });\n          rule.available = true;\n          setCurrentSchedule(copy);\n          markChanged();\n          return;\n        }\n      }\n    }\n  };\n\n  const removeInterval = (date: string, index: number) => {\n    if (currentSchedule) {\n      const copy = _.cloneDeep(currentSchedule);\n      // @ts-ignore\n      const rule = copy.rules.find(\n        (rule: any) => rule.wday === date || rule.date === date\n      );\n      if (rule) {\n        if (rule.intervals) {\n          rule.intervals.splice(index, 1);\n\n          if (rule.intervals.length === 0) {\n            rule.available = false;\n          }\n          setCurrentSchedule(copy);\n          markChanged();\n          return;\n        }\n      }\n    }\n  };\n  const duplicateRule = () => {};\n\n  const setBeforeBufferTime = (before_buffer_time: number) => {\n    markChanged();\n    setEventTypeValue({\n      ...eventTypeValue,\n      before_buffer_time,\n    });\n  };\n\n  const setAfterBufferTime = (after_buffer_time: number) => {\n    markChanged();\n    setEventTypeValue({\n      ...eventTypeValue,\n      after_buffer_time,\n    });\n  };\n\n  const markChanged = () => {\n    if (!changed) {\n      setChanged(true);\n    }\n  };\n\n  return (\n    <EditingContext.Provider\n      value={{\n        value: eventTypeValue,\n        activeAvailabilityRule: schedule_id,\n        setActiveAvailabilityRule,\n        ownAvailabilityRule: default_schedule_id,\n        currentSchedule,\n        rules,\n        setScheduleRuleEnabled,\n        setRuleFrom,\n        setRuleTo,\n        addInterval,\n        removeInterval,\n        setPeriodType,\n        setMaxBookingTime,\n        setStartEndDate,\n        setDuration,\n        setBeforeBufferTime,\n        setAfterBufferTime,\n        markChanged,\n      }}\n    >\n      <div\n        data-section=\"availability\"\n        className=\"mt-2 border-b lg:border  hover:border-blue-500 border-black lg:rounded\"\n      >\n        <div\n          className=\"flex flex-row justify-between cursor-pointer\"\n          onClick={(e) => {\n            if (!changed) {\n              onClose();\n              e.stopPropagation();\n            }\n          }}\n        >\n          <div className=\"flex flex-row p-2 \">\n            <div className=\"px-3\">\n              <i className=\"far fa-calendar-check\" />\n            </div>\n            <div>\n              <div className=\"text-lg\">When can people book this event?</div>\n              <div className=\"text-gray-700\">\n                {eventTypeValue.duration} min,{' '}\n                <DateRangeDescription\n                  periodType={eventTypeValue.period_type}\n                  maxBookingTime={eventTypeValue.max_booking_time}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row\">\n            <div className=\"gentle-flex mr-2\">\n              <CancelButton changed={changed} close={onClose} />\n            </div>\n            <div className=\"gentle-flex mx-2 \">\n              <div\n                className=\"cursor-pointer border-gray-500 hover:border-black border px-2 bg-blue-400 text-white\"\n                onClick={() => {\n                  console.log('Value', eventTypeValue, changed);\n                  save(eventTypeValue);\n                  onClose();\n                }}\n              >\n                {saveButtonLabel}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"border-t border-b border-gray-200\">\n          <div className=\"px-2 py-1 lg:px-10 lg:py-8\">\n            <div className=\"flex flex-col\">\n              <BookingRangeContainer />\n              <ScheduleContainer\n                user={userInfo}\n                setUser={setUserInfo}\n                eventTypeValue={eventTypeValue}\n                setEventTypeValue={setEventTypeValue}\n              />\n              <DurationContainer />\n              <BuffersContainer />\n            </div>\n          </div>\n          <div className=\"flex flex-row justify-end  border-t border-gray-400 py-4\">\n            <div className=\"gentle-flex mr-2\">\n              <CancelButton changed={changed} close={onClose} />\n            </div>\n            <div className=\"gentle-flex mx-2 \">\n              <div\n                className=\"cursor-pointer border-gray-500 hover:border-black border px-2 bg-blue-400 text-white\"\n                onClick={() => {\n                  save(eventTypeValue);\n                  onClose();\n                }}\n              >\n                {saveButtonLabel}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </EditingContext.Provider>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/AvailabilitySectionCollapsed.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/InviteeQuestionsSection.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/sections/NotifyPolicySection.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/NavSection.tsx",[],["621","622"],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/events/ScheduledEvents.tsx",[],"/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventTypes.tsx",["623","624","625","626","627","628","629","630","631"],"import React, {useEffect} from 'react';\nimport {useQuery, useQueryOne, useStore} from '../store';\nimport {Link} from 'react-router-dom';\nimport {useEvents} from './EventsProvider';\nimport {fetchSchedules, fetchUserProfile} from '../api';\nimport CreateEventTypeDialog from './events/CreateEventTypeModal';\nimport {\n  SearchBox,\n  ISearchBoxStyles,\n  DefaultButton,\n  PrimaryButton,\n} from '@fluentui/react';\nimport EventTypeCard from './EventTypeCard';\n\nconst searchBoxStyles: Partial<ISearchBoxStyles> = {root: {width: 200}};\n\nexport const SearchBoxSmallExample = () => (\n  <SearchBox\n    styles={searchBoxStyles}\n    placeholder=\"Search\"\n    onEscape={(ev) => {\n      console.log('Custom onEscape Called');\n    }}\n    onClear={(ev) => {\n      console.log('Custom onClear Called');\n    }}\n    onChange={(_, newValue) =>\n      console.log('SearchBox onChange fired: ' + newValue)\n    }\n    onSearch={(newValue) =>\n      console.log('SearchBox onSearch fired: ' + newValue)\n    }\n  />\n);\n\nexport function EventTypes() {\n  const {profile, eventTypes, fetchAllEventTypes} = useEvents();\n  useEffect(() => {\n    fetchAllEventTypes();\n  }, []);\n\n  return (\n    <div className=\"container lg:px-10 inner-container mx-auto lg:px-8 py-4 flex flex-col\">\n      <div className=\"mt-6 py-4 text-3xl font-medium\">日程类型</div>\n\n      <section className=\"pt-10 text-gray-700 body-font\">\n        <div className=\"border-b border-gray-500 flex flex-row justify-between\">\n          <div className=\"gentle-flex mb-2\">\n            <SearchBoxSmallExample />\n          </div>\n          <div className=\"flex flex-row mb-2\">\n            <Link to=\"/event_types/add\" className=\"cursor-pointer mr-2 py-1 \">\n              <DefaultButton text=\"Add Event Type\" />\n            </Link>\n            <div className=\"cursor-pointer mr-2 py-1 \">\n              <DefaultButton text=\"Copy Link\" />\n            </div>\n            <div className=\"cursor-pointer  py-1 \">\n              <DefaultButton text=\"Add to Website\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"grid lg:grid-cols-3 grid-cols-1\">\n          {eventTypes.map((eventTypeId: any) => {\n            return (\n              <div key={eventTypeId} className=\"pt-4 pl-4\">\n                <EventTypeCard eventTypeId={eventTypeId} />\n              </div>\n            );\n          })}\n        </div>\n      </section>\n    </div>\n  );\n}\n\n// export default function Home() {\n//   const [store, setStore] = useStore();\n//\n//   useEffect(() => {\n//     setStore('1', conn, db);\n//   }, []);\n//\n//   if (!store) {\n//     return <div>Loading...</div>;\n//   }\n//\n//   return <AppContent />;\n// }\n// export function Home() {\n//   const {currentUser, account, profile, eventTypes, createEventType, fetchAllEventTypes} = useEvents();\n//\n//   console.log('Home', currentUser, account, profile)\n//\n//   return (\n//     <div className=\"flex flex-col\">\n//       <div\n//         onClick={() => {\n//           console.log('click');\n//           createEventType();\n//         }}\n//       >\n//         Create\n//       </div>\n//       <div\n//         onClick={() => {\n//           fetchAllEventTypes();\n//         }}\n//       >\n//         List\n//       </div>\n//       <div\n//         onClick={() => {\n//           fetchUserProfile().then(r => console.log(r))\n//         }}\n//       >\n//         List\n//       </div>\n//     </div>\n//   );\n// }\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/EventTypeCard.tsx",["632","633","634","635","636","637","638","639","640","641","642","643","644","645","646","647"],"import React, {useEffect} from 'react';\n\nimport {\n  Card,\n  ICardTokens,\n  ICardSectionStyles,\n  ICardSectionTokens,\n} from '@fluentui/react-cards';\nimport {\n  ActionButton,\n  FontWeights,\n  IButtonStyles,\n  Icon,\n  IIconStyles,\n  Image,\n  Persona,\n  Stack,\n  IStackTokens,\n  Text,\n  ITextStyles,\n  DefaultButton,\n} from '@fluentui/react';\nimport {useEvents} from './EventsProvider';\nimport {Link} from 'react-router-dom';\n\nexport default function EventTypeCard({eventTypeId}: any) {\n  const {eventTypesById} = useEvents();\n  const eventType = eventTypesById[eventTypeId];\n  const {id, name, description, duration, url, kind, enabled} = eventType;\n\n  const footerCardSectionTokens: ICardSectionTokens = {\n    padding: '12px 0px 0px',\n  };\n  return (\n    <div>\n      <Card aria-label=\"Clickable vertical card with image bleeding at the center of the card\">\n        <Card.Item>\n          <div className=\"h-2 bg-red-300 rounded-t\" />\n        </Card.Item>\n        <Card.Item>\n          <div className=\"flex flex-row justify-between px-4 pt-4\">\n            <i className=\"far fa-square  opacity-75 hover:opacity-100\" />\n            <div className=\"opacity-75 hover:opacity-100\">\n              <i className=\"fas fa-cog mr-1\" />\n              <i className=\"fas fa-caret-down\" />\n            </div>\n          </div>\n        </Card.Item>\n        <Card.Item fill className=\"cursor-pointer hover:bg-var-gray-200\">\n          <Link to={`/event_types/${id}`}>\n            <div className=\"px-4 py-4 border-b border-gray-300\">\n              <div className=\"text-xl\">{name}</div>\n              <div className=\"text-gray-500 text-sm opacity-75\">\n                {duration} mins, One-on-One\n              </div>\n            </div>\n          </Link>\n        </Card.Item>\n\n        <Card.Section\n          horizontal\n          tokens={footerCardSectionTokens}\n          className=\"px-4 pb-2\"\n        >\n          <a\n            href={'/ycy/' + url}\n            className=\"block text-sm text-blue-500 hover:underline\"\n            role=\"menuitem\"\n          >\n            /{url}\n          </a>\n          <Stack.Item grow={1}>\n            <span />\n          </Stack.Item>\n          <DefaultButton text=\"Copy link\" />\n        </Card.Section>\n      </Card>\n    </div>\n  );\n}\n","/Users/guanghui/guanghui.io/sandbox/papercups-io/papercups/assets/src/components-new/book/BookProvider.tsx",["648","649"],"import React, {useContext, useEffect, useState} from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {\n  fetchUserProfileBySlug,\n  fetchEventTypeByUrl as _fetchEventTypeByUrl,\n  fetchScheduleById,\n  createEvent as _createEvent\n} from '../../api';\nimport moment from 'moment';\n\nexport const BookContext = React.createContext<{\n  selectedMonth: moment.Moment | null;\n  selectedDate: moment.Moment | null;\n  selectedTime: string | null;\n  updateSelectedMonth: (month: moment.Moment) => void;\n  updateSelectedDate: (date: moment.Moment) => void;\n  updateSelectedTime: (time: string) => void;\n\n  eventTypes: {[key: string]: any};\n  fetchEventTypeByUrl: (user: string, url: string) => Promise<any>;\n\n  userProfileBySlug: {[key: string]: any};\n  fetchUserProfile: (slug: string) => Promise<any>;\n\n  schedules: {[key: string]: any};\n  fetchSchedule: (user: string, schedule_id: string) => Promise<any>;\n\n  createEvent: () => Promise<any>;\n}>({\n  selectedMonth: null,\n  selectedDate: null,\n  selectedTime: null,\n  updateSelectedMonth: (month: moment.Moment) => {},\n  updateSelectedDate: (date: moment.Moment) => {},\n  updateSelectedTime: (time: string) => {},\n\n  eventTypes: {},\n  fetchEventTypeByUrl: (user: string, url: string) => Promise.resolve({}),\n\n  userProfileBySlug: {},\n  fetchUserProfile: (slug: string) => Promise.resolve([]),\n\n  schedules: {},\n  fetchSchedule: (user: string, schedule_id: string) => Promise.resolve({}),\n\n  createEvent: () => Promise.resolve({}),\n});\n\nexport const useBook = () => useContext(BookContext);\n\ntype Props = React.PropsWithChildren<{}>;\n\nconst BookProvider = (props: Props) => {\n  const [selectedMonth, setSelectedMonth] = useState<moment.Moment | null>(\n    null\n  );\n  const [selectedDate, setSelectedDate] = useState<moment.Moment | null>(null);\n  const [selectedTime, setSelectedTime] = useState<string | null>(null);\n\n  const updateSelectedMonth = (date: moment.Moment) => {\n    setSelectedMonth(date);\n  };\n\n  const updateSelectedDate = (date: moment.Moment) => {\n    setSelectedDate(date);\n  };\n\n  const updateSelectedTime = (time: string) => {\n    setSelectedTime(time);\n  };\n\n  const [eventTypes, setEventTypes] = useState<{\n    [key: string]: any;\n  }>({});\n\n  const [userProfileBySlug, setUserProfileBySlug] = useState<{\n    [key: string]: any;\n  }>({});\n\n  const [schedules, setSchedules] = useState<{\n    [key: string]: any;\n  }>({});\n\n  useEffect(() => {}, []);\n\n  const fetchUserProfile = (slug: string) => {\n    return fetchUserProfileBySlug(slug).then((r) => {\n      setUserProfileBySlug({\n        ...userProfileBySlug,\n        [slug]: r,\n      });\n      return r;\n    });\n  };\n\n  const fetchEventTypeByUrl = (user: string, url: string) => {\n    return _fetchEventTypeByUrl(user, url).then((r) => {\n      setEventTypes({\n        ...eventTypes,\n        [user]: {\n          ...eventTypes[user],\n          [url]: r,\n        },\n      });\n      return r;\n    });\n  };\n\n  const fetchSchedule = (user: string, schedule_id: string) => {\n    return fetchScheduleById(user, schedule_id).then((r) => {\n      setSchedules({\n        ...schedules,\n        [schedule_id]: r,\n      });\n\n      return r;\n    });\n  };\n\n  const createEvent = () => {\n    return _createEvent()\n  }\n\n  return (\n    <BookContext.Provider\n      value={{\n        selectedMonth,\n        selectedDate,\n        selectedTime,\n        updateSelectedMonth,\n        updateSelectedDate,\n        updateSelectedTime,\n\n        eventTypes,\n        fetchEventTypeByUrl,\n\n        userProfileBySlug,\n        fetchUserProfile,\n\n        schedules,\n        fetchSchedule,\n\n        createEvent,\n      }}\n    >\n      {props.children}\n    </BookContext.Provider>\n  );\n};\n\nexport default BookProvider;\n",{"ruleId":"650","replacedBy":"651"},{"ruleId":"652","replacedBy":"653"},{"ruleId":"654","severity":1,"message":"655","line":48,"column":1,"nodeType":"656","endLine":51,"endColumn":3},{"ruleId":"657","severity":1,"message":"658","line":12,"column":3,"nodeType":"659","messageId":"660","endLine":12,"endColumn":16},{"ruleId":"657","severity":1,"message":"661","line":29,"column":7,"nodeType":"659","messageId":"660","endLine":29,"endColumn":12},{"ruleId":"657","severity":1,"message":"662","line":148,"column":20,"nodeType":"659","messageId":"660","endLine":148,"endColumn":31},{"ruleId":"657","severity":1,"message":"663","line":150,"column":10,"nodeType":"659","messageId":"660","endLine":150,"endColumn":17},{"ruleId":"657","severity":1,"message":"664","line":25,"column":7,"nodeType":"659","messageId":"660","endLine":25,"endColumn":15},{"ruleId":"657","severity":1,"message":"662","line":248,"column":20,"nodeType":"659","messageId":"660","endLine":248,"endColumn":31},{"ruleId":"657","severity":1,"message":"663","line":250,"column":10,"nodeType":"659","messageId":"660","endLine":250,"endColumn":17},{"ruleId":"650","replacedBy":"665"},{"ruleId":"652","replacedBy":"666"},{"ruleId":"657","severity":1,"message":"667","line":1,"column":16,"nodeType":"659","messageId":"660","endLine":1,"endColumn":25},{"ruleId":"657","severity":1,"message":"668","line":1,"column":27,"nodeType":"659","messageId":"660","endLine":1,"endColumn":35},{"ruleId":"657","severity":1,"message":"669","line":3,"column":3,"nodeType":"659","messageId":"660","endLine":3,"endColumn":14},{"ruleId":"657","severity":1,"message":"670","line":4,"column":3,"nodeType":"659","messageId":"660","endLine":4,"endColumn":9},{"ruleId":"657","severity":1,"message":"671","line":5,"column":3,"nodeType":"659","messageId":"660","endLine":5,"endColumn":11},{"ruleId":"657","severity":1,"message":"672","line":6,"column":3,"nodeType":"659","messageId":"660","endLine":6,"endColumn":8},{"ruleId":"657","severity":1,"message":"673","line":8,"column":3,"nodeType":"659","messageId":"660","endLine":8,"endColumn":22},{"ruleId":"674","severity":1,"message":"675","line":16,"column":11,"nodeType":"676","endLine":16,"endColumn":94},{"ruleId":"674","severity":1,"message":"675","line":32,"column":13,"nodeType":"676","endLine":32,"endColumn":68},{"ruleId":"674","severity":1,"message":"675","line":33,"column":13,"nodeType":"676","endLine":33,"endColumn":68},{"ruleId":"674","severity":1,"message":"675","line":34,"column":13,"nodeType":"676","endLine":34,"endColumn":68},{"ruleId":"674","severity":1,"message":"675","line":35,"column":13,"nodeType":"676","endLine":35,"endColumn":68},{"ruleId":"674","severity":1,"message":"675","line":36,"column":13,"nodeType":"676","endLine":36,"endColumn":68},{"ruleId":"674","severity":1,"message":"675","line":256,"column":17,"nodeType":"676","endLine":256,"endColumn":76},{"ruleId":"674","severity":1,"message":"675","line":298,"column":17,"nodeType":"676","endLine":298,"endColumn":76},{"ruleId":"674","severity":1,"message":"675","line":339,"column":17,"nodeType":"676","endLine":339,"endColumn":76},{"ruleId":"674","severity":1,"message":"675","line":407,"column":11,"nodeType":"676","endLine":407,"endColumn":113},{"ruleId":"674","severity":1,"message":"675","line":434,"column":13,"nodeType":"676","endLine":434,"endColumn":42},{"ruleId":"674","severity":1,"message":"675","line":446,"column":13,"nodeType":"676","endLine":446,"endColumn":47},{"ruleId":"674","severity":1,"message":"675","line":458,"column":13,"nodeType":"676","endLine":458,"endColumn":47},{"ruleId":"674","severity":1,"message":"675","line":472,"column":13,"nodeType":"676","endLine":472,"endColumn":47},{"ruleId":"657","severity":1,"message":"667","line":1,"column":16,"nodeType":"659","messageId":"660","endLine":1,"endColumn":25},{"ruleId":"657","severity":1,"message":"677","line":2,"column":8,"nodeType":"659","messageId":"660","endLine":2,"endColumn":14},{"ruleId":"657","severity":1,"message":"671","line":6,"column":3,"nodeType":"659","messageId":"660","endLine":6,"endColumn":11},{"ruleId":"657","severity":1,"message":"678","line":11,"column":8,"nodeType":"659","messageId":"660","endLine":11,"endColumn":9},{"ruleId":"657","severity":1,"message":"679","line":15,"column":9,"nodeType":"659","messageId":"660","endLine":15,"endColumn":30},{"ruleId":"657","severity":1,"message":"680","line":16,"column":25,"nodeType":"659","messageId":"660","endLine":16,"endColumn":34},{"ruleId":"657","severity":1,"message":"681","line":18,"column":8,"nodeType":"659","messageId":"660","endLine":18,"endColumn":18},{"ruleId":"657","severity":1,"message":"682","line":22,"column":9,"nodeType":"659","messageId":"660","endLine":22,"endColumn":13},{"ruleId":"674","severity":1,"message":"675","line":24,"column":9,"nodeType":"676","endLine":24,"endColumn":92},{"ruleId":"674","severity":1,"message":"675","line":28,"column":11,"nodeType":"676","endLine":28,"endColumn":51},{"ruleId":"674","severity":1,"message":"675","line":29,"column":11,"nodeType":"676","endLine":29,"endColumn":51},{"ruleId":"674","severity":1,"message":"675","line":30,"column":11,"nodeType":"676","endLine":30,"endColumn":51},{"ruleId":"674","severity":1,"message":"675","line":31,"column":11,"nodeType":"676","endLine":31,"endColumn":51},{"ruleId":"650","replacedBy":"683"},{"ruleId":"652","replacedBy":"684"},{"ruleId":"685","severity":1,"message":"686","line":99,"column":6,"nodeType":"687","endLine":99,"endColumn":41,"suggestions":"688"},{"ruleId":"685","severity":1,"message":"689","line":99,"column":20,"nodeType":"690","endLine":99,"endColumn":40},{"ruleId":"657","severity":1,"message":"691","line":2,"column":8,"nodeType":"659","messageId":"660","endLine":2,"endColumn":21},{"ruleId":"657","severity":1,"message":"677","line":5,"column":8,"nodeType":"659","messageId":"660","endLine":5,"endColumn":14},{"ruleId":"657","severity":1,"message":"692","line":12,"column":9,"nodeType":"659","messageId":"660","endLine":12,"endColumn":16},{"ruleId":"685","severity":1,"message":"693","line":26,"column":6,"nodeType":"687","endLine":26,"endColumn":8,"suggestions":"694"},{"ruleId":"657","severity":1,"message":"695","line":86,"column":9,"nodeType":"659","messageId":"660","endLine":86,"endColumn":32},{"ruleId":"657","severity":1,"message":"696","line":6,"column":9,"nodeType":"659","messageId":"660","endLine":6,"endColumn":20},{"ruleId":"674","severity":1,"message":"675","line":54,"column":17,"nodeType":"676","endLine":54,"endColumn":47},{"ruleId":"650","replacedBy":"697"},{"ruleId":"652","replacedBy":"698"},{"ruleId":"657","severity":1,"message":"699","line":69,"column":10,"nodeType":"659","messageId":"660","endLine":69,"endColumn":21},{"ruleId":"657","severity":1,"message":"700","line":69,"column":23,"nodeType":"659","messageId":"660","endLine":69,"endColumn":37},{"ruleId":"685","severity":1,"message":"701","line":94,"column":6,"nodeType":"687","endLine":94,"endColumn":17,"suggestions":"702"},{"ruleId":"657","severity":1,"message":"703","line":258,"column":9,"nodeType":"659","messageId":"660","endLine":258,"endColumn":22},{"ruleId":"657","severity":1,"message":"704","line":1,"column":17,"nodeType":"659","messageId":"660","endLine":1,"endColumn":28},{"ruleId":"657","severity":1,"message":"667","line":1,"column":30,"nodeType":"659","messageId":"660","endLine":1,"endColumn":39},{"ruleId":"657","severity":1,"message":"705","line":2,"column":13,"nodeType":"659","messageId":"660","endLine":2,"endColumn":19},{"ruleId":"657","severity":1,"message":"706","line":6,"column":10,"nodeType":"659","messageId":"660","endLine":6,"endColumn":30},{"ruleId":"657","severity":1,"message":"707","line":8,"column":10,"nodeType":"659","messageId":"660","endLine":8,"endColumn":24},{"ruleId":"657","severity":1,"message":"668","line":1,"column":28,"nodeType":"659","messageId":"660","endLine":1,"endColumn":36},{"ruleId":"657","severity":1,"message":"708","line":12,"column":9,"nodeType":"659","messageId":"660","endLine":12,"endColumn":17},{"ruleId":"657","severity":1,"message":"709","line":13,"column":8,"nodeType":"659","messageId":"660","endLine":13,"endColumn":13},{"ruleId":"657","severity":1,"message":"710","line":14,"column":9,"nodeType":"659","messageId":"660","endLine":14,"endColumn":19},{"ruleId":"657","severity":1,"message":"711","line":16,"column":9,"nodeType":"659","messageId":"660","endLine":16,"endColumn":15},{"ruleId":"657","severity":1,"message":"712","line":17,"column":8,"nodeType":"659","messageId":"660","endLine":17,"endColumn":14},{"ruleId":"657","severity":1,"message":"713","line":17,"column":17,"nodeType":"659","messageId":"660","endLine":17,"endColumn":20},{"ruleId":"657","severity":1,"message":"714","line":18,"column":9,"nodeType":"659","messageId":"660","endLine":18,"endColumn":15},{"ruleId":"657","severity":1,"message":"715","line":21,"column":9,"nodeType":"659","messageId":"660","endLine":21,"endColumn":38},{"ruleId":"685","severity":1,"message":"716","line":101,"column":6,"nodeType":"687","endLine":101,"endColumn":25,"suggestions":"717"},{"ruleId":"657","severity":1,"message":"718","line":134,"column":21,"nodeType":"659","messageId":"660","endLine":134,"endColumn":33},{"ruleId":"657","severity":1,"message":"719","line":8,"column":7,"nodeType":"659","messageId":"660","endLine":8,"endColumn":16},{"ruleId":"657","severity":1,"message":"720","line":13,"column":5,"nodeType":"659","messageId":"660","endLine":13,"endColumn":18},{"ruleId":"657","severity":1,"message":"721","line":14,"column":5,"nodeType":"659","messageId":"660","endLine":14,"endColumn":22},{"ruleId":"657","severity":1,"message":"722","line":15,"column":5,"nodeType":"659","messageId":"660","endLine":15,"endColumn":20},{"ruleId":"657","severity":1,"message":"667","line":1,"column":16,"nodeType":"659","messageId":"660","endLine":1,"endColumn":25},{"ruleId":"657","severity":1,"message":"668","line":1,"column":16,"nodeType":"659","messageId":"660","endLine":1,"endColumn":24},{"ruleId":"657","severity":1,"message":"668","line":1,"column":16,"nodeType":"659","messageId":"660","endLine":1,"endColumn":24},{"ruleId":"657","severity":1,"message":"723","line":16,"column":13,"nodeType":"659","messageId":"660","endLine":16,"endColumn":16},{"ruleId":"657","severity":1,"message":"724","line":21,"column":3,"nodeType":"659","messageId":"660","endLine":21,"endColumn":25},{"ruleId":"657","severity":1,"message":"725","line":75,"column":10,"nodeType":"659","messageId":"660","endLine":75,"endColumn":20},{"ruleId":"685","severity":1,"message":"726","line":140,"column":6,"nodeType":"687","endLine":140,"endColumn":8,"suggestions":"727"},{"ruleId":"685","severity":1,"message":"728","line":277,"column":6,"nodeType":"687","endLine":277,"endColumn":8,"suggestions":"729"},{"ruleId":"657","severity":1,"message":"730","line":485,"column":10,"nodeType":"659","messageId":"660","endLine":485,"endColumn":15},{"ruleId":"657","severity":1,"message":"663","line":486,"column":10,"nodeType":"659","messageId":"660","endLine":486,"endColumn":17},{"ruleId":"657","severity":1,"message":"731","line":489,"column":10,"nodeType":"659","messageId":"660","endLine":489,"endColumn":18},{"ruleId":"657","severity":1,"message":"732","line":490,"column":10,"nodeType":"659","messageId":"660","endLine":490,"endColumn":14},{"ruleId":"657","severity":1,"message":"733","line":490,"column":16,"nodeType":"659","messageId":"660","endLine":490,"endColumn":20},{"ruleId":"657","severity":1,"message":"734","line":572,"column":5,"nodeType":"659","messageId":"660","endLine":572,"endColumn":14},{"ruleId":"657","severity":1,"message":"735","line":573,"column":5,"nodeType":"659","messageId":"660","endLine":573,"endColumn":16},{"ruleId":"685","severity":1,"message":"736","line":597,"column":6,"nodeType":"687","endLine":597,"endColumn":8,"suggestions":"737"},{"ruleId":"657","severity":1,"message":"723","line":3,"column":13,"nodeType":"659","messageId":"660","endLine":3,"endColumn":16},{"ruleId":"657","severity":1,"message":"738","line":4,"column":9,"nodeType":"659","messageId":"660","endLine":4,"endColumn":25},{"ruleId":"657","severity":1,"message":"739","line":8,"column":3,"nodeType":"659","messageId":"660","endLine":8,"endColumn":31},{"ruleId":"657","severity":1,"message":"740","line":9,"column":3,"nodeType":"659","messageId":"660","endLine":9,"endColumn":20},{"ruleId":"657","severity":1,"message":"741","line":10,"column":3,"nodeType":"659","messageId":"660","endLine":10,"endColumn":21},{"ruleId":"657","severity":1,"message":"742","line":11,"column":3,"nodeType":"659","messageId":"660","endLine":11,"endColumn":24},{"ruleId":"657","severity":1,"message":"677","line":17,"column":10,"nodeType":"659","messageId":"660","endLine":17,"endColumn":16},{"ruleId":"650","replacedBy":"743"},{"ruleId":"652","replacedBy":"744"},{"ruleId":"657","severity":1,"message":"745","line":2,"column":9,"nodeType":"659","messageId":"660","endLine":2,"endColumn":20},{"ruleId":"657","severity":1,"message":"667","line":1,"column":16,"nodeType":"659","messageId":"660","endLine":1,"endColumn":25},{"ruleId":"657","severity":1,"message":"708","line":9,"column":9,"nodeType":"659","messageId":"660","endLine":9,"endColumn":17},{"ruleId":"657","severity":1,"message":"746","line":58,"column":9,"nodeType":"659","messageId":"660","endLine":58,"endColumn":17},{"ruleId":"657","severity":1,"message":"699","line":62,"column":10,"nodeType":"659","messageId":"660","endLine":62,"endColumn":21},{"ruleId":"657","severity":1,"message":"700","line":62,"column":23,"nodeType":"659","messageId":"660","endLine":62,"endColumn":37},{"ruleId":"657","severity":1,"message":"703","line":247,"column":9,"nodeType":"659","messageId":"660","endLine":247,"endColumn":22},{"ruleId":"650","replacedBy":"747"},{"ruleId":"652","replacedBy":"748"},{"ruleId":"657","severity":1,"message":"708","line":2,"column":9,"nodeType":"659","messageId":"660","endLine":2,"endColumn":17},{"ruleId":"657","severity":1,"message":"696","line":2,"column":19,"nodeType":"659","messageId":"660","endLine":2,"endColumn":30},{"ruleId":"657","severity":1,"message":"749","line":2,"column":32,"nodeType":"659","messageId":"660","endLine":2,"endColumn":40},{"ruleId":"657","severity":1,"message":"750","line":5,"column":9,"nodeType":"659","messageId":"660","endLine":5,"endColumn":23},{"ruleId":"657","severity":1,"message":"751","line":5,"column":25,"nodeType":"659","messageId":"660","endLine":5,"endColumn":41},{"ruleId":"657","severity":1,"message":"752","line":6,"column":8,"nodeType":"659","messageId":"660","endLine":6,"endColumn":29},{"ruleId":"657","severity":1,"message":"753","line":11,"column":3,"nodeType":"659","messageId":"660","endLine":11,"endColumn":16},{"ruleId":"657","severity":1,"message":"754","line":37,"column":10,"nodeType":"659","messageId":"660","endLine":37,"endColumn":17},{"ruleId":"685","severity":1,"message":"755","line":40,"column":6,"nodeType":"687","endLine":40,"endColumn":8,"suggestions":"756"},{"ruleId":"657","severity":1,"message":"667","line":1,"column":16,"nodeType":"659","messageId":"660","endLine":1,"endColumn":25},{"ruleId":"657","severity":1,"message":"757","line":5,"column":3,"nodeType":"659","messageId":"660","endLine":5,"endColumn":14},{"ruleId":"657","severity":1,"message":"758","line":6,"column":3,"nodeType":"659","messageId":"660","endLine":6,"endColumn":21},{"ruleId":"657","severity":1,"message":"759","line":10,"column":3,"nodeType":"659","messageId":"660","endLine":10,"endColumn":15},{"ruleId":"657","severity":1,"message":"760","line":11,"column":3,"nodeType":"659","messageId":"660","endLine":11,"endColumn":14},{"ruleId":"657","severity":1,"message":"761","line":12,"column":3,"nodeType":"659","messageId":"660","endLine":12,"endColumn":16},{"ruleId":"657","severity":1,"message":"762","line":13,"column":3,"nodeType":"659","messageId":"660","endLine":13,"endColumn":7},{"ruleId":"657","severity":1,"message":"763","line":14,"column":3,"nodeType":"659","messageId":"660","endLine":14,"endColumn":14},{"ruleId":"657","severity":1,"message":"764","line":15,"column":3,"nodeType":"659","messageId":"660","endLine":15,"endColumn":8},{"ruleId":"657","severity":1,"message":"765","line":16,"column":3,"nodeType":"659","messageId":"660","endLine":16,"endColumn":10},{"ruleId":"657","severity":1,"message":"766","line":18,"column":3,"nodeType":"659","messageId":"660","endLine":18,"endColumn":15},{"ruleId":"657","severity":1,"message":"767","line":19,"column":3,"nodeType":"659","messageId":"660","endLine":19,"endColumn":7},{"ruleId":"657","severity":1,"message":"768","line":20,"column":3,"nodeType":"659","messageId":"660","endLine":20,"endColumn":14},{"ruleId":"657","severity":1,"message":"769","line":29,"column":20,"nodeType":"659","messageId":"660","endLine":29,"endColumn":31},{"ruleId":"657","severity":1,"message":"770","line":29,"column":48,"nodeType":"659","messageId":"660","endLine":29,"endColumn":52},{"ruleId":"657","severity":1,"message":"771","line":29,"column":54,"nodeType":"659","messageId":"660","endLine":29,"endColumn":61},{"ruleId":"657","severity":1,"message":"772","line":2,"column":9,"nodeType":"659","messageId":"660","endLine":2,"endColumn":19},{"ruleId":"657","severity":1,"message":"669","line":2,"column":21,"nodeType":"659","messageId":"660","endLine":2,"endColumn":32},"no-native-reassign",["773"],"no-negated-in-lhs",["774"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'DefaultButton' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'setRedirect' is assigned a value but never used.","'loading' is assigned a value but never used.","'Register' is defined but never used.",["773"],["774"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useLocation' is defined but never used.","'Switch' is defined but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","'RouteComponentProps' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Header' is defined but never used.","'_' is defined but never used.","'ConversationsProvider' is defined but never used.","'useEvents' is defined but never used.","'NavSection' is defined but never used.","'auth' is assigned a value but never used.",["773"],["774"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'args', 'callback', and 'sortBy'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["775"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","'EventTypeEdit' is defined but never used.","'useAuth' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchAllSchedules'. Either include it or remove the dependency array.",["776"],"'inviteeQuestionsSection' is assigned a value but never used.","'useQueryOne' is defined but never used.",["773"],["774"],"'forceCancel' is assigned a value but never used.","'setForceCancel' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'activeAvailabilityRule'. Either include it or remove the dependency array.",["777"],"'duplicateRule' is assigned a value but never used.","'useCallback' is defined but never used.","'Dialog' is defined but never used.","'useDebouncedTransact' is defined but never used.","'EditingContext' is defined but never used.","'useQuery' is defined but never used.","'dayjs' is defined but never used.","'listOfTime' is defined but never used.","'random' is defined but never used.","'moment' is defined but never used.","'now' is defined but never used.","'number' is defined but never used.","'DayPickerSingleDateController' is defined but never used.","React Hook useCallback has an unnecessary dependency: 'selectRef.current'. Either exclude it or remove the dependency array. Mutable values like 'selectRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["778"],"'setCheckPass' is assigned a value but never used.","'customKey' is assigned a value but never used.","'setPeriodType' is assigned a value but never used.","'setMaxBookingTime' is assigned a value but never used.","'setStartEndDate' is assigned a value but never used.","'API' is defined but never used.","'isInclusivelyBeforeDay' is defined but never used.","'BookRecord' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchUserProfile', 'user', and 'userProfileBySlug'. Either include them or remove the dependency array.",["779"],"React Hook useEffect has missing dependencies: 'date', 'fetchEventTypeByUrl', 'fetchSchedule', 'fetchUserProfile', 'month', 'type', 'updateSelectedDate', 'updateSelectedMonth', and 'user'. Either include them or remove the dependency array.",["780"],"'error' is assigned a value but never used.","'pathname' is assigned a value but never used.","'user' is assigned a value but never used.","'type' is assigned a value but never used.","'schedules' is assigned a value but never used.","'createEvent' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'date', 'datetime', 'fetchEventTypeByUrl', 'fetchSchedule', 'fetchUserProfile', 'month', 'type', 'updateSelectedDate', 'updateSelectedMonth', 'updateSelectedTime', and 'user'. Either include them or remove the dependency array.",["781"],"'EventGeneralEdit' is defined but never used.","'PERIOD_TYPE_AVAILABLE_MOVING' is defined but never used.","'PERIOD_TYPE_FIXED' is defined but never used.","'PERIOD_TYPE_MOVING' is defined but never used.","'PERIOD_TYPE_UNLIMITED' is defined but never used.",["773"],["774"],"'useTransact' is defined but never used.","'transact' is assigned a value but never used.",["773"],["774"],"'useStore' is defined but never used.","'fetchSchedules' is defined but never used.","'fetchUserProfile' is defined but never used.","'CreateEventTypeDialog' is defined but never used.","'PrimaryButton' is defined but never used.","'profile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchAllEventTypes'. Either include it or remove the dependency array.",["782"],"'ICardTokens' is defined but never used.","'ICardSectionStyles' is defined but never used.","'ActionButton' is defined but never used.","'FontWeights' is defined but never used.","'IButtonStyles' is defined but never used.","'Icon' is defined but never used.","'IIconStyles' is defined but never used.","'Image' is defined but never used.","'Persona' is defined but never used.","'IStackTokens' is defined but never used.","'Text' is defined but never used.","'ITextStyles' is defined but never used.","'description' is assigned a value but never used.","'kind' is assigned a value but never used.","'enabled' is assigned a value but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"783","fix":"784"},{"desc":"785","fix":"786"},{"desc":"787","fix":"788"},{"desc":"789","fix":"790"},{"desc":"791","fix":"792"},{"desc":"793","fix":"794"},{"desc":"795","fix":"796"},{"desc":"797","fix":"798"},"Update the dependencies array to be: [args, callback, conn, query, sortBy]",{"range":"799","text":"800"},"Update the dependencies array to be: [fetchAllSchedules]",{"range":"801","text":"802"},"Update the dependencies array to be: [activeAvailabilityRule, schedules]",{"range":"803","text":"804"},"Update the dependencies array to be: []",{"range":"805","text":"806"},"Update the dependencies array to be: [fetchUserProfile, user, userProfileBySlug]",{"range":"807","text":"808"},"Update the dependencies array to be: [date, fetchEventTypeByUrl, fetchSchedule, fetchUserProfile, month, type, updateSelectedDate, updateSelectedMonth, user]",{"range":"809","text":"810"},"Update the dependencies array to be: [date, datetime, fetchEventTypeByUrl, fetchSchedule, fetchUserProfile, month, type, updateSelectedDate, updateSelectedMonth, updateSelectedTime, user]",{"range":"811","text":"812"},"Update the dependencies array to be: [fetchAllEventTypes]",{"range":"813","text":"814"},[2308,2343],"[args, callback, conn, query, sortBy]",[1163,1165],"[fetchAllSchedules]",[2789,2800],"[activeAvailabilityRule, schedules]",[3556,3575],"[]",[4322,4324],"[fetchUserProfile, user, userProfileBySlug]",[7722,7724],"[date, fetchEventTypeByUrl, fetchSchedule, fetchUserProfile, month, type, updateSelectedDate, updateSelectedMonth, user]",[16877,16879],"[date, datetime, fetchEventTypeByUrl, fetchSchedule, fetchUserProfile, month, type, updateSelectedDate, updateSelectedMonth, updateSelectedTime, user]",[1134,1136],"[fetchAllEventTypes]"]